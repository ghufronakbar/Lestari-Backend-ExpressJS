
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.16.1
 * Query Engine version: 34ace0eb2704183d2c05b60b52fba5c43c13f303
 */
Prisma.prismaVersion = {
  client: "5.16.1",
  engine: "34ace0eb2704183d2c05b60b52fba5c43c13f303"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminsScalarFieldEnum = {
  id_admin: 'id_admin',
  email: 'email',
  password: 'password',
  refresh_token: 'refresh_token',
  ip_address: 'ip_address'
};

exports.Prisma.AnimalsScalarFieldEnum = {
  id_animal: 'id_animal',
  local_name: 'local_name',
  latin_name: 'latin_name',
  habitat: 'habitat',
  description: 'description',
  city: 'city',
  longitude: 'longitude',
  latitude: 'latitude',
  image: 'image',
  amount: 'amount',
  id_user: 'id_user',
  date: 'date',
  updated_at: 'updated_at'
};

exports.Prisma.History_Request_DatasScalarFieldEnum = {
  id_history_request_data: 'id_history_request_data',
  email: 'email',
  name: 'name',
  profession: 'profession',
  instances: 'instances',
  subject: 'subject',
  body: 'body',
  id_send_data: 'id_send_data',
  id_user: 'id_user',
  date: 'date'
};

exports.Prisma.OtpsScalarFieldEnum = {
  id_otp: 'id_otp',
  email: 'email',
  otp: 'otp',
  expired_at: 'expired_at',
  used: 'used'
};

exports.Prisma.Request_AccountsScalarFieldEnum = {
  id_request_account: 'id_request_account',
  name: 'name',
  email: 'email',
  phone: 'phone',
  profession: 'profession',
  instances: 'instances',
  subject: 'subject',
  body: 'body',
  date: 'date',
  approve: 'approve'
};

exports.Prisma.Request_DatasScalarFieldEnum = {
  id_request_data: 'id_request_data',
  name: 'name',
  email: 'email',
  profession: 'profession',
  instances: 'instances',
  subject: 'subject',
  body: 'body',
  date: 'date',
  approve: 'approve',
  id_user: 'id_user',
  url: 'url'
};

exports.Prisma.Send_DatasScalarFieldEnum = {
  id_send_data: 'id_send_data',
  local_name: 'local_name',
  latin_name: 'latin_name',
  habitat: 'habitat',
  description: 'description',
  city: 'city',
  longitude: 'longitude',
  latitude: 'latitude',
  image: 'image',
  amount: 'amount',
  date_start: 'date_start',
  date_end: 'date_end'
};

exports.Prisma.UsersScalarFieldEnum = {
  id_user: 'id_user',
  email: 'email',
  name: 'name',
  phone: 'phone',
  password: 'password',
  picture: 'picture',
  refresh_token: 'refresh_token',
  created_at: 'created_at',
  updated_at: 'updated_at',
  status: 'status',
  ip_address: 'ip_address'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AdminsOrderByRelevanceFieldEnum = {
  email: 'email',
  password: 'password',
  refresh_token: 'refresh_token',
  ip_address: 'ip_address'
};

exports.Prisma.AnimalsOrderByRelevanceFieldEnum = {
  local_name: 'local_name',
  latin_name: 'latin_name',
  habitat: 'habitat',
  description: 'description',
  city: 'city',
  longitude: 'longitude',
  latitude: 'latitude',
  image: 'image'
};

exports.Prisma.History_Request_DatasOrderByRelevanceFieldEnum = {
  email: 'email',
  name: 'name',
  profession: 'profession',
  instances: 'instances',
  subject: 'subject',
  body: 'body'
};

exports.Prisma.OtpsOrderByRelevanceFieldEnum = {
  email: 'email',
  otp: 'otp'
};

exports.Prisma.Request_AccountsOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  phone: 'phone',
  profession: 'profession',
  instances: 'instances',
  subject: 'subject',
  body: 'body'
};

exports.Prisma.Request_DatasOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  profession: 'profession',
  instances: 'instances',
  subject: 'subject',
  body: 'body',
  url: 'url'
};

exports.Prisma.UsersOrderByRelevanceFieldEnum = {
  email: 'email',
  name: 'name',
  phone: 'phone',
  password: 'password',
  picture: 'picture',
  refresh_token: 'refresh_token',
  ip_address: 'ip_address'
};


exports.Prisma.ModelName = {
  Admins: 'Admins',
  Animals: 'Animals',
  History_Request_Datas: 'History_Request_Datas',
  Otps: 'Otps',
  Request_Accounts: 'Request_Accounts',
  Request_Datas: 'Request_Datas',
  Send_Datas: 'Send_Datas',
  Users: 'Users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
