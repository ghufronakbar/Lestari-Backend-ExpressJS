
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Admins
 * 
 */
export type Admins = $Result.DefaultSelection<Prisma.$AdminsPayload>
/**
 * Model Animals
 * 
 */
export type Animals = $Result.DefaultSelection<Prisma.$AnimalsPayload>
/**
 * Model History_Request_Datas
 * 
 */
export type History_Request_Datas = $Result.DefaultSelection<Prisma.$History_Request_DatasPayload>
/**
 * Model Otps
 * 
 */
export type Otps = $Result.DefaultSelection<Prisma.$OtpsPayload>
/**
 * Model Request_Accounts
 * 
 */
export type Request_Accounts = $Result.DefaultSelection<Prisma.$Request_AccountsPayload>
/**
 * Model Request_Datas
 * 
 */
export type Request_Datas = $Result.DefaultSelection<Prisma.$Request_DatasPayload>
/**
 * Model Send_Datas
 * 
 */
export type Send_Datas = $Result.DefaultSelection<Prisma.$Send_DatasPayload>
/**
 * Model Users
 * 
 */
export type Users = $Result.DefaultSelection<Prisma.$UsersPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Admins
 * const admins = await prisma.admins.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Admins
   * const admins = await prisma.admins.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.admins`: Exposes CRUD operations for the **Admins** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admins.findMany()
    * ```
    */
  get admins(): Prisma.AdminsDelegate<ExtArgs>;

  /**
   * `prisma.animals`: Exposes CRUD operations for the **Animals** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Animals
    * const animals = await prisma.animals.findMany()
    * ```
    */
  get animals(): Prisma.AnimalsDelegate<ExtArgs>;

  /**
   * `prisma.history_Request_Datas`: Exposes CRUD operations for the **History_Request_Datas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more History_Request_Datas
    * const history_Request_Datas = await prisma.history_Request_Datas.findMany()
    * ```
    */
  get history_Request_Datas(): Prisma.History_Request_DatasDelegate<ExtArgs>;

  /**
   * `prisma.otps`: Exposes CRUD operations for the **Otps** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Otps
    * const otps = await prisma.otps.findMany()
    * ```
    */
  get otps(): Prisma.OtpsDelegate<ExtArgs>;

  /**
   * `prisma.request_Accounts`: Exposes CRUD operations for the **Request_Accounts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Request_Accounts
    * const request_Accounts = await prisma.request_Accounts.findMany()
    * ```
    */
  get request_Accounts(): Prisma.Request_AccountsDelegate<ExtArgs>;

  /**
   * `prisma.request_Datas`: Exposes CRUD operations for the **Request_Datas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Request_Datas
    * const request_Datas = await prisma.request_Datas.findMany()
    * ```
    */
  get request_Datas(): Prisma.Request_DatasDelegate<ExtArgs>;

  /**
   * `prisma.send_Datas`: Exposes CRUD operations for the **Send_Datas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Send_Datas
    * const send_Datas = await prisma.send_Datas.findMany()
    * ```
    */
  get send_Datas(): Prisma.Send_DatasDelegate<ExtArgs>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **Users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.UsersDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.16.1
   * Query Engine version: 34ace0eb2704183d2c05b60b52fba5c43c13f303
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Admins: 'Admins',
    Animals: 'Animals',
    History_Request_Datas: 'History_Request_Datas',
    Otps: 'Otps',
    Request_Accounts: 'Request_Accounts',
    Request_Datas: 'Request_Datas',
    Send_Datas: 'Send_Datas',
    Users: 'Users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "admins" | "animals" | "history_Request_Datas" | "otps" | "request_Accounts" | "request_Datas" | "send_Datas" | "users"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Admins: {
        payload: Prisma.$AdminsPayload<ExtArgs>
        fields: Prisma.AdminsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdminsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdminsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminsPayload>
          }
          findFirst: {
            args: Prisma.AdminsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdminsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminsPayload>
          }
          findMany: {
            args: Prisma.AdminsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminsPayload>[]
          }
          create: {
            args: Prisma.AdminsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminsPayload>
          }
          createMany: {
            args: Prisma.AdminsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdminsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminsPayload>[]
          }
          delete: {
            args: Prisma.AdminsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminsPayload>
          }
          update: {
            args: Prisma.AdminsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminsPayload>
          }
          deleteMany: {
            args: Prisma.AdminsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdminsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AdminsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminsPayload>
          }
          aggregate: {
            args: Prisma.AdminsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmins>
          }
          groupBy: {
            args: Prisma.AdminsGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminsGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdminsCountArgs<ExtArgs>
            result: $Utils.Optional<AdminsCountAggregateOutputType> | number
          }
        }
      }
      Animals: {
        payload: Prisma.$AnimalsPayload<ExtArgs>
        fields: Prisma.AnimalsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AnimalsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AnimalsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalsPayload>
          }
          findFirst: {
            args: Prisma.AnimalsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AnimalsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalsPayload>
          }
          findMany: {
            args: Prisma.AnimalsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalsPayload>[]
          }
          create: {
            args: Prisma.AnimalsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalsPayload>
          }
          createMany: {
            args: Prisma.AnimalsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AnimalsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalsPayload>[]
          }
          delete: {
            args: Prisma.AnimalsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalsPayload>
          }
          update: {
            args: Prisma.AnimalsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalsPayload>
          }
          deleteMany: {
            args: Prisma.AnimalsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AnimalsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AnimalsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalsPayload>
          }
          aggregate: {
            args: Prisma.AnimalsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAnimals>
          }
          groupBy: {
            args: Prisma.AnimalsGroupByArgs<ExtArgs>
            result: $Utils.Optional<AnimalsGroupByOutputType>[]
          }
          count: {
            args: Prisma.AnimalsCountArgs<ExtArgs>
            result: $Utils.Optional<AnimalsCountAggregateOutputType> | number
          }
        }
      }
      History_Request_Datas: {
        payload: Prisma.$History_Request_DatasPayload<ExtArgs>
        fields: Prisma.History_Request_DatasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.History_Request_DatasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$History_Request_DatasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.History_Request_DatasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$History_Request_DatasPayload>
          }
          findFirst: {
            args: Prisma.History_Request_DatasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$History_Request_DatasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.History_Request_DatasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$History_Request_DatasPayload>
          }
          findMany: {
            args: Prisma.History_Request_DatasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$History_Request_DatasPayload>[]
          }
          create: {
            args: Prisma.History_Request_DatasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$History_Request_DatasPayload>
          }
          createMany: {
            args: Prisma.History_Request_DatasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.History_Request_DatasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$History_Request_DatasPayload>[]
          }
          delete: {
            args: Prisma.History_Request_DatasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$History_Request_DatasPayload>
          }
          update: {
            args: Prisma.History_Request_DatasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$History_Request_DatasPayload>
          }
          deleteMany: {
            args: Prisma.History_Request_DatasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.History_Request_DatasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.History_Request_DatasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$History_Request_DatasPayload>
          }
          aggregate: {
            args: Prisma.History_Request_DatasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistory_Request_Datas>
          }
          groupBy: {
            args: Prisma.History_Request_DatasGroupByArgs<ExtArgs>
            result: $Utils.Optional<History_Request_DatasGroupByOutputType>[]
          }
          count: {
            args: Prisma.History_Request_DatasCountArgs<ExtArgs>
            result: $Utils.Optional<History_Request_DatasCountAggregateOutputType> | number
          }
        }
      }
      Otps: {
        payload: Prisma.$OtpsPayload<ExtArgs>
        fields: Prisma.OtpsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OtpsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OtpsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpsPayload>
          }
          findFirst: {
            args: Prisma.OtpsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OtpsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpsPayload>
          }
          findMany: {
            args: Prisma.OtpsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpsPayload>[]
          }
          create: {
            args: Prisma.OtpsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpsPayload>
          }
          createMany: {
            args: Prisma.OtpsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OtpsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpsPayload>[]
          }
          delete: {
            args: Prisma.OtpsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpsPayload>
          }
          update: {
            args: Prisma.OtpsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpsPayload>
          }
          deleteMany: {
            args: Prisma.OtpsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OtpsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OtpsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpsPayload>
          }
          aggregate: {
            args: Prisma.OtpsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOtps>
          }
          groupBy: {
            args: Prisma.OtpsGroupByArgs<ExtArgs>
            result: $Utils.Optional<OtpsGroupByOutputType>[]
          }
          count: {
            args: Prisma.OtpsCountArgs<ExtArgs>
            result: $Utils.Optional<OtpsCountAggregateOutputType> | number
          }
        }
      }
      Request_Accounts: {
        payload: Prisma.$Request_AccountsPayload<ExtArgs>
        fields: Prisma.Request_AccountsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Request_AccountsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_AccountsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Request_AccountsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_AccountsPayload>
          }
          findFirst: {
            args: Prisma.Request_AccountsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_AccountsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Request_AccountsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_AccountsPayload>
          }
          findMany: {
            args: Prisma.Request_AccountsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_AccountsPayload>[]
          }
          create: {
            args: Prisma.Request_AccountsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_AccountsPayload>
          }
          createMany: {
            args: Prisma.Request_AccountsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Request_AccountsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_AccountsPayload>[]
          }
          delete: {
            args: Prisma.Request_AccountsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_AccountsPayload>
          }
          update: {
            args: Prisma.Request_AccountsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_AccountsPayload>
          }
          deleteMany: {
            args: Prisma.Request_AccountsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Request_AccountsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Request_AccountsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_AccountsPayload>
          }
          aggregate: {
            args: Prisma.Request_AccountsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRequest_Accounts>
          }
          groupBy: {
            args: Prisma.Request_AccountsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Request_AccountsGroupByOutputType>[]
          }
          count: {
            args: Prisma.Request_AccountsCountArgs<ExtArgs>
            result: $Utils.Optional<Request_AccountsCountAggregateOutputType> | number
          }
        }
      }
      Request_Datas: {
        payload: Prisma.$Request_DatasPayload<ExtArgs>
        fields: Prisma.Request_DatasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Request_DatasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_DatasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Request_DatasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_DatasPayload>
          }
          findFirst: {
            args: Prisma.Request_DatasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_DatasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Request_DatasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_DatasPayload>
          }
          findMany: {
            args: Prisma.Request_DatasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_DatasPayload>[]
          }
          create: {
            args: Prisma.Request_DatasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_DatasPayload>
          }
          createMany: {
            args: Prisma.Request_DatasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Request_DatasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_DatasPayload>[]
          }
          delete: {
            args: Prisma.Request_DatasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_DatasPayload>
          }
          update: {
            args: Prisma.Request_DatasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_DatasPayload>
          }
          deleteMany: {
            args: Prisma.Request_DatasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Request_DatasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Request_DatasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Request_DatasPayload>
          }
          aggregate: {
            args: Prisma.Request_DatasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRequest_Datas>
          }
          groupBy: {
            args: Prisma.Request_DatasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Request_DatasGroupByOutputType>[]
          }
          count: {
            args: Prisma.Request_DatasCountArgs<ExtArgs>
            result: $Utils.Optional<Request_DatasCountAggregateOutputType> | number
          }
        }
      }
      Send_Datas: {
        payload: Prisma.$Send_DatasPayload<ExtArgs>
        fields: Prisma.Send_DatasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Send_DatasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Send_DatasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Send_DatasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Send_DatasPayload>
          }
          findFirst: {
            args: Prisma.Send_DatasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Send_DatasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Send_DatasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Send_DatasPayload>
          }
          findMany: {
            args: Prisma.Send_DatasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Send_DatasPayload>[]
          }
          create: {
            args: Prisma.Send_DatasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Send_DatasPayload>
          }
          createMany: {
            args: Prisma.Send_DatasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Send_DatasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Send_DatasPayload>[]
          }
          delete: {
            args: Prisma.Send_DatasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Send_DatasPayload>
          }
          update: {
            args: Prisma.Send_DatasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Send_DatasPayload>
          }
          deleteMany: {
            args: Prisma.Send_DatasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Send_DatasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Send_DatasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Send_DatasPayload>
          }
          aggregate: {
            args: Prisma.Send_DatasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSend_Datas>
          }
          groupBy: {
            args: Prisma.Send_DatasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Send_DatasGroupByOutputType>[]
          }
          count: {
            args: Prisma.Send_DatasCountArgs<ExtArgs>
            result: $Utils.Optional<Send_DatasCountAggregateOutputType> | number
          }
        }
      }
      Users: {
        payload: Prisma.$UsersPayload<ExtArgs>
        fields: Prisma.UsersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findFirst: {
            args: Prisma.UsersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findMany: {
            args: Prisma.UsersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          create: {
            args: Prisma.UsersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          createMany: {
            args: Prisma.UsersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          delete: {
            args: Prisma.UsersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          update: {
            args: Prisma.UsersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          deleteMany: {
            args: Prisma.UsersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.UsersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Send_DatasCountOutputType
   */

  export type Send_DatasCountOutputType = {
    History_Request_Datas: number
  }

  export type Send_DatasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    History_Request_Datas?: boolean | Send_DatasCountOutputTypeCountHistory_Request_DatasArgs
  }

  // Custom InputTypes
  /**
   * Send_DatasCountOutputType without action
   */
  export type Send_DatasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_DatasCountOutputType
     */
    select?: Send_DatasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Send_DatasCountOutputType without action
   */
  export type Send_DatasCountOutputTypeCountHistory_Request_DatasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: History_Request_DatasWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    animals: number
    request_datas: number
    history_request_datas: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animals?: boolean | UsersCountOutputTypeCountAnimalsArgs
    request_datas?: boolean | UsersCountOutputTypeCountRequest_datasArgs
    history_request_datas?: boolean | UsersCountOutputTypeCountHistory_request_datasArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAnimalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AnimalsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountRequest_datasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Request_DatasWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountHistory_request_datasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: History_Request_DatasWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Admins
   */

  export type AggregateAdmins = {
    _count: AdminsCountAggregateOutputType | null
    _avg: AdminsAvgAggregateOutputType | null
    _sum: AdminsSumAggregateOutputType | null
    _min: AdminsMinAggregateOutputType | null
    _max: AdminsMaxAggregateOutputType | null
  }

  export type AdminsAvgAggregateOutputType = {
    id_admin: number | null
  }

  export type AdminsSumAggregateOutputType = {
    id_admin: number | null
  }

  export type AdminsMinAggregateOutputType = {
    id_admin: number | null
    email: string | null
    password: string | null
    refresh_token: string | null
    ip_address: string | null
  }

  export type AdminsMaxAggregateOutputType = {
    id_admin: number | null
    email: string | null
    password: string | null
    refresh_token: string | null
    ip_address: string | null
  }

  export type AdminsCountAggregateOutputType = {
    id_admin: number
    email: number
    password: number
    refresh_token: number
    ip_address: number
    _all: number
  }


  export type AdminsAvgAggregateInputType = {
    id_admin?: true
  }

  export type AdminsSumAggregateInputType = {
    id_admin?: true
  }

  export type AdminsMinAggregateInputType = {
    id_admin?: true
    email?: true
    password?: true
    refresh_token?: true
    ip_address?: true
  }

  export type AdminsMaxAggregateInputType = {
    id_admin?: true
    email?: true
    password?: true
    refresh_token?: true
    ip_address?: true
  }

  export type AdminsCountAggregateInputType = {
    id_admin?: true
    email?: true
    password?: true
    refresh_token?: true
    ip_address?: true
    _all?: true
  }

  export type AdminsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admins to aggregate.
     */
    where?: AdminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminsOrderByWithRelationInput | AdminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admins
    **/
    _count?: true | AdminsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdminsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdminsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminsMaxAggregateInputType
  }

  export type GetAdminsAggregateType<T extends AdminsAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmins]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmins[P]>
      : GetScalarType<T[P], AggregateAdmins[P]>
  }




  export type AdminsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminsWhereInput
    orderBy?: AdminsOrderByWithAggregationInput | AdminsOrderByWithAggregationInput[]
    by: AdminsScalarFieldEnum[] | AdminsScalarFieldEnum
    having?: AdminsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminsCountAggregateInputType | true
    _avg?: AdminsAvgAggregateInputType
    _sum?: AdminsSumAggregateInputType
    _min?: AdminsMinAggregateInputType
    _max?: AdminsMaxAggregateInputType
  }

  export type AdminsGroupByOutputType = {
    id_admin: number
    email: string
    password: string
    refresh_token: string | null
    ip_address: string | null
    _count: AdminsCountAggregateOutputType | null
    _avg: AdminsAvgAggregateOutputType | null
    _sum: AdminsSumAggregateOutputType | null
    _min: AdminsMinAggregateOutputType | null
    _max: AdminsMaxAggregateOutputType | null
  }

  type GetAdminsGroupByPayload<T extends AdminsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminsGroupByOutputType[P]>
            : GetScalarType<T[P], AdminsGroupByOutputType[P]>
        }
      >
    >


  export type AdminsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_admin?: boolean
    email?: boolean
    password?: boolean
    refresh_token?: boolean
    ip_address?: boolean
  }, ExtArgs["result"]["admins"]>

  export type AdminsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_admin?: boolean
    email?: boolean
    password?: boolean
    refresh_token?: boolean
    ip_address?: boolean
  }, ExtArgs["result"]["admins"]>

  export type AdminsSelectScalar = {
    id_admin?: boolean
    email?: boolean
    password?: boolean
    refresh_token?: boolean
    ip_address?: boolean
  }


  export type $AdminsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Admins"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_admin: number
      email: string
      password: string
      refresh_token: string | null
      ip_address: string | null
    }, ExtArgs["result"]["admins"]>
    composites: {}
  }

  type AdminsGetPayload<S extends boolean | null | undefined | AdminsDefaultArgs> = $Result.GetResult<Prisma.$AdminsPayload, S>

  type AdminsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AdminsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AdminsCountAggregateInputType | true
    }

  export interface AdminsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Admins'], meta: { name: 'Admins' } }
    /**
     * Find zero or one Admins that matches the filter.
     * @param {AdminsFindUniqueArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdminsFindUniqueArgs>(args: SelectSubset<T, AdminsFindUniqueArgs<ExtArgs>>): Prisma__AdminsClient<$Result.GetResult<Prisma.$AdminsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Admins that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AdminsFindUniqueOrThrowArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdminsFindUniqueOrThrowArgs>(args: SelectSubset<T, AdminsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdminsClient<$Result.GetResult<Prisma.$AdminsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminsFindFirstArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdminsFindFirstArgs>(args?: SelectSubset<T, AdminsFindFirstArgs<ExtArgs>>): Prisma__AdminsClient<$Result.GetResult<Prisma.$AdminsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Admins that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminsFindFirstOrThrowArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdminsFindFirstOrThrowArgs>(args?: SelectSubset<T, AdminsFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdminsClient<$Result.GetResult<Prisma.$AdminsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admins.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admins.findMany({ take: 10 })
     * 
     * // Only select the `id_admin`
     * const adminsWithId_adminOnly = await prisma.admins.findMany({ select: { id_admin: true } })
     * 
     */
    findMany<T extends AdminsFindManyArgs>(args?: SelectSubset<T, AdminsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Admins.
     * @param {AdminsCreateArgs} args - Arguments to create a Admins.
     * @example
     * // Create one Admins
     * const Admins = await prisma.admins.create({
     *   data: {
     *     // ... data to create a Admins
     *   }
     * })
     * 
     */
    create<T extends AdminsCreateArgs>(args: SelectSubset<T, AdminsCreateArgs<ExtArgs>>): Prisma__AdminsClient<$Result.GetResult<Prisma.$AdminsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Admins.
     * @param {AdminsCreateManyArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admins = await prisma.admins.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdminsCreateManyArgs>(args?: SelectSubset<T, AdminsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admins and returns the data saved in the database.
     * @param {AdminsCreateManyAndReturnArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admins = await prisma.admins.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admins and only return the `id_admin`
     * const adminsWithId_adminOnly = await prisma.admins.createManyAndReturn({ 
     *   select: { id_admin: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdminsCreateManyAndReturnArgs>(args?: SelectSubset<T, AdminsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Admins.
     * @param {AdminsDeleteArgs} args - Arguments to delete one Admins.
     * @example
     * // Delete one Admins
     * const Admins = await prisma.admins.delete({
     *   where: {
     *     // ... filter to delete one Admins
     *   }
     * })
     * 
     */
    delete<T extends AdminsDeleteArgs>(args: SelectSubset<T, AdminsDeleteArgs<ExtArgs>>): Prisma__AdminsClient<$Result.GetResult<Prisma.$AdminsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Admins.
     * @param {AdminsUpdateArgs} args - Arguments to update one Admins.
     * @example
     * // Update one Admins
     * const admins = await prisma.admins.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdminsUpdateArgs>(args: SelectSubset<T, AdminsUpdateArgs<ExtArgs>>): Prisma__AdminsClient<$Result.GetResult<Prisma.$AdminsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Admins.
     * @param {AdminsDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admins.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdminsDeleteManyArgs>(args?: SelectSubset<T, AdminsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admins = await prisma.admins.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdminsUpdateManyArgs>(args: SelectSubset<T, AdminsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Admins.
     * @param {AdminsUpsertArgs} args - Arguments to update or create a Admins.
     * @example
     * // Update or create a Admins
     * const admins = await prisma.admins.upsert({
     *   create: {
     *     // ... data to create a Admins
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admins we want to update
     *   }
     * })
     */
    upsert<T extends AdminsUpsertArgs>(args: SelectSubset<T, AdminsUpsertArgs<ExtArgs>>): Prisma__AdminsClient<$Result.GetResult<Prisma.$AdminsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminsCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admins.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends AdminsCountArgs>(
      args?: Subset<T, AdminsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminsAggregateArgs>(args: Subset<T, AdminsAggregateArgs>): Prisma.PrismaPromise<GetAdminsAggregateType<T>>

    /**
     * Group by Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminsGroupByArgs['orderBy'] }
        : { orderBy?: AdminsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Admins model
   */
  readonly fields: AdminsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Admins.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdminsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Admins model
   */ 
  interface AdminsFieldRefs {
    readonly id_admin: FieldRef<"Admins", 'Int'>
    readonly email: FieldRef<"Admins", 'String'>
    readonly password: FieldRef<"Admins", 'String'>
    readonly refresh_token: FieldRef<"Admins", 'String'>
    readonly ip_address: FieldRef<"Admins", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Admins findUnique
   */
  export type AdminsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelect<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where: AdminsWhereUniqueInput
  }

  /**
   * Admins findUniqueOrThrow
   */
  export type AdminsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelect<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where: AdminsWhereUniqueInput
  }

  /**
   * Admins findFirst
   */
  export type AdminsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelect<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where?: AdminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminsOrderByWithRelationInput | AdminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminsScalarFieldEnum | AdminsScalarFieldEnum[]
  }

  /**
   * Admins findFirstOrThrow
   */
  export type AdminsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelect<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where?: AdminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminsOrderByWithRelationInput | AdminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminsScalarFieldEnum | AdminsScalarFieldEnum[]
  }

  /**
   * Admins findMany
   */
  export type AdminsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelect<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where?: AdminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminsOrderByWithRelationInput | AdminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admins.
     */
    cursor?: AdminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    distinct?: AdminsScalarFieldEnum | AdminsScalarFieldEnum[]
  }

  /**
   * Admins create
   */
  export type AdminsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelect<ExtArgs> | null
    /**
     * The data needed to create a Admins.
     */
    data: XOR<AdminsCreateInput, AdminsUncheckedCreateInput>
  }

  /**
   * Admins createMany
   */
  export type AdminsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Admins.
     */
    data: AdminsCreateManyInput | AdminsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admins createManyAndReturn
   */
  export type AdminsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Admins.
     */
    data: AdminsCreateManyInput | AdminsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admins update
   */
  export type AdminsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelect<ExtArgs> | null
    /**
     * The data needed to update a Admins.
     */
    data: XOR<AdminsUpdateInput, AdminsUncheckedUpdateInput>
    /**
     * Choose, which Admins to update.
     */
    where: AdminsWhereUniqueInput
  }

  /**
   * Admins updateMany
   */
  export type AdminsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminsUpdateManyMutationInput, AdminsUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminsWhereInput
  }

  /**
   * Admins upsert
   */
  export type AdminsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelect<ExtArgs> | null
    /**
     * The filter to search for the Admins to update in case it exists.
     */
    where: AdminsWhereUniqueInput
    /**
     * In case the Admins found by the `where` argument doesn't exist, create a new Admins with this data.
     */
    create: XOR<AdminsCreateInput, AdminsUncheckedCreateInput>
    /**
     * In case the Admins was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdminsUpdateInput, AdminsUncheckedUpdateInput>
  }

  /**
   * Admins delete
   */
  export type AdminsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelect<ExtArgs> | null
    /**
     * Filter which Admins to delete.
     */
    where: AdminsWhereUniqueInput
  }

  /**
   * Admins deleteMany
   */
  export type AdminsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admins to delete
     */
    where?: AdminsWhereInput
  }

  /**
   * Admins without action
   */
  export type AdminsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admins
     */
    select?: AdminsSelect<ExtArgs> | null
  }


  /**
   * Model Animals
   */

  export type AggregateAnimals = {
    _count: AnimalsCountAggregateOutputType | null
    _avg: AnimalsAvgAggregateOutputType | null
    _sum: AnimalsSumAggregateOutputType | null
    _min: AnimalsMinAggregateOutputType | null
    _max: AnimalsMaxAggregateOutputType | null
  }

  export type AnimalsAvgAggregateOutputType = {
    id_animal: number | null
    amount: number | null
    id_user: number | null
  }

  export type AnimalsSumAggregateOutputType = {
    id_animal: number | null
    amount: number | null
    id_user: number | null
  }

  export type AnimalsMinAggregateOutputType = {
    id_animal: number | null
    local_name: string | null
    latin_name: string | null
    habitat: string | null
    description: string | null
    city: string | null
    longitude: string | null
    latitude: string | null
    image: string | null
    amount: number | null
    id_user: number | null
    date: Date | null
    updated_at: Date | null
  }

  export type AnimalsMaxAggregateOutputType = {
    id_animal: number | null
    local_name: string | null
    latin_name: string | null
    habitat: string | null
    description: string | null
    city: string | null
    longitude: string | null
    latitude: string | null
    image: string | null
    amount: number | null
    id_user: number | null
    date: Date | null
    updated_at: Date | null
  }

  export type AnimalsCountAggregateOutputType = {
    id_animal: number
    local_name: number
    latin_name: number
    habitat: number
    description: number
    city: number
    longitude: number
    latitude: number
    image: number
    amount: number
    id_user: number
    date: number
    updated_at: number
    _all: number
  }


  export type AnimalsAvgAggregateInputType = {
    id_animal?: true
    amount?: true
    id_user?: true
  }

  export type AnimalsSumAggregateInputType = {
    id_animal?: true
    amount?: true
    id_user?: true
  }

  export type AnimalsMinAggregateInputType = {
    id_animal?: true
    local_name?: true
    latin_name?: true
    habitat?: true
    description?: true
    city?: true
    longitude?: true
    latitude?: true
    image?: true
    amount?: true
    id_user?: true
    date?: true
    updated_at?: true
  }

  export type AnimalsMaxAggregateInputType = {
    id_animal?: true
    local_name?: true
    latin_name?: true
    habitat?: true
    description?: true
    city?: true
    longitude?: true
    latitude?: true
    image?: true
    amount?: true
    id_user?: true
    date?: true
    updated_at?: true
  }

  export type AnimalsCountAggregateInputType = {
    id_animal?: true
    local_name?: true
    latin_name?: true
    habitat?: true
    description?: true
    city?: true
    longitude?: true
    latitude?: true
    image?: true
    amount?: true
    id_user?: true
    date?: true
    updated_at?: true
    _all?: true
  }

  export type AnimalsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Animals to aggregate.
     */
    where?: AnimalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Animals to fetch.
     */
    orderBy?: AnimalsOrderByWithRelationInput | AnimalsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AnimalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Animals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Animals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Animals
    **/
    _count?: true | AnimalsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AnimalsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AnimalsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AnimalsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AnimalsMaxAggregateInputType
  }

  export type GetAnimalsAggregateType<T extends AnimalsAggregateArgs> = {
        [P in keyof T & keyof AggregateAnimals]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnimals[P]>
      : GetScalarType<T[P], AggregateAnimals[P]>
  }




  export type AnimalsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AnimalsWhereInput
    orderBy?: AnimalsOrderByWithAggregationInput | AnimalsOrderByWithAggregationInput[]
    by: AnimalsScalarFieldEnum[] | AnimalsScalarFieldEnum
    having?: AnimalsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AnimalsCountAggregateInputType | true
    _avg?: AnimalsAvgAggregateInputType
    _sum?: AnimalsSumAggregateInputType
    _min?: AnimalsMinAggregateInputType
    _max?: AnimalsMaxAggregateInputType
  }

  export type AnimalsGroupByOutputType = {
    id_animal: number
    local_name: string
    latin_name: string
    habitat: string
    description: string | null
    city: string
    longitude: string
    latitude: string
    image: string
    amount: number
    id_user: number
    date: Date | null
    updated_at: Date | null
    _count: AnimalsCountAggregateOutputType | null
    _avg: AnimalsAvgAggregateOutputType | null
    _sum: AnimalsSumAggregateOutputType | null
    _min: AnimalsMinAggregateOutputType | null
    _max: AnimalsMaxAggregateOutputType | null
  }

  type GetAnimalsGroupByPayload<T extends AnimalsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AnimalsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AnimalsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AnimalsGroupByOutputType[P]>
            : GetScalarType<T[P], AnimalsGroupByOutputType[P]>
        }
      >
    >


  export type AnimalsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_animal?: boolean
    local_name?: boolean
    latin_name?: boolean
    habitat?: boolean
    description?: boolean
    city?: boolean
    longitude?: boolean
    latitude?: boolean
    image?: boolean
    amount?: boolean
    id_user?: boolean
    date?: boolean
    updated_at?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animals"]>

  export type AnimalsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_animal?: boolean
    local_name?: boolean
    latin_name?: boolean
    habitat?: boolean
    description?: boolean
    city?: boolean
    longitude?: boolean
    latitude?: boolean
    image?: boolean
    amount?: boolean
    id_user?: boolean
    date?: boolean
    updated_at?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animals"]>

  export type AnimalsSelectScalar = {
    id_animal?: boolean
    local_name?: boolean
    latin_name?: boolean
    habitat?: boolean
    description?: boolean
    city?: boolean
    longitude?: boolean
    latitude?: boolean
    image?: boolean
    amount?: boolean
    id_user?: boolean
    date?: boolean
    updated_at?: boolean
  }

  export type AnimalsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type AnimalsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $AnimalsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Animals"
    objects: {
      user: Prisma.$UsersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_animal: number
      local_name: string
      latin_name: string
      habitat: string
      description: string | null
      city: string
      longitude: string
      latitude: string
      image: string
      amount: number
      id_user: number
      date: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["animals"]>
    composites: {}
  }

  type AnimalsGetPayload<S extends boolean | null | undefined | AnimalsDefaultArgs> = $Result.GetResult<Prisma.$AnimalsPayload, S>

  type AnimalsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AnimalsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AnimalsCountAggregateInputType | true
    }

  export interface AnimalsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Animals'], meta: { name: 'Animals' } }
    /**
     * Find zero or one Animals that matches the filter.
     * @param {AnimalsFindUniqueArgs} args - Arguments to find a Animals
     * @example
     * // Get one Animals
     * const animals = await prisma.animals.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AnimalsFindUniqueArgs>(args: SelectSubset<T, AnimalsFindUniqueArgs<ExtArgs>>): Prisma__AnimalsClient<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Animals that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AnimalsFindUniqueOrThrowArgs} args - Arguments to find a Animals
     * @example
     * // Get one Animals
     * const animals = await prisma.animals.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AnimalsFindUniqueOrThrowArgs>(args: SelectSubset<T, AnimalsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AnimalsClient<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Animals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalsFindFirstArgs} args - Arguments to find a Animals
     * @example
     * // Get one Animals
     * const animals = await prisma.animals.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AnimalsFindFirstArgs>(args?: SelectSubset<T, AnimalsFindFirstArgs<ExtArgs>>): Prisma__AnimalsClient<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Animals that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalsFindFirstOrThrowArgs} args - Arguments to find a Animals
     * @example
     * // Get one Animals
     * const animals = await prisma.animals.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AnimalsFindFirstOrThrowArgs>(args?: SelectSubset<T, AnimalsFindFirstOrThrowArgs<ExtArgs>>): Prisma__AnimalsClient<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Animals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Animals
     * const animals = await prisma.animals.findMany()
     * 
     * // Get first 10 Animals
     * const animals = await prisma.animals.findMany({ take: 10 })
     * 
     * // Only select the `id_animal`
     * const animalsWithId_animalOnly = await prisma.animals.findMany({ select: { id_animal: true } })
     * 
     */
    findMany<T extends AnimalsFindManyArgs>(args?: SelectSubset<T, AnimalsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Animals.
     * @param {AnimalsCreateArgs} args - Arguments to create a Animals.
     * @example
     * // Create one Animals
     * const Animals = await prisma.animals.create({
     *   data: {
     *     // ... data to create a Animals
     *   }
     * })
     * 
     */
    create<T extends AnimalsCreateArgs>(args: SelectSubset<T, AnimalsCreateArgs<ExtArgs>>): Prisma__AnimalsClient<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Animals.
     * @param {AnimalsCreateManyArgs} args - Arguments to create many Animals.
     * @example
     * // Create many Animals
     * const animals = await prisma.animals.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AnimalsCreateManyArgs>(args?: SelectSubset<T, AnimalsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Animals and returns the data saved in the database.
     * @param {AnimalsCreateManyAndReturnArgs} args - Arguments to create many Animals.
     * @example
     * // Create many Animals
     * const animals = await prisma.animals.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Animals and only return the `id_animal`
     * const animalsWithId_animalOnly = await prisma.animals.createManyAndReturn({ 
     *   select: { id_animal: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AnimalsCreateManyAndReturnArgs>(args?: SelectSubset<T, AnimalsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Animals.
     * @param {AnimalsDeleteArgs} args - Arguments to delete one Animals.
     * @example
     * // Delete one Animals
     * const Animals = await prisma.animals.delete({
     *   where: {
     *     // ... filter to delete one Animals
     *   }
     * })
     * 
     */
    delete<T extends AnimalsDeleteArgs>(args: SelectSubset<T, AnimalsDeleteArgs<ExtArgs>>): Prisma__AnimalsClient<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Animals.
     * @param {AnimalsUpdateArgs} args - Arguments to update one Animals.
     * @example
     * // Update one Animals
     * const animals = await prisma.animals.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AnimalsUpdateArgs>(args: SelectSubset<T, AnimalsUpdateArgs<ExtArgs>>): Prisma__AnimalsClient<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Animals.
     * @param {AnimalsDeleteManyArgs} args - Arguments to filter Animals to delete.
     * @example
     * // Delete a few Animals
     * const { count } = await prisma.animals.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AnimalsDeleteManyArgs>(args?: SelectSubset<T, AnimalsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Animals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Animals
     * const animals = await prisma.animals.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AnimalsUpdateManyArgs>(args: SelectSubset<T, AnimalsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Animals.
     * @param {AnimalsUpsertArgs} args - Arguments to update or create a Animals.
     * @example
     * // Update or create a Animals
     * const animals = await prisma.animals.upsert({
     *   create: {
     *     // ... data to create a Animals
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Animals we want to update
     *   }
     * })
     */
    upsert<T extends AnimalsUpsertArgs>(args: SelectSubset<T, AnimalsUpsertArgs<ExtArgs>>): Prisma__AnimalsClient<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Animals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalsCountArgs} args - Arguments to filter Animals to count.
     * @example
     * // Count the number of Animals
     * const count = await prisma.animals.count({
     *   where: {
     *     // ... the filter for the Animals we want to count
     *   }
     * })
    **/
    count<T extends AnimalsCountArgs>(
      args?: Subset<T, AnimalsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AnimalsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Animals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AnimalsAggregateArgs>(args: Subset<T, AnimalsAggregateArgs>): Prisma.PrismaPromise<GetAnimalsAggregateType<T>>

    /**
     * Group by Animals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AnimalsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AnimalsGroupByArgs['orderBy'] }
        : { orderBy?: AnimalsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AnimalsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnimalsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Animals model
   */
  readonly fields: AnimalsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Animals.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AnimalsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Animals model
   */ 
  interface AnimalsFieldRefs {
    readonly id_animal: FieldRef<"Animals", 'Int'>
    readonly local_name: FieldRef<"Animals", 'String'>
    readonly latin_name: FieldRef<"Animals", 'String'>
    readonly habitat: FieldRef<"Animals", 'String'>
    readonly description: FieldRef<"Animals", 'String'>
    readonly city: FieldRef<"Animals", 'String'>
    readonly longitude: FieldRef<"Animals", 'String'>
    readonly latitude: FieldRef<"Animals", 'String'>
    readonly image: FieldRef<"Animals", 'String'>
    readonly amount: FieldRef<"Animals", 'Int'>
    readonly id_user: FieldRef<"Animals", 'Int'>
    readonly date: FieldRef<"Animals", 'DateTime'>
    readonly updated_at: FieldRef<"Animals", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Animals findUnique
   */
  export type AnimalsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
    /**
     * Filter, which Animals to fetch.
     */
    where: AnimalsWhereUniqueInput
  }

  /**
   * Animals findUniqueOrThrow
   */
  export type AnimalsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
    /**
     * Filter, which Animals to fetch.
     */
    where: AnimalsWhereUniqueInput
  }

  /**
   * Animals findFirst
   */
  export type AnimalsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
    /**
     * Filter, which Animals to fetch.
     */
    where?: AnimalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Animals to fetch.
     */
    orderBy?: AnimalsOrderByWithRelationInput | AnimalsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Animals.
     */
    cursor?: AnimalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Animals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Animals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Animals.
     */
    distinct?: AnimalsScalarFieldEnum | AnimalsScalarFieldEnum[]
  }

  /**
   * Animals findFirstOrThrow
   */
  export type AnimalsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
    /**
     * Filter, which Animals to fetch.
     */
    where?: AnimalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Animals to fetch.
     */
    orderBy?: AnimalsOrderByWithRelationInput | AnimalsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Animals.
     */
    cursor?: AnimalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Animals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Animals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Animals.
     */
    distinct?: AnimalsScalarFieldEnum | AnimalsScalarFieldEnum[]
  }

  /**
   * Animals findMany
   */
  export type AnimalsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
    /**
     * Filter, which Animals to fetch.
     */
    where?: AnimalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Animals to fetch.
     */
    orderBy?: AnimalsOrderByWithRelationInput | AnimalsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Animals.
     */
    cursor?: AnimalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Animals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Animals.
     */
    skip?: number
    distinct?: AnimalsScalarFieldEnum | AnimalsScalarFieldEnum[]
  }

  /**
   * Animals create
   */
  export type AnimalsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
    /**
     * The data needed to create a Animals.
     */
    data: XOR<AnimalsCreateInput, AnimalsUncheckedCreateInput>
  }

  /**
   * Animals createMany
   */
  export type AnimalsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Animals.
     */
    data: AnimalsCreateManyInput | AnimalsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Animals createManyAndReturn
   */
  export type AnimalsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Animals.
     */
    data: AnimalsCreateManyInput | AnimalsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Animals update
   */
  export type AnimalsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
    /**
     * The data needed to update a Animals.
     */
    data: XOR<AnimalsUpdateInput, AnimalsUncheckedUpdateInput>
    /**
     * Choose, which Animals to update.
     */
    where: AnimalsWhereUniqueInput
  }

  /**
   * Animals updateMany
   */
  export type AnimalsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Animals.
     */
    data: XOR<AnimalsUpdateManyMutationInput, AnimalsUncheckedUpdateManyInput>
    /**
     * Filter which Animals to update
     */
    where?: AnimalsWhereInput
  }

  /**
   * Animals upsert
   */
  export type AnimalsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
    /**
     * The filter to search for the Animals to update in case it exists.
     */
    where: AnimalsWhereUniqueInput
    /**
     * In case the Animals found by the `where` argument doesn't exist, create a new Animals with this data.
     */
    create: XOR<AnimalsCreateInput, AnimalsUncheckedCreateInput>
    /**
     * In case the Animals was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AnimalsUpdateInput, AnimalsUncheckedUpdateInput>
  }

  /**
   * Animals delete
   */
  export type AnimalsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
    /**
     * Filter which Animals to delete.
     */
    where: AnimalsWhereUniqueInput
  }

  /**
   * Animals deleteMany
   */
  export type AnimalsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Animals to delete
     */
    where?: AnimalsWhereInput
  }

  /**
   * Animals without action
   */
  export type AnimalsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
  }


  /**
   * Model History_Request_Datas
   */

  export type AggregateHistory_Request_Datas = {
    _count: History_Request_DatasCountAggregateOutputType | null
    _avg: History_Request_DatasAvgAggregateOutputType | null
    _sum: History_Request_DatasSumAggregateOutputType | null
    _min: History_Request_DatasMinAggregateOutputType | null
    _max: History_Request_DatasMaxAggregateOutputType | null
  }

  export type History_Request_DatasAvgAggregateOutputType = {
    id_history_request_data: number | null
    id_send_data: number | null
    id_user: number | null
  }

  export type History_Request_DatasSumAggregateOutputType = {
    id_history_request_data: number | null
    id_send_data: number | null
    id_user: number | null
  }

  export type History_Request_DatasMinAggregateOutputType = {
    id_history_request_data: number | null
    email: string | null
    name: string | null
    profession: string | null
    instances: string | null
    subject: string | null
    body: string | null
    id_send_data: number | null
    id_user: number | null
    date: Date | null
  }

  export type History_Request_DatasMaxAggregateOutputType = {
    id_history_request_data: number | null
    email: string | null
    name: string | null
    profession: string | null
    instances: string | null
    subject: string | null
    body: string | null
    id_send_data: number | null
    id_user: number | null
    date: Date | null
  }

  export type History_Request_DatasCountAggregateOutputType = {
    id_history_request_data: number
    email: number
    name: number
    profession: number
    instances: number
    subject: number
    body: number
    id_send_data: number
    id_user: number
    date: number
    _all: number
  }


  export type History_Request_DatasAvgAggregateInputType = {
    id_history_request_data?: true
    id_send_data?: true
    id_user?: true
  }

  export type History_Request_DatasSumAggregateInputType = {
    id_history_request_data?: true
    id_send_data?: true
    id_user?: true
  }

  export type History_Request_DatasMinAggregateInputType = {
    id_history_request_data?: true
    email?: true
    name?: true
    profession?: true
    instances?: true
    subject?: true
    body?: true
    id_send_data?: true
    id_user?: true
    date?: true
  }

  export type History_Request_DatasMaxAggregateInputType = {
    id_history_request_data?: true
    email?: true
    name?: true
    profession?: true
    instances?: true
    subject?: true
    body?: true
    id_send_data?: true
    id_user?: true
    date?: true
  }

  export type History_Request_DatasCountAggregateInputType = {
    id_history_request_data?: true
    email?: true
    name?: true
    profession?: true
    instances?: true
    subject?: true
    body?: true
    id_send_data?: true
    id_user?: true
    date?: true
    _all?: true
  }

  export type History_Request_DatasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which History_Request_Datas to aggregate.
     */
    where?: History_Request_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of History_Request_Datas to fetch.
     */
    orderBy?: History_Request_DatasOrderByWithRelationInput | History_Request_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: History_Request_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` History_Request_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` History_Request_Datas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned History_Request_Datas
    **/
    _count?: true | History_Request_DatasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: History_Request_DatasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: History_Request_DatasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: History_Request_DatasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: History_Request_DatasMaxAggregateInputType
  }

  export type GetHistory_Request_DatasAggregateType<T extends History_Request_DatasAggregateArgs> = {
        [P in keyof T & keyof AggregateHistory_Request_Datas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistory_Request_Datas[P]>
      : GetScalarType<T[P], AggregateHistory_Request_Datas[P]>
  }




  export type History_Request_DatasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: History_Request_DatasWhereInput
    orderBy?: History_Request_DatasOrderByWithAggregationInput | History_Request_DatasOrderByWithAggregationInput[]
    by: History_Request_DatasScalarFieldEnum[] | History_Request_DatasScalarFieldEnum
    having?: History_Request_DatasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: History_Request_DatasCountAggregateInputType | true
    _avg?: History_Request_DatasAvgAggregateInputType
    _sum?: History_Request_DatasSumAggregateInputType
    _min?: History_Request_DatasMinAggregateInputType
    _max?: History_Request_DatasMaxAggregateInputType
  }

  export type History_Request_DatasGroupByOutputType = {
    id_history_request_data: number
    email: string
    name: string
    profession: string
    instances: string
    subject: string
    body: string
    id_send_data: number
    id_user: number
    date: Date | null
    _count: History_Request_DatasCountAggregateOutputType | null
    _avg: History_Request_DatasAvgAggregateOutputType | null
    _sum: History_Request_DatasSumAggregateOutputType | null
    _min: History_Request_DatasMinAggregateOutputType | null
    _max: History_Request_DatasMaxAggregateOutputType | null
  }

  type GetHistory_Request_DatasGroupByPayload<T extends History_Request_DatasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<History_Request_DatasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof History_Request_DatasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], History_Request_DatasGroupByOutputType[P]>
            : GetScalarType<T[P], History_Request_DatasGroupByOutputType[P]>
        }
      >
    >


  export type History_Request_DatasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_history_request_data?: boolean
    email?: boolean
    name?: boolean
    profession?: boolean
    instances?: boolean
    subject?: boolean
    body?: boolean
    id_send_data?: boolean
    id_user?: boolean
    date?: boolean
    send_data?: boolean | Send_DatasDefaultArgs<ExtArgs>
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["history_Request_Datas"]>

  export type History_Request_DatasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_history_request_data?: boolean
    email?: boolean
    name?: boolean
    profession?: boolean
    instances?: boolean
    subject?: boolean
    body?: boolean
    id_send_data?: boolean
    id_user?: boolean
    date?: boolean
    send_data?: boolean | Send_DatasDefaultArgs<ExtArgs>
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["history_Request_Datas"]>

  export type History_Request_DatasSelectScalar = {
    id_history_request_data?: boolean
    email?: boolean
    name?: boolean
    profession?: boolean
    instances?: boolean
    subject?: boolean
    body?: boolean
    id_send_data?: boolean
    id_user?: boolean
    date?: boolean
  }

  export type History_Request_DatasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    send_data?: boolean | Send_DatasDefaultArgs<ExtArgs>
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type History_Request_DatasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    send_data?: boolean | Send_DatasDefaultArgs<ExtArgs>
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $History_Request_DatasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "History_Request_Datas"
    objects: {
      send_data: Prisma.$Send_DatasPayload<ExtArgs>
      user: Prisma.$UsersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_history_request_data: number
      email: string
      name: string
      profession: string
      instances: string
      subject: string
      body: string
      id_send_data: number
      id_user: number
      date: Date | null
    }, ExtArgs["result"]["history_Request_Datas"]>
    composites: {}
  }

  type History_Request_DatasGetPayload<S extends boolean | null | undefined | History_Request_DatasDefaultArgs> = $Result.GetResult<Prisma.$History_Request_DatasPayload, S>

  type History_Request_DatasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<History_Request_DatasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: History_Request_DatasCountAggregateInputType | true
    }

  export interface History_Request_DatasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['History_Request_Datas'], meta: { name: 'History_Request_Datas' } }
    /**
     * Find zero or one History_Request_Datas that matches the filter.
     * @param {History_Request_DatasFindUniqueArgs} args - Arguments to find a History_Request_Datas
     * @example
     * // Get one History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends History_Request_DatasFindUniqueArgs>(args: SelectSubset<T, History_Request_DatasFindUniqueArgs<ExtArgs>>): Prisma__History_Request_DatasClient<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one History_Request_Datas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {History_Request_DatasFindUniqueOrThrowArgs} args - Arguments to find a History_Request_Datas
     * @example
     * // Get one History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends History_Request_DatasFindUniqueOrThrowArgs>(args: SelectSubset<T, History_Request_DatasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__History_Request_DatasClient<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first History_Request_Datas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {History_Request_DatasFindFirstArgs} args - Arguments to find a History_Request_Datas
     * @example
     * // Get one History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends History_Request_DatasFindFirstArgs>(args?: SelectSubset<T, History_Request_DatasFindFirstArgs<ExtArgs>>): Prisma__History_Request_DatasClient<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first History_Request_Datas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {History_Request_DatasFindFirstOrThrowArgs} args - Arguments to find a History_Request_Datas
     * @example
     * // Get one History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends History_Request_DatasFindFirstOrThrowArgs>(args?: SelectSubset<T, History_Request_DatasFindFirstOrThrowArgs<ExtArgs>>): Prisma__History_Request_DatasClient<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more History_Request_Datas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {History_Request_DatasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.findMany()
     * 
     * // Get first 10 History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.findMany({ take: 10 })
     * 
     * // Only select the `id_history_request_data`
     * const history_Request_DatasWithId_history_request_dataOnly = await prisma.history_Request_Datas.findMany({ select: { id_history_request_data: true } })
     * 
     */
    findMany<T extends History_Request_DatasFindManyArgs>(args?: SelectSubset<T, History_Request_DatasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a History_Request_Datas.
     * @param {History_Request_DatasCreateArgs} args - Arguments to create a History_Request_Datas.
     * @example
     * // Create one History_Request_Datas
     * const History_Request_Datas = await prisma.history_Request_Datas.create({
     *   data: {
     *     // ... data to create a History_Request_Datas
     *   }
     * })
     * 
     */
    create<T extends History_Request_DatasCreateArgs>(args: SelectSubset<T, History_Request_DatasCreateArgs<ExtArgs>>): Prisma__History_Request_DatasClient<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many History_Request_Datas.
     * @param {History_Request_DatasCreateManyArgs} args - Arguments to create many History_Request_Datas.
     * @example
     * // Create many History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends History_Request_DatasCreateManyArgs>(args?: SelectSubset<T, History_Request_DatasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many History_Request_Datas and returns the data saved in the database.
     * @param {History_Request_DatasCreateManyAndReturnArgs} args - Arguments to create many History_Request_Datas.
     * @example
     * // Create many History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many History_Request_Datas and only return the `id_history_request_data`
     * const history_Request_DatasWithId_history_request_dataOnly = await prisma.history_Request_Datas.createManyAndReturn({ 
     *   select: { id_history_request_data: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends History_Request_DatasCreateManyAndReturnArgs>(args?: SelectSubset<T, History_Request_DatasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a History_Request_Datas.
     * @param {History_Request_DatasDeleteArgs} args - Arguments to delete one History_Request_Datas.
     * @example
     * // Delete one History_Request_Datas
     * const History_Request_Datas = await prisma.history_Request_Datas.delete({
     *   where: {
     *     // ... filter to delete one History_Request_Datas
     *   }
     * })
     * 
     */
    delete<T extends History_Request_DatasDeleteArgs>(args: SelectSubset<T, History_Request_DatasDeleteArgs<ExtArgs>>): Prisma__History_Request_DatasClient<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one History_Request_Datas.
     * @param {History_Request_DatasUpdateArgs} args - Arguments to update one History_Request_Datas.
     * @example
     * // Update one History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends History_Request_DatasUpdateArgs>(args: SelectSubset<T, History_Request_DatasUpdateArgs<ExtArgs>>): Prisma__History_Request_DatasClient<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more History_Request_Datas.
     * @param {History_Request_DatasDeleteManyArgs} args - Arguments to filter History_Request_Datas to delete.
     * @example
     * // Delete a few History_Request_Datas
     * const { count } = await prisma.history_Request_Datas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends History_Request_DatasDeleteManyArgs>(args?: SelectSubset<T, History_Request_DatasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more History_Request_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {History_Request_DatasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends History_Request_DatasUpdateManyArgs>(args: SelectSubset<T, History_Request_DatasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one History_Request_Datas.
     * @param {History_Request_DatasUpsertArgs} args - Arguments to update or create a History_Request_Datas.
     * @example
     * // Update or create a History_Request_Datas
     * const history_Request_Datas = await prisma.history_Request_Datas.upsert({
     *   create: {
     *     // ... data to create a History_Request_Datas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the History_Request_Datas we want to update
     *   }
     * })
     */
    upsert<T extends History_Request_DatasUpsertArgs>(args: SelectSubset<T, History_Request_DatasUpsertArgs<ExtArgs>>): Prisma__History_Request_DatasClient<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of History_Request_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {History_Request_DatasCountArgs} args - Arguments to filter History_Request_Datas to count.
     * @example
     * // Count the number of History_Request_Datas
     * const count = await prisma.history_Request_Datas.count({
     *   where: {
     *     // ... the filter for the History_Request_Datas we want to count
     *   }
     * })
    **/
    count<T extends History_Request_DatasCountArgs>(
      args?: Subset<T, History_Request_DatasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], History_Request_DatasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a History_Request_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {History_Request_DatasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends History_Request_DatasAggregateArgs>(args: Subset<T, History_Request_DatasAggregateArgs>): Prisma.PrismaPromise<GetHistory_Request_DatasAggregateType<T>>

    /**
     * Group by History_Request_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {History_Request_DatasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends History_Request_DatasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: History_Request_DatasGroupByArgs['orderBy'] }
        : { orderBy?: History_Request_DatasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, History_Request_DatasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistory_Request_DatasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the History_Request_Datas model
   */
  readonly fields: History_Request_DatasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for History_Request_Datas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__History_Request_DatasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    send_data<T extends Send_DatasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Send_DatasDefaultArgs<ExtArgs>>): Prisma__Send_DatasClient<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the History_Request_Datas model
   */ 
  interface History_Request_DatasFieldRefs {
    readonly id_history_request_data: FieldRef<"History_Request_Datas", 'Int'>
    readonly email: FieldRef<"History_Request_Datas", 'String'>
    readonly name: FieldRef<"History_Request_Datas", 'String'>
    readonly profession: FieldRef<"History_Request_Datas", 'String'>
    readonly instances: FieldRef<"History_Request_Datas", 'String'>
    readonly subject: FieldRef<"History_Request_Datas", 'String'>
    readonly body: FieldRef<"History_Request_Datas", 'String'>
    readonly id_send_data: FieldRef<"History_Request_Datas", 'Int'>
    readonly id_user: FieldRef<"History_Request_Datas", 'Int'>
    readonly date: FieldRef<"History_Request_Datas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * History_Request_Datas findUnique
   */
  export type History_Request_DatasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    /**
     * Filter, which History_Request_Datas to fetch.
     */
    where: History_Request_DatasWhereUniqueInput
  }

  /**
   * History_Request_Datas findUniqueOrThrow
   */
  export type History_Request_DatasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    /**
     * Filter, which History_Request_Datas to fetch.
     */
    where: History_Request_DatasWhereUniqueInput
  }

  /**
   * History_Request_Datas findFirst
   */
  export type History_Request_DatasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    /**
     * Filter, which History_Request_Datas to fetch.
     */
    where?: History_Request_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of History_Request_Datas to fetch.
     */
    orderBy?: History_Request_DatasOrderByWithRelationInput | History_Request_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for History_Request_Datas.
     */
    cursor?: History_Request_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` History_Request_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` History_Request_Datas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of History_Request_Datas.
     */
    distinct?: History_Request_DatasScalarFieldEnum | History_Request_DatasScalarFieldEnum[]
  }

  /**
   * History_Request_Datas findFirstOrThrow
   */
  export type History_Request_DatasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    /**
     * Filter, which History_Request_Datas to fetch.
     */
    where?: History_Request_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of History_Request_Datas to fetch.
     */
    orderBy?: History_Request_DatasOrderByWithRelationInput | History_Request_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for History_Request_Datas.
     */
    cursor?: History_Request_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` History_Request_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` History_Request_Datas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of History_Request_Datas.
     */
    distinct?: History_Request_DatasScalarFieldEnum | History_Request_DatasScalarFieldEnum[]
  }

  /**
   * History_Request_Datas findMany
   */
  export type History_Request_DatasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    /**
     * Filter, which History_Request_Datas to fetch.
     */
    where?: History_Request_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of History_Request_Datas to fetch.
     */
    orderBy?: History_Request_DatasOrderByWithRelationInput | History_Request_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing History_Request_Datas.
     */
    cursor?: History_Request_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` History_Request_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` History_Request_Datas.
     */
    skip?: number
    distinct?: History_Request_DatasScalarFieldEnum | History_Request_DatasScalarFieldEnum[]
  }

  /**
   * History_Request_Datas create
   */
  export type History_Request_DatasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    /**
     * The data needed to create a History_Request_Datas.
     */
    data: XOR<History_Request_DatasCreateInput, History_Request_DatasUncheckedCreateInput>
  }

  /**
   * History_Request_Datas createMany
   */
  export type History_Request_DatasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many History_Request_Datas.
     */
    data: History_Request_DatasCreateManyInput | History_Request_DatasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * History_Request_Datas createManyAndReturn
   */
  export type History_Request_DatasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many History_Request_Datas.
     */
    data: History_Request_DatasCreateManyInput | History_Request_DatasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * History_Request_Datas update
   */
  export type History_Request_DatasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    /**
     * The data needed to update a History_Request_Datas.
     */
    data: XOR<History_Request_DatasUpdateInput, History_Request_DatasUncheckedUpdateInput>
    /**
     * Choose, which History_Request_Datas to update.
     */
    where: History_Request_DatasWhereUniqueInput
  }

  /**
   * History_Request_Datas updateMany
   */
  export type History_Request_DatasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update History_Request_Datas.
     */
    data: XOR<History_Request_DatasUpdateManyMutationInput, History_Request_DatasUncheckedUpdateManyInput>
    /**
     * Filter which History_Request_Datas to update
     */
    where?: History_Request_DatasWhereInput
  }

  /**
   * History_Request_Datas upsert
   */
  export type History_Request_DatasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    /**
     * The filter to search for the History_Request_Datas to update in case it exists.
     */
    where: History_Request_DatasWhereUniqueInput
    /**
     * In case the History_Request_Datas found by the `where` argument doesn't exist, create a new History_Request_Datas with this data.
     */
    create: XOR<History_Request_DatasCreateInput, History_Request_DatasUncheckedCreateInput>
    /**
     * In case the History_Request_Datas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<History_Request_DatasUpdateInput, History_Request_DatasUncheckedUpdateInput>
  }

  /**
   * History_Request_Datas delete
   */
  export type History_Request_DatasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    /**
     * Filter which History_Request_Datas to delete.
     */
    where: History_Request_DatasWhereUniqueInput
  }

  /**
   * History_Request_Datas deleteMany
   */
  export type History_Request_DatasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which History_Request_Datas to delete
     */
    where?: History_Request_DatasWhereInput
  }

  /**
   * History_Request_Datas without action
   */
  export type History_Request_DatasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
  }


  /**
   * Model Otps
   */

  export type AggregateOtps = {
    _count: OtpsCountAggregateOutputType | null
    _avg: OtpsAvgAggregateOutputType | null
    _sum: OtpsSumAggregateOutputType | null
    _min: OtpsMinAggregateOutputType | null
    _max: OtpsMaxAggregateOutputType | null
  }

  export type OtpsAvgAggregateOutputType = {
    id_otp: number | null
    used: number | null
  }

  export type OtpsSumAggregateOutputType = {
    id_otp: number | null
    used: number | null
  }

  export type OtpsMinAggregateOutputType = {
    id_otp: number | null
    email: string | null
    otp: string | null
    expired_at: Date | null
    used: number | null
  }

  export type OtpsMaxAggregateOutputType = {
    id_otp: number | null
    email: string | null
    otp: string | null
    expired_at: Date | null
    used: number | null
  }

  export type OtpsCountAggregateOutputType = {
    id_otp: number
    email: number
    otp: number
    expired_at: number
    used: number
    _all: number
  }


  export type OtpsAvgAggregateInputType = {
    id_otp?: true
    used?: true
  }

  export type OtpsSumAggregateInputType = {
    id_otp?: true
    used?: true
  }

  export type OtpsMinAggregateInputType = {
    id_otp?: true
    email?: true
    otp?: true
    expired_at?: true
    used?: true
  }

  export type OtpsMaxAggregateInputType = {
    id_otp?: true
    email?: true
    otp?: true
    expired_at?: true
    used?: true
  }

  export type OtpsCountAggregateInputType = {
    id_otp?: true
    email?: true
    otp?: true
    expired_at?: true
    used?: true
    _all?: true
  }

  export type OtpsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Otps to aggregate.
     */
    where?: OtpsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Otps to fetch.
     */
    orderBy?: OtpsOrderByWithRelationInput | OtpsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OtpsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Otps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Otps
    **/
    _count?: true | OtpsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OtpsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OtpsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OtpsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OtpsMaxAggregateInputType
  }

  export type GetOtpsAggregateType<T extends OtpsAggregateArgs> = {
        [P in keyof T & keyof AggregateOtps]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOtps[P]>
      : GetScalarType<T[P], AggregateOtps[P]>
  }




  export type OtpsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OtpsWhereInput
    orderBy?: OtpsOrderByWithAggregationInput | OtpsOrderByWithAggregationInput[]
    by: OtpsScalarFieldEnum[] | OtpsScalarFieldEnum
    having?: OtpsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OtpsCountAggregateInputType | true
    _avg?: OtpsAvgAggregateInputType
    _sum?: OtpsSumAggregateInputType
    _min?: OtpsMinAggregateInputType
    _max?: OtpsMaxAggregateInputType
  }

  export type OtpsGroupByOutputType = {
    id_otp: number
    email: string | null
    otp: string | null
    expired_at: Date | null
    used: number
    _count: OtpsCountAggregateOutputType | null
    _avg: OtpsAvgAggregateOutputType | null
    _sum: OtpsSumAggregateOutputType | null
    _min: OtpsMinAggregateOutputType | null
    _max: OtpsMaxAggregateOutputType | null
  }

  type GetOtpsGroupByPayload<T extends OtpsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OtpsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OtpsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OtpsGroupByOutputType[P]>
            : GetScalarType<T[P], OtpsGroupByOutputType[P]>
        }
      >
    >


  export type OtpsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_otp?: boolean
    email?: boolean
    otp?: boolean
    expired_at?: boolean
    used?: boolean
  }, ExtArgs["result"]["otps"]>

  export type OtpsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_otp?: boolean
    email?: boolean
    otp?: boolean
    expired_at?: boolean
    used?: boolean
  }, ExtArgs["result"]["otps"]>

  export type OtpsSelectScalar = {
    id_otp?: boolean
    email?: boolean
    otp?: boolean
    expired_at?: boolean
    used?: boolean
  }


  export type $OtpsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Otps"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_otp: number
      email: string | null
      otp: string | null
      expired_at: Date | null
      used: number
    }, ExtArgs["result"]["otps"]>
    composites: {}
  }

  type OtpsGetPayload<S extends boolean | null | undefined | OtpsDefaultArgs> = $Result.GetResult<Prisma.$OtpsPayload, S>

  type OtpsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OtpsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OtpsCountAggregateInputType | true
    }

  export interface OtpsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Otps'], meta: { name: 'Otps' } }
    /**
     * Find zero or one Otps that matches the filter.
     * @param {OtpsFindUniqueArgs} args - Arguments to find a Otps
     * @example
     * // Get one Otps
     * const otps = await prisma.otps.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OtpsFindUniqueArgs>(args: SelectSubset<T, OtpsFindUniqueArgs<ExtArgs>>): Prisma__OtpsClient<$Result.GetResult<Prisma.$OtpsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Otps that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OtpsFindUniqueOrThrowArgs} args - Arguments to find a Otps
     * @example
     * // Get one Otps
     * const otps = await prisma.otps.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OtpsFindUniqueOrThrowArgs>(args: SelectSubset<T, OtpsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OtpsClient<$Result.GetResult<Prisma.$OtpsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Otps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpsFindFirstArgs} args - Arguments to find a Otps
     * @example
     * // Get one Otps
     * const otps = await prisma.otps.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OtpsFindFirstArgs>(args?: SelectSubset<T, OtpsFindFirstArgs<ExtArgs>>): Prisma__OtpsClient<$Result.GetResult<Prisma.$OtpsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Otps that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpsFindFirstOrThrowArgs} args - Arguments to find a Otps
     * @example
     * // Get one Otps
     * const otps = await prisma.otps.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OtpsFindFirstOrThrowArgs>(args?: SelectSubset<T, OtpsFindFirstOrThrowArgs<ExtArgs>>): Prisma__OtpsClient<$Result.GetResult<Prisma.$OtpsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Otps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Otps
     * const otps = await prisma.otps.findMany()
     * 
     * // Get first 10 Otps
     * const otps = await prisma.otps.findMany({ take: 10 })
     * 
     * // Only select the `id_otp`
     * const otpsWithId_otpOnly = await prisma.otps.findMany({ select: { id_otp: true } })
     * 
     */
    findMany<T extends OtpsFindManyArgs>(args?: SelectSubset<T, OtpsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OtpsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Otps.
     * @param {OtpsCreateArgs} args - Arguments to create a Otps.
     * @example
     * // Create one Otps
     * const Otps = await prisma.otps.create({
     *   data: {
     *     // ... data to create a Otps
     *   }
     * })
     * 
     */
    create<T extends OtpsCreateArgs>(args: SelectSubset<T, OtpsCreateArgs<ExtArgs>>): Prisma__OtpsClient<$Result.GetResult<Prisma.$OtpsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Otps.
     * @param {OtpsCreateManyArgs} args - Arguments to create many Otps.
     * @example
     * // Create many Otps
     * const otps = await prisma.otps.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OtpsCreateManyArgs>(args?: SelectSubset<T, OtpsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Otps and returns the data saved in the database.
     * @param {OtpsCreateManyAndReturnArgs} args - Arguments to create many Otps.
     * @example
     * // Create many Otps
     * const otps = await prisma.otps.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Otps and only return the `id_otp`
     * const otpsWithId_otpOnly = await prisma.otps.createManyAndReturn({ 
     *   select: { id_otp: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OtpsCreateManyAndReturnArgs>(args?: SelectSubset<T, OtpsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OtpsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Otps.
     * @param {OtpsDeleteArgs} args - Arguments to delete one Otps.
     * @example
     * // Delete one Otps
     * const Otps = await prisma.otps.delete({
     *   where: {
     *     // ... filter to delete one Otps
     *   }
     * })
     * 
     */
    delete<T extends OtpsDeleteArgs>(args: SelectSubset<T, OtpsDeleteArgs<ExtArgs>>): Prisma__OtpsClient<$Result.GetResult<Prisma.$OtpsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Otps.
     * @param {OtpsUpdateArgs} args - Arguments to update one Otps.
     * @example
     * // Update one Otps
     * const otps = await prisma.otps.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OtpsUpdateArgs>(args: SelectSubset<T, OtpsUpdateArgs<ExtArgs>>): Prisma__OtpsClient<$Result.GetResult<Prisma.$OtpsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Otps.
     * @param {OtpsDeleteManyArgs} args - Arguments to filter Otps to delete.
     * @example
     * // Delete a few Otps
     * const { count } = await prisma.otps.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OtpsDeleteManyArgs>(args?: SelectSubset<T, OtpsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Otps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Otps
     * const otps = await prisma.otps.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OtpsUpdateManyArgs>(args: SelectSubset<T, OtpsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Otps.
     * @param {OtpsUpsertArgs} args - Arguments to update or create a Otps.
     * @example
     * // Update or create a Otps
     * const otps = await prisma.otps.upsert({
     *   create: {
     *     // ... data to create a Otps
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Otps we want to update
     *   }
     * })
     */
    upsert<T extends OtpsUpsertArgs>(args: SelectSubset<T, OtpsUpsertArgs<ExtArgs>>): Prisma__OtpsClient<$Result.GetResult<Prisma.$OtpsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Otps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpsCountArgs} args - Arguments to filter Otps to count.
     * @example
     * // Count the number of Otps
     * const count = await prisma.otps.count({
     *   where: {
     *     // ... the filter for the Otps we want to count
     *   }
     * })
    **/
    count<T extends OtpsCountArgs>(
      args?: Subset<T, OtpsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OtpsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Otps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OtpsAggregateArgs>(args: Subset<T, OtpsAggregateArgs>): Prisma.PrismaPromise<GetOtpsAggregateType<T>>

    /**
     * Group by Otps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OtpsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OtpsGroupByArgs['orderBy'] }
        : { orderBy?: OtpsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OtpsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOtpsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Otps model
   */
  readonly fields: OtpsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Otps.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OtpsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Otps model
   */ 
  interface OtpsFieldRefs {
    readonly id_otp: FieldRef<"Otps", 'Int'>
    readonly email: FieldRef<"Otps", 'String'>
    readonly otp: FieldRef<"Otps", 'String'>
    readonly expired_at: FieldRef<"Otps", 'DateTime'>
    readonly used: FieldRef<"Otps", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Otps findUnique
   */
  export type OtpsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelect<ExtArgs> | null
    /**
     * Filter, which Otps to fetch.
     */
    where: OtpsWhereUniqueInput
  }

  /**
   * Otps findUniqueOrThrow
   */
  export type OtpsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelect<ExtArgs> | null
    /**
     * Filter, which Otps to fetch.
     */
    where: OtpsWhereUniqueInput
  }

  /**
   * Otps findFirst
   */
  export type OtpsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelect<ExtArgs> | null
    /**
     * Filter, which Otps to fetch.
     */
    where?: OtpsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Otps to fetch.
     */
    orderBy?: OtpsOrderByWithRelationInput | OtpsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Otps.
     */
    cursor?: OtpsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Otps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Otps.
     */
    distinct?: OtpsScalarFieldEnum | OtpsScalarFieldEnum[]
  }

  /**
   * Otps findFirstOrThrow
   */
  export type OtpsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelect<ExtArgs> | null
    /**
     * Filter, which Otps to fetch.
     */
    where?: OtpsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Otps to fetch.
     */
    orderBy?: OtpsOrderByWithRelationInput | OtpsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Otps.
     */
    cursor?: OtpsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Otps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Otps.
     */
    distinct?: OtpsScalarFieldEnum | OtpsScalarFieldEnum[]
  }

  /**
   * Otps findMany
   */
  export type OtpsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelect<ExtArgs> | null
    /**
     * Filter, which Otps to fetch.
     */
    where?: OtpsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Otps to fetch.
     */
    orderBy?: OtpsOrderByWithRelationInput | OtpsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Otps.
     */
    cursor?: OtpsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Otps.
     */
    skip?: number
    distinct?: OtpsScalarFieldEnum | OtpsScalarFieldEnum[]
  }

  /**
   * Otps create
   */
  export type OtpsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelect<ExtArgs> | null
    /**
     * The data needed to create a Otps.
     */
    data: XOR<OtpsCreateInput, OtpsUncheckedCreateInput>
  }

  /**
   * Otps createMany
   */
  export type OtpsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Otps.
     */
    data: OtpsCreateManyInput | OtpsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Otps createManyAndReturn
   */
  export type OtpsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Otps.
     */
    data: OtpsCreateManyInput | OtpsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Otps update
   */
  export type OtpsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelect<ExtArgs> | null
    /**
     * The data needed to update a Otps.
     */
    data: XOR<OtpsUpdateInput, OtpsUncheckedUpdateInput>
    /**
     * Choose, which Otps to update.
     */
    where: OtpsWhereUniqueInput
  }

  /**
   * Otps updateMany
   */
  export type OtpsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Otps.
     */
    data: XOR<OtpsUpdateManyMutationInput, OtpsUncheckedUpdateManyInput>
    /**
     * Filter which Otps to update
     */
    where?: OtpsWhereInput
  }

  /**
   * Otps upsert
   */
  export type OtpsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelect<ExtArgs> | null
    /**
     * The filter to search for the Otps to update in case it exists.
     */
    where: OtpsWhereUniqueInput
    /**
     * In case the Otps found by the `where` argument doesn't exist, create a new Otps with this data.
     */
    create: XOR<OtpsCreateInput, OtpsUncheckedCreateInput>
    /**
     * In case the Otps was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OtpsUpdateInput, OtpsUncheckedUpdateInput>
  }

  /**
   * Otps delete
   */
  export type OtpsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelect<ExtArgs> | null
    /**
     * Filter which Otps to delete.
     */
    where: OtpsWhereUniqueInput
  }

  /**
   * Otps deleteMany
   */
  export type OtpsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Otps to delete
     */
    where?: OtpsWhereInput
  }

  /**
   * Otps without action
   */
  export type OtpsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otps
     */
    select?: OtpsSelect<ExtArgs> | null
  }


  /**
   * Model Request_Accounts
   */

  export type AggregateRequest_Accounts = {
    _count: Request_AccountsCountAggregateOutputType | null
    _avg: Request_AccountsAvgAggregateOutputType | null
    _sum: Request_AccountsSumAggregateOutputType | null
    _min: Request_AccountsMinAggregateOutputType | null
    _max: Request_AccountsMaxAggregateOutputType | null
  }

  export type Request_AccountsAvgAggregateOutputType = {
    id_request_account: number | null
    approve: number | null
  }

  export type Request_AccountsSumAggregateOutputType = {
    id_request_account: number | null
    approve: number | null
  }

  export type Request_AccountsMinAggregateOutputType = {
    id_request_account: number | null
    name: string | null
    email: string | null
    phone: string | null
    profession: string | null
    instances: string | null
    subject: string | null
    body: string | null
    date: Date | null
    approve: number | null
  }

  export type Request_AccountsMaxAggregateOutputType = {
    id_request_account: number | null
    name: string | null
    email: string | null
    phone: string | null
    profession: string | null
    instances: string | null
    subject: string | null
    body: string | null
    date: Date | null
    approve: number | null
  }

  export type Request_AccountsCountAggregateOutputType = {
    id_request_account: number
    name: number
    email: number
    phone: number
    profession: number
    instances: number
    subject: number
    body: number
    date: number
    approve: number
    _all: number
  }


  export type Request_AccountsAvgAggregateInputType = {
    id_request_account?: true
    approve?: true
  }

  export type Request_AccountsSumAggregateInputType = {
    id_request_account?: true
    approve?: true
  }

  export type Request_AccountsMinAggregateInputType = {
    id_request_account?: true
    name?: true
    email?: true
    phone?: true
    profession?: true
    instances?: true
    subject?: true
    body?: true
    date?: true
    approve?: true
  }

  export type Request_AccountsMaxAggregateInputType = {
    id_request_account?: true
    name?: true
    email?: true
    phone?: true
    profession?: true
    instances?: true
    subject?: true
    body?: true
    date?: true
    approve?: true
  }

  export type Request_AccountsCountAggregateInputType = {
    id_request_account?: true
    name?: true
    email?: true
    phone?: true
    profession?: true
    instances?: true
    subject?: true
    body?: true
    date?: true
    approve?: true
    _all?: true
  }

  export type Request_AccountsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Request_Accounts to aggregate.
     */
    where?: Request_AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Request_Accounts to fetch.
     */
    orderBy?: Request_AccountsOrderByWithRelationInput | Request_AccountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Request_AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Request_Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Request_Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Request_Accounts
    **/
    _count?: true | Request_AccountsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Request_AccountsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Request_AccountsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Request_AccountsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Request_AccountsMaxAggregateInputType
  }

  export type GetRequest_AccountsAggregateType<T extends Request_AccountsAggregateArgs> = {
        [P in keyof T & keyof AggregateRequest_Accounts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRequest_Accounts[P]>
      : GetScalarType<T[P], AggregateRequest_Accounts[P]>
  }




  export type Request_AccountsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Request_AccountsWhereInput
    orderBy?: Request_AccountsOrderByWithAggregationInput | Request_AccountsOrderByWithAggregationInput[]
    by: Request_AccountsScalarFieldEnum[] | Request_AccountsScalarFieldEnum
    having?: Request_AccountsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Request_AccountsCountAggregateInputType | true
    _avg?: Request_AccountsAvgAggregateInputType
    _sum?: Request_AccountsSumAggregateInputType
    _min?: Request_AccountsMinAggregateInputType
    _max?: Request_AccountsMaxAggregateInputType
  }

  export type Request_AccountsGroupByOutputType = {
    id_request_account: number
    name: string
    email: string
    phone: string
    profession: string
    instances: string
    subject: string
    body: string
    date: Date
    approve: number
    _count: Request_AccountsCountAggregateOutputType | null
    _avg: Request_AccountsAvgAggregateOutputType | null
    _sum: Request_AccountsSumAggregateOutputType | null
    _min: Request_AccountsMinAggregateOutputType | null
    _max: Request_AccountsMaxAggregateOutputType | null
  }

  type GetRequest_AccountsGroupByPayload<T extends Request_AccountsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Request_AccountsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Request_AccountsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Request_AccountsGroupByOutputType[P]>
            : GetScalarType<T[P], Request_AccountsGroupByOutputType[P]>
        }
      >
    >


  export type Request_AccountsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_request_account?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    profession?: boolean
    instances?: boolean
    subject?: boolean
    body?: boolean
    date?: boolean
    approve?: boolean
  }, ExtArgs["result"]["request_Accounts"]>

  export type Request_AccountsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_request_account?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    profession?: boolean
    instances?: boolean
    subject?: boolean
    body?: boolean
    date?: boolean
    approve?: boolean
  }, ExtArgs["result"]["request_Accounts"]>

  export type Request_AccountsSelectScalar = {
    id_request_account?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    profession?: boolean
    instances?: boolean
    subject?: boolean
    body?: boolean
    date?: boolean
    approve?: boolean
  }


  export type $Request_AccountsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Request_Accounts"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_request_account: number
      name: string
      email: string
      phone: string
      profession: string
      instances: string
      subject: string
      body: string
      date: Date
      approve: number
    }, ExtArgs["result"]["request_Accounts"]>
    composites: {}
  }

  type Request_AccountsGetPayload<S extends boolean | null | undefined | Request_AccountsDefaultArgs> = $Result.GetResult<Prisma.$Request_AccountsPayload, S>

  type Request_AccountsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Request_AccountsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Request_AccountsCountAggregateInputType | true
    }

  export interface Request_AccountsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Request_Accounts'], meta: { name: 'Request_Accounts' } }
    /**
     * Find zero or one Request_Accounts that matches the filter.
     * @param {Request_AccountsFindUniqueArgs} args - Arguments to find a Request_Accounts
     * @example
     * // Get one Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Request_AccountsFindUniqueArgs>(args: SelectSubset<T, Request_AccountsFindUniqueArgs<ExtArgs>>): Prisma__Request_AccountsClient<$Result.GetResult<Prisma.$Request_AccountsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Request_Accounts that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Request_AccountsFindUniqueOrThrowArgs} args - Arguments to find a Request_Accounts
     * @example
     * // Get one Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Request_AccountsFindUniqueOrThrowArgs>(args: SelectSubset<T, Request_AccountsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Request_AccountsClient<$Result.GetResult<Prisma.$Request_AccountsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Request_Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_AccountsFindFirstArgs} args - Arguments to find a Request_Accounts
     * @example
     * // Get one Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Request_AccountsFindFirstArgs>(args?: SelectSubset<T, Request_AccountsFindFirstArgs<ExtArgs>>): Prisma__Request_AccountsClient<$Result.GetResult<Prisma.$Request_AccountsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Request_Accounts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_AccountsFindFirstOrThrowArgs} args - Arguments to find a Request_Accounts
     * @example
     * // Get one Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Request_AccountsFindFirstOrThrowArgs>(args?: SelectSubset<T, Request_AccountsFindFirstOrThrowArgs<ExtArgs>>): Prisma__Request_AccountsClient<$Result.GetResult<Prisma.$Request_AccountsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Request_Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_AccountsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.findMany()
     * 
     * // Get first 10 Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.findMany({ take: 10 })
     * 
     * // Only select the `id_request_account`
     * const request_AccountsWithId_request_accountOnly = await prisma.request_Accounts.findMany({ select: { id_request_account: true } })
     * 
     */
    findMany<T extends Request_AccountsFindManyArgs>(args?: SelectSubset<T, Request_AccountsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Request_AccountsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Request_Accounts.
     * @param {Request_AccountsCreateArgs} args - Arguments to create a Request_Accounts.
     * @example
     * // Create one Request_Accounts
     * const Request_Accounts = await prisma.request_Accounts.create({
     *   data: {
     *     // ... data to create a Request_Accounts
     *   }
     * })
     * 
     */
    create<T extends Request_AccountsCreateArgs>(args: SelectSubset<T, Request_AccountsCreateArgs<ExtArgs>>): Prisma__Request_AccountsClient<$Result.GetResult<Prisma.$Request_AccountsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Request_Accounts.
     * @param {Request_AccountsCreateManyArgs} args - Arguments to create many Request_Accounts.
     * @example
     * // Create many Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Request_AccountsCreateManyArgs>(args?: SelectSubset<T, Request_AccountsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Request_Accounts and returns the data saved in the database.
     * @param {Request_AccountsCreateManyAndReturnArgs} args - Arguments to create many Request_Accounts.
     * @example
     * // Create many Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Request_Accounts and only return the `id_request_account`
     * const request_AccountsWithId_request_accountOnly = await prisma.request_Accounts.createManyAndReturn({ 
     *   select: { id_request_account: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Request_AccountsCreateManyAndReturnArgs>(args?: SelectSubset<T, Request_AccountsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Request_AccountsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Request_Accounts.
     * @param {Request_AccountsDeleteArgs} args - Arguments to delete one Request_Accounts.
     * @example
     * // Delete one Request_Accounts
     * const Request_Accounts = await prisma.request_Accounts.delete({
     *   where: {
     *     // ... filter to delete one Request_Accounts
     *   }
     * })
     * 
     */
    delete<T extends Request_AccountsDeleteArgs>(args: SelectSubset<T, Request_AccountsDeleteArgs<ExtArgs>>): Prisma__Request_AccountsClient<$Result.GetResult<Prisma.$Request_AccountsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Request_Accounts.
     * @param {Request_AccountsUpdateArgs} args - Arguments to update one Request_Accounts.
     * @example
     * // Update one Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Request_AccountsUpdateArgs>(args: SelectSubset<T, Request_AccountsUpdateArgs<ExtArgs>>): Prisma__Request_AccountsClient<$Result.GetResult<Prisma.$Request_AccountsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Request_Accounts.
     * @param {Request_AccountsDeleteManyArgs} args - Arguments to filter Request_Accounts to delete.
     * @example
     * // Delete a few Request_Accounts
     * const { count } = await prisma.request_Accounts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Request_AccountsDeleteManyArgs>(args?: SelectSubset<T, Request_AccountsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Request_Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_AccountsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Request_AccountsUpdateManyArgs>(args: SelectSubset<T, Request_AccountsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Request_Accounts.
     * @param {Request_AccountsUpsertArgs} args - Arguments to update or create a Request_Accounts.
     * @example
     * // Update or create a Request_Accounts
     * const request_Accounts = await prisma.request_Accounts.upsert({
     *   create: {
     *     // ... data to create a Request_Accounts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Request_Accounts we want to update
     *   }
     * })
     */
    upsert<T extends Request_AccountsUpsertArgs>(args: SelectSubset<T, Request_AccountsUpsertArgs<ExtArgs>>): Prisma__Request_AccountsClient<$Result.GetResult<Prisma.$Request_AccountsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Request_Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_AccountsCountArgs} args - Arguments to filter Request_Accounts to count.
     * @example
     * // Count the number of Request_Accounts
     * const count = await prisma.request_Accounts.count({
     *   where: {
     *     // ... the filter for the Request_Accounts we want to count
     *   }
     * })
    **/
    count<T extends Request_AccountsCountArgs>(
      args?: Subset<T, Request_AccountsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Request_AccountsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Request_Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_AccountsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Request_AccountsAggregateArgs>(args: Subset<T, Request_AccountsAggregateArgs>): Prisma.PrismaPromise<GetRequest_AccountsAggregateType<T>>

    /**
     * Group by Request_Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_AccountsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Request_AccountsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Request_AccountsGroupByArgs['orderBy'] }
        : { orderBy?: Request_AccountsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Request_AccountsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRequest_AccountsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Request_Accounts model
   */
  readonly fields: Request_AccountsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Request_Accounts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Request_AccountsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Request_Accounts model
   */ 
  interface Request_AccountsFieldRefs {
    readonly id_request_account: FieldRef<"Request_Accounts", 'Int'>
    readonly name: FieldRef<"Request_Accounts", 'String'>
    readonly email: FieldRef<"Request_Accounts", 'String'>
    readonly phone: FieldRef<"Request_Accounts", 'String'>
    readonly profession: FieldRef<"Request_Accounts", 'String'>
    readonly instances: FieldRef<"Request_Accounts", 'String'>
    readonly subject: FieldRef<"Request_Accounts", 'String'>
    readonly body: FieldRef<"Request_Accounts", 'String'>
    readonly date: FieldRef<"Request_Accounts", 'DateTime'>
    readonly approve: FieldRef<"Request_Accounts", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Request_Accounts findUnique
   */
  export type Request_AccountsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelect<ExtArgs> | null
    /**
     * Filter, which Request_Accounts to fetch.
     */
    where: Request_AccountsWhereUniqueInput
  }

  /**
   * Request_Accounts findUniqueOrThrow
   */
  export type Request_AccountsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelect<ExtArgs> | null
    /**
     * Filter, which Request_Accounts to fetch.
     */
    where: Request_AccountsWhereUniqueInput
  }

  /**
   * Request_Accounts findFirst
   */
  export type Request_AccountsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelect<ExtArgs> | null
    /**
     * Filter, which Request_Accounts to fetch.
     */
    where?: Request_AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Request_Accounts to fetch.
     */
    orderBy?: Request_AccountsOrderByWithRelationInput | Request_AccountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Request_Accounts.
     */
    cursor?: Request_AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Request_Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Request_Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Request_Accounts.
     */
    distinct?: Request_AccountsScalarFieldEnum | Request_AccountsScalarFieldEnum[]
  }

  /**
   * Request_Accounts findFirstOrThrow
   */
  export type Request_AccountsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelect<ExtArgs> | null
    /**
     * Filter, which Request_Accounts to fetch.
     */
    where?: Request_AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Request_Accounts to fetch.
     */
    orderBy?: Request_AccountsOrderByWithRelationInput | Request_AccountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Request_Accounts.
     */
    cursor?: Request_AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Request_Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Request_Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Request_Accounts.
     */
    distinct?: Request_AccountsScalarFieldEnum | Request_AccountsScalarFieldEnum[]
  }

  /**
   * Request_Accounts findMany
   */
  export type Request_AccountsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelect<ExtArgs> | null
    /**
     * Filter, which Request_Accounts to fetch.
     */
    where?: Request_AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Request_Accounts to fetch.
     */
    orderBy?: Request_AccountsOrderByWithRelationInput | Request_AccountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Request_Accounts.
     */
    cursor?: Request_AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Request_Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Request_Accounts.
     */
    skip?: number
    distinct?: Request_AccountsScalarFieldEnum | Request_AccountsScalarFieldEnum[]
  }

  /**
   * Request_Accounts create
   */
  export type Request_AccountsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelect<ExtArgs> | null
    /**
     * The data needed to create a Request_Accounts.
     */
    data: XOR<Request_AccountsCreateInput, Request_AccountsUncheckedCreateInput>
  }

  /**
   * Request_Accounts createMany
   */
  export type Request_AccountsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Request_Accounts.
     */
    data: Request_AccountsCreateManyInput | Request_AccountsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Request_Accounts createManyAndReturn
   */
  export type Request_AccountsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Request_Accounts.
     */
    data: Request_AccountsCreateManyInput | Request_AccountsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Request_Accounts update
   */
  export type Request_AccountsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelect<ExtArgs> | null
    /**
     * The data needed to update a Request_Accounts.
     */
    data: XOR<Request_AccountsUpdateInput, Request_AccountsUncheckedUpdateInput>
    /**
     * Choose, which Request_Accounts to update.
     */
    where: Request_AccountsWhereUniqueInput
  }

  /**
   * Request_Accounts updateMany
   */
  export type Request_AccountsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Request_Accounts.
     */
    data: XOR<Request_AccountsUpdateManyMutationInput, Request_AccountsUncheckedUpdateManyInput>
    /**
     * Filter which Request_Accounts to update
     */
    where?: Request_AccountsWhereInput
  }

  /**
   * Request_Accounts upsert
   */
  export type Request_AccountsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelect<ExtArgs> | null
    /**
     * The filter to search for the Request_Accounts to update in case it exists.
     */
    where: Request_AccountsWhereUniqueInput
    /**
     * In case the Request_Accounts found by the `where` argument doesn't exist, create a new Request_Accounts with this data.
     */
    create: XOR<Request_AccountsCreateInput, Request_AccountsUncheckedCreateInput>
    /**
     * In case the Request_Accounts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Request_AccountsUpdateInput, Request_AccountsUncheckedUpdateInput>
  }

  /**
   * Request_Accounts delete
   */
  export type Request_AccountsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelect<ExtArgs> | null
    /**
     * Filter which Request_Accounts to delete.
     */
    where: Request_AccountsWhereUniqueInput
  }

  /**
   * Request_Accounts deleteMany
   */
  export type Request_AccountsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Request_Accounts to delete
     */
    where?: Request_AccountsWhereInput
  }

  /**
   * Request_Accounts without action
   */
  export type Request_AccountsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Accounts
     */
    select?: Request_AccountsSelect<ExtArgs> | null
  }


  /**
   * Model Request_Datas
   */

  export type AggregateRequest_Datas = {
    _count: Request_DatasCountAggregateOutputType | null
    _avg: Request_DatasAvgAggregateOutputType | null
    _sum: Request_DatasSumAggregateOutputType | null
    _min: Request_DatasMinAggregateOutputType | null
    _max: Request_DatasMaxAggregateOutputType | null
  }

  export type Request_DatasAvgAggregateOutputType = {
    id_request_data: number | null
    approve: number | null
    id_user: number | null
  }

  export type Request_DatasSumAggregateOutputType = {
    id_request_data: number | null
    approve: number | null
    id_user: number | null
  }

  export type Request_DatasMinAggregateOutputType = {
    id_request_data: number | null
    name: string | null
    email: string | null
    profession: string | null
    instances: string | null
    subject: string | null
    body: string | null
    date: Date | null
    approve: number | null
    id_user: number | null
    url: string | null
  }

  export type Request_DatasMaxAggregateOutputType = {
    id_request_data: number | null
    name: string | null
    email: string | null
    profession: string | null
    instances: string | null
    subject: string | null
    body: string | null
    date: Date | null
    approve: number | null
    id_user: number | null
    url: string | null
  }

  export type Request_DatasCountAggregateOutputType = {
    id_request_data: number
    name: number
    email: number
    profession: number
    instances: number
    subject: number
    body: number
    date: number
    approve: number
    id_user: number
    url: number
    _all: number
  }


  export type Request_DatasAvgAggregateInputType = {
    id_request_data?: true
    approve?: true
    id_user?: true
  }

  export type Request_DatasSumAggregateInputType = {
    id_request_data?: true
    approve?: true
    id_user?: true
  }

  export type Request_DatasMinAggregateInputType = {
    id_request_data?: true
    name?: true
    email?: true
    profession?: true
    instances?: true
    subject?: true
    body?: true
    date?: true
    approve?: true
    id_user?: true
    url?: true
  }

  export type Request_DatasMaxAggregateInputType = {
    id_request_data?: true
    name?: true
    email?: true
    profession?: true
    instances?: true
    subject?: true
    body?: true
    date?: true
    approve?: true
    id_user?: true
    url?: true
  }

  export type Request_DatasCountAggregateInputType = {
    id_request_data?: true
    name?: true
    email?: true
    profession?: true
    instances?: true
    subject?: true
    body?: true
    date?: true
    approve?: true
    id_user?: true
    url?: true
    _all?: true
  }

  export type Request_DatasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Request_Datas to aggregate.
     */
    where?: Request_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Request_Datas to fetch.
     */
    orderBy?: Request_DatasOrderByWithRelationInput | Request_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Request_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Request_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Request_Datas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Request_Datas
    **/
    _count?: true | Request_DatasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Request_DatasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Request_DatasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Request_DatasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Request_DatasMaxAggregateInputType
  }

  export type GetRequest_DatasAggregateType<T extends Request_DatasAggregateArgs> = {
        [P in keyof T & keyof AggregateRequest_Datas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRequest_Datas[P]>
      : GetScalarType<T[P], AggregateRequest_Datas[P]>
  }




  export type Request_DatasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Request_DatasWhereInput
    orderBy?: Request_DatasOrderByWithAggregationInput | Request_DatasOrderByWithAggregationInput[]
    by: Request_DatasScalarFieldEnum[] | Request_DatasScalarFieldEnum
    having?: Request_DatasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Request_DatasCountAggregateInputType | true
    _avg?: Request_DatasAvgAggregateInputType
    _sum?: Request_DatasSumAggregateInputType
    _min?: Request_DatasMinAggregateInputType
    _max?: Request_DatasMaxAggregateInputType
  }

  export type Request_DatasGroupByOutputType = {
    id_request_data: number
    name: string
    email: string
    profession: string
    instances: string
    subject: string
    body: string
    date: Date
    approve: number
    id_user: number
    url: string
    _count: Request_DatasCountAggregateOutputType | null
    _avg: Request_DatasAvgAggregateOutputType | null
    _sum: Request_DatasSumAggregateOutputType | null
    _min: Request_DatasMinAggregateOutputType | null
    _max: Request_DatasMaxAggregateOutputType | null
  }

  type GetRequest_DatasGroupByPayload<T extends Request_DatasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Request_DatasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Request_DatasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Request_DatasGroupByOutputType[P]>
            : GetScalarType<T[P], Request_DatasGroupByOutputType[P]>
        }
      >
    >


  export type Request_DatasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_request_data?: boolean
    name?: boolean
    email?: boolean
    profession?: boolean
    instances?: boolean
    subject?: boolean
    body?: boolean
    date?: boolean
    approve?: boolean
    id_user?: boolean
    url?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["request_Datas"]>

  export type Request_DatasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_request_data?: boolean
    name?: boolean
    email?: boolean
    profession?: boolean
    instances?: boolean
    subject?: boolean
    body?: boolean
    date?: boolean
    approve?: boolean
    id_user?: boolean
    url?: boolean
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["request_Datas"]>

  export type Request_DatasSelectScalar = {
    id_request_data?: boolean
    name?: boolean
    email?: boolean
    profession?: boolean
    instances?: boolean
    subject?: boolean
    body?: boolean
    date?: boolean
    approve?: boolean
    id_user?: boolean
    url?: boolean
  }

  export type Request_DatasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }
  export type Request_DatasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UsersDefaultArgs<ExtArgs>
  }

  export type $Request_DatasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Request_Datas"
    objects: {
      user: Prisma.$UsersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_request_data: number
      name: string
      email: string
      profession: string
      instances: string
      subject: string
      body: string
      date: Date
      approve: number
      id_user: number
      url: string
    }, ExtArgs["result"]["request_Datas"]>
    composites: {}
  }

  type Request_DatasGetPayload<S extends boolean | null | undefined | Request_DatasDefaultArgs> = $Result.GetResult<Prisma.$Request_DatasPayload, S>

  type Request_DatasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Request_DatasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Request_DatasCountAggregateInputType | true
    }

  export interface Request_DatasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Request_Datas'], meta: { name: 'Request_Datas' } }
    /**
     * Find zero or one Request_Datas that matches the filter.
     * @param {Request_DatasFindUniqueArgs} args - Arguments to find a Request_Datas
     * @example
     * // Get one Request_Datas
     * const request_Datas = await prisma.request_Datas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Request_DatasFindUniqueArgs>(args: SelectSubset<T, Request_DatasFindUniqueArgs<ExtArgs>>): Prisma__Request_DatasClient<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Request_Datas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Request_DatasFindUniqueOrThrowArgs} args - Arguments to find a Request_Datas
     * @example
     * // Get one Request_Datas
     * const request_Datas = await prisma.request_Datas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Request_DatasFindUniqueOrThrowArgs>(args: SelectSubset<T, Request_DatasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Request_DatasClient<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Request_Datas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_DatasFindFirstArgs} args - Arguments to find a Request_Datas
     * @example
     * // Get one Request_Datas
     * const request_Datas = await prisma.request_Datas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Request_DatasFindFirstArgs>(args?: SelectSubset<T, Request_DatasFindFirstArgs<ExtArgs>>): Prisma__Request_DatasClient<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Request_Datas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_DatasFindFirstOrThrowArgs} args - Arguments to find a Request_Datas
     * @example
     * // Get one Request_Datas
     * const request_Datas = await prisma.request_Datas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Request_DatasFindFirstOrThrowArgs>(args?: SelectSubset<T, Request_DatasFindFirstOrThrowArgs<ExtArgs>>): Prisma__Request_DatasClient<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Request_Datas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_DatasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Request_Datas
     * const request_Datas = await prisma.request_Datas.findMany()
     * 
     * // Get first 10 Request_Datas
     * const request_Datas = await prisma.request_Datas.findMany({ take: 10 })
     * 
     * // Only select the `id_request_data`
     * const request_DatasWithId_request_dataOnly = await prisma.request_Datas.findMany({ select: { id_request_data: true } })
     * 
     */
    findMany<T extends Request_DatasFindManyArgs>(args?: SelectSubset<T, Request_DatasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Request_Datas.
     * @param {Request_DatasCreateArgs} args - Arguments to create a Request_Datas.
     * @example
     * // Create one Request_Datas
     * const Request_Datas = await prisma.request_Datas.create({
     *   data: {
     *     // ... data to create a Request_Datas
     *   }
     * })
     * 
     */
    create<T extends Request_DatasCreateArgs>(args: SelectSubset<T, Request_DatasCreateArgs<ExtArgs>>): Prisma__Request_DatasClient<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Request_Datas.
     * @param {Request_DatasCreateManyArgs} args - Arguments to create many Request_Datas.
     * @example
     * // Create many Request_Datas
     * const request_Datas = await prisma.request_Datas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Request_DatasCreateManyArgs>(args?: SelectSubset<T, Request_DatasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Request_Datas and returns the data saved in the database.
     * @param {Request_DatasCreateManyAndReturnArgs} args - Arguments to create many Request_Datas.
     * @example
     * // Create many Request_Datas
     * const request_Datas = await prisma.request_Datas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Request_Datas and only return the `id_request_data`
     * const request_DatasWithId_request_dataOnly = await prisma.request_Datas.createManyAndReturn({ 
     *   select: { id_request_data: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Request_DatasCreateManyAndReturnArgs>(args?: SelectSubset<T, Request_DatasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Request_Datas.
     * @param {Request_DatasDeleteArgs} args - Arguments to delete one Request_Datas.
     * @example
     * // Delete one Request_Datas
     * const Request_Datas = await prisma.request_Datas.delete({
     *   where: {
     *     // ... filter to delete one Request_Datas
     *   }
     * })
     * 
     */
    delete<T extends Request_DatasDeleteArgs>(args: SelectSubset<T, Request_DatasDeleteArgs<ExtArgs>>): Prisma__Request_DatasClient<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Request_Datas.
     * @param {Request_DatasUpdateArgs} args - Arguments to update one Request_Datas.
     * @example
     * // Update one Request_Datas
     * const request_Datas = await prisma.request_Datas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Request_DatasUpdateArgs>(args: SelectSubset<T, Request_DatasUpdateArgs<ExtArgs>>): Prisma__Request_DatasClient<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Request_Datas.
     * @param {Request_DatasDeleteManyArgs} args - Arguments to filter Request_Datas to delete.
     * @example
     * // Delete a few Request_Datas
     * const { count } = await prisma.request_Datas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Request_DatasDeleteManyArgs>(args?: SelectSubset<T, Request_DatasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Request_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_DatasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Request_Datas
     * const request_Datas = await prisma.request_Datas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Request_DatasUpdateManyArgs>(args: SelectSubset<T, Request_DatasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Request_Datas.
     * @param {Request_DatasUpsertArgs} args - Arguments to update or create a Request_Datas.
     * @example
     * // Update or create a Request_Datas
     * const request_Datas = await prisma.request_Datas.upsert({
     *   create: {
     *     // ... data to create a Request_Datas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Request_Datas we want to update
     *   }
     * })
     */
    upsert<T extends Request_DatasUpsertArgs>(args: SelectSubset<T, Request_DatasUpsertArgs<ExtArgs>>): Prisma__Request_DatasClient<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Request_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_DatasCountArgs} args - Arguments to filter Request_Datas to count.
     * @example
     * // Count the number of Request_Datas
     * const count = await prisma.request_Datas.count({
     *   where: {
     *     // ... the filter for the Request_Datas we want to count
     *   }
     * })
    **/
    count<T extends Request_DatasCountArgs>(
      args?: Subset<T, Request_DatasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Request_DatasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Request_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_DatasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Request_DatasAggregateArgs>(args: Subset<T, Request_DatasAggregateArgs>): Prisma.PrismaPromise<GetRequest_DatasAggregateType<T>>

    /**
     * Group by Request_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Request_DatasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Request_DatasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Request_DatasGroupByArgs['orderBy'] }
        : { orderBy?: Request_DatasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Request_DatasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRequest_DatasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Request_Datas model
   */
  readonly fields: Request_DatasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Request_Datas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Request_DatasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UsersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsersDefaultArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Request_Datas model
   */ 
  interface Request_DatasFieldRefs {
    readonly id_request_data: FieldRef<"Request_Datas", 'Int'>
    readonly name: FieldRef<"Request_Datas", 'String'>
    readonly email: FieldRef<"Request_Datas", 'String'>
    readonly profession: FieldRef<"Request_Datas", 'String'>
    readonly instances: FieldRef<"Request_Datas", 'String'>
    readonly subject: FieldRef<"Request_Datas", 'String'>
    readonly body: FieldRef<"Request_Datas", 'String'>
    readonly date: FieldRef<"Request_Datas", 'DateTime'>
    readonly approve: FieldRef<"Request_Datas", 'Int'>
    readonly id_user: FieldRef<"Request_Datas", 'Int'>
    readonly url: FieldRef<"Request_Datas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Request_Datas findUnique
   */
  export type Request_DatasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
    /**
     * Filter, which Request_Datas to fetch.
     */
    where: Request_DatasWhereUniqueInput
  }

  /**
   * Request_Datas findUniqueOrThrow
   */
  export type Request_DatasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
    /**
     * Filter, which Request_Datas to fetch.
     */
    where: Request_DatasWhereUniqueInput
  }

  /**
   * Request_Datas findFirst
   */
  export type Request_DatasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
    /**
     * Filter, which Request_Datas to fetch.
     */
    where?: Request_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Request_Datas to fetch.
     */
    orderBy?: Request_DatasOrderByWithRelationInput | Request_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Request_Datas.
     */
    cursor?: Request_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Request_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Request_Datas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Request_Datas.
     */
    distinct?: Request_DatasScalarFieldEnum | Request_DatasScalarFieldEnum[]
  }

  /**
   * Request_Datas findFirstOrThrow
   */
  export type Request_DatasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
    /**
     * Filter, which Request_Datas to fetch.
     */
    where?: Request_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Request_Datas to fetch.
     */
    orderBy?: Request_DatasOrderByWithRelationInput | Request_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Request_Datas.
     */
    cursor?: Request_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Request_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Request_Datas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Request_Datas.
     */
    distinct?: Request_DatasScalarFieldEnum | Request_DatasScalarFieldEnum[]
  }

  /**
   * Request_Datas findMany
   */
  export type Request_DatasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
    /**
     * Filter, which Request_Datas to fetch.
     */
    where?: Request_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Request_Datas to fetch.
     */
    orderBy?: Request_DatasOrderByWithRelationInput | Request_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Request_Datas.
     */
    cursor?: Request_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Request_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Request_Datas.
     */
    skip?: number
    distinct?: Request_DatasScalarFieldEnum | Request_DatasScalarFieldEnum[]
  }

  /**
   * Request_Datas create
   */
  export type Request_DatasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
    /**
     * The data needed to create a Request_Datas.
     */
    data: XOR<Request_DatasCreateInput, Request_DatasUncheckedCreateInput>
  }

  /**
   * Request_Datas createMany
   */
  export type Request_DatasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Request_Datas.
     */
    data: Request_DatasCreateManyInput | Request_DatasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Request_Datas createManyAndReturn
   */
  export type Request_DatasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Request_Datas.
     */
    data: Request_DatasCreateManyInput | Request_DatasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Request_Datas update
   */
  export type Request_DatasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
    /**
     * The data needed to update a Request_Datas.
     */
    data: XOR<Request_DatasUpdateInput, Request_DatasUncheckedUpdateInput>
    /**
     * Choose, which Request_Datas to update.
     */
    where: Request_DatasWhereUniqueInput
  }

  /**
   * Request_Datas updateMany
   */
  export type Request_DatasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Request_Datas.
     */
    data: XOR<Request_DatasUpdateManyMutationInput, Request_DatasUncheckedUpdateManyInput>
    /**
     * Filter which Request_Datas to update
     */
    where?: Request_DatasWhereInput
  }

  /**
   * Request_Datas upsert
   */
  export type Request_DatasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
    /**
     * The filter to search for the Request_Datas to update in case it exists.
     */
    where: Request_DatasWhereUniqueInput
    /**
     * In case the Request_Datas found by the `where` argument doesn't exist, create a new Request_Datas with this data.
     */
    create: XOR<Request_DatasCreateInput, Request_DatasUncheckedCreateInput>
    /**
     * In case the Request_Datas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Request_DatasUpdateInput, Request_DatasUncheckedUpdateInput>
  }

  /**
   * Request_Datas delete
   */
  export type Request_DatasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
    /**
     * Filter which Request_Datas to delete.
     */
    where: Request_DatasWhereUniqueInput
  }

  /**
   * Request_Datas deleteMany
   */
  export type Request_DatasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Request_Datas to delete
     */
    where?: Request_DatasWhereInput
  }

  /**
   * Request_Datas without action
   */
  export type Request_DatasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
  }


  /**
   * Model Send_Datas
   */

  export type AggregateSend_Datas = {
    _count: Send_DatasCountAggregateOutputType | null
    _avg: Send_DatasAvgAggregateOutputType | null
    _sum: Send_DatasSumAggregateOutputType | null
    _min: Send_DatasMinAggregateOutputType | null
    _max: Send_DatasMaxAggregateOutputType | null
  }

  export type Send_DatasAvgAggregateOutputType = {
    id_send_data: number | null
    local_name: number | null
    latin_name: number | null
    habitat: number | null
    description: number | null
    city: number | null
    longitude: number | null
    latitude: number | null
    image: number | null
    amount: number | null
  }

  export type Send_DatasSumAggregateOutputType = {
    id_send_data: number | null
    local_name: number | null
    latin_name: number | null
    habitat: number | null
    description: number | null
    city: number | null
    longitude: number | null
    latitude: number | null
    image: number | null
    amount: number | null
  }

  export type Send_DatasMinAggregateOutputType = {
    id_send_data: number | null
    local_name: number | null
    latin_name: number | null
    habitat: number | null
    description: number | null
    city: number | null
    longitude: number | null
    latitude: number | null
    image: number | null
    amount: number | null
    date_start: Date | null
    date_end: Date | null
  }

  export type Send_DatasMaxAggregateOutputType = {
    id_send_data: number | null
    local_name: number | null
    latin_name: number | null
    habitat: number | null
    description: number | null
    city: number | null
    longitude: number | null
    latitude: number | null
    image: number | null
    amount: number | null
    date_start: Date | null
    date_end: Date | null
  }

  export type Send_DatasCountAggregateOutputType = {
    id_send_data: number
    local_name: number
    latin_name: number
    habitat: number
    description: number
    city: number
    longitude: number
    latitude: number
    image: number
    amount: number
    date_start: number
    date_end: number
    _all: number
  }


  export type Send_DatasAvgAggregateInputType = {
    id_send_data?: true
    local_name?: true
    latin_name?: true
    habitat?: true
    description?: true
    city?: true
    longitude?: true
    latitude?: true
    image?: true
    amount?: true
  }

  export type Send_DatasSumAggregateInputType = {
    id_send_data?: true
    local_name?: true
    latin_name?: true
    habitat?: true
    description?: true
    city?: true
    longitude?: true
    latitude?: true
    image?: true
    amount?: true
  }

  export type Send_DatasMinAggregateInputType = {
    id_send_data?: true
    local_name?: true
    latin_name?: true
    habitat?: true
    description?: true
    city?: true
    longitude?: true
    latitude?: true
    image?: true
    amount?: true
    date_start?: true
    date_end?: true
  }

  export type Send_DatasMaxAggregateInputType = {
    id_send_data?: true
    local_name?: true
    latin_name?: true
    habitat?: true
    description?: true
    city?: true
    longitude?: true
    latitude?: true
    image?: true
    amount?: true
    date_start?: true
    date_end?: true
  }

  export type Send_DatasCountAggregateInputType = {
    id_send_data?: true
    local_name?: true
    latin_name?: true
    habitat?: true
    description?: true
    city?: true
    longitude?: true
    latitude?: true
    image?: true
    amount?: true
    date_start?: true
    date_end?: true
    _all?: true
  }

  export type Send_DatasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Send_Datas to aggregate.
     */
    where?: Send_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Send_Datas to fetch.
     */
    orderBy?: Send_DatasOrderByWithRelationInput | Send_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Send_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Send_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Send_Datas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Send_Datas
    **/
    _count?: true | Send_DatasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Send_DatasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Send_DatasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Send_DatasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Send_DatasMaxAggregateInputType
  }

  export type GetSend_DatasAggregateType<T extends Send_DatasAggregateArgs> = {
        [P in keyof T & keyof AggregateSend_Datas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSend_Datas[P]>
      : GetScalarType<T[P], AggregateSend_Datas[P]>
  }




  export type Send_DatasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Send_DatasWhereInput
    orderBy?: Send_DatasOrderByWithAggregationInput | Send_DatasOrderByWithAggregationInput[]
    by: Send_DatasScalarFieldEnum[] | Send_DatasScalarFieldEnum
    having?: Send_DatasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Send_DatasCountAggregateInputType | true
    _avg?: Send_DatasAvgAggregateInputType
    _sum?: Send_DatasSumAggregateInputType
    _min?: Send_DatasMinAggregateInputType
    _max?: Send_DatasMaxAggregateInputType
  }

  export type Send_DatasGroupByOutputType = {
    id_send_data: number
    local_name: number
    latin_name: number
    habitat: number
    description: number
    city: number
    longitude: number
    latitude: number
    image: number
    amount: number
    date_start: Date
    date_end: Date
    _count: Send_DatasCountAggregateOutputType | null
    _avg: Send_DatasAvgAggregateOutputType | null
    _sum: Send_DatasSumAggregateOutputType | null
    _min: Send_DatasMinAggregateOutputType | null
    _max: Send_DatasMaxAggregateOutputType | null
  }

  type GetSend_DatasGroupByPayload<T extends Send_DatasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Send_DatasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Send_DatasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Send_DatasGroupByOutputType[P]>
            : GetScalarType<T[P], Send_DatasGroupByOutputType[P]>
        }
      >
    >


  export type Send_DatasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_send_data?: boolean
    local_name?: boolean
    latin_name?: boolean
    habitat?: boolean
    description?: boolean
    city?: boolean
    longitude?: boolean
    latitude?: boolean
    image?: boolean
    amount?: boolean
    date_start?: boolean
    date_end?: boolean
    History_Request_Datas?: boolean | Send_Datas$History_Request_DatasArgs<ExtArgs>
    _count?: boolean | Send_DatasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["send_Datas"]>

  export type Send_DatasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_send_data?: boolean
    local_name?: boolean
    latin_name?: boolean
    habitat?: boolean
    description?: boolean
    city?: boolean
    longitude?: boolean
    latitude?: boolean
    image?: boolean
    amount?: boolean
    date_start?: boolean
    date_end?: boolean
  }, ExtArgs["result"]["send_Datas"]>

  export type Send_DatasSelectScalar = {
    id_send_data?: boolean
    local_name?: boolean
    latin_name?: boolean
    habitat?: boolean
    description?: boolean
    city?: boolean
    longitude?: boolean
    latitude?: boolean
    image?: boolean
    amount?: boolean
    date_start?: boolean
    date_end?: boolean
  }

  export type Send_DatasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    History_Request_Datas?: boolean | Send_Datas$History_Request_DatasArgs<ExtArgs>
    _count?: boolean | Send_DatasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Send_DatasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Send_DatasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Send_Datas"
    objects: {
      History_Request_Datas: Prisma.$History_Request_DatasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_send_data: number
      local_name: number
      latin_name: number
      habitat: number
      description: number
      city: number
      longitude: number
      latitude: number
      image: number
      amount: number
      date_start: Date
      date_end: Date
    }, ExtArgs["result"]["send_Datas"]>
    composites: {}
  }

  type Send_DatasGetPayload<S extends boolean | null | undefined | Send_DatasDefaultArgs> = $Result.GetResult<Prisma.$Send_DatasPayload, S>

  type Send_DatasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Send_DatasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Send_DatasCountAggregateInputType | true
    }

  export interface Send_DatasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Send_Datas'], meta: { name: 'Send_Datas' } }
    /**
     * Find zero or one Send_Datas that matches the filter.
     * @param {Send_DatasFindUniqueArgs} args - Arguments to find a Send_Datas
     * @example
     * // Get one Send_Datas
     * const send_Datas = await prisma.send_Datas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Send_DatasFindUniqueArgs>(args: SelectSubset<T, Send_DatasFindUniqueArgs<ExtArgs>>): Prisma__Send_DatasClient<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Send_Datas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Send_DatasFindUniqueOrThrowArgs} args - Arguments to find a Send_Datas
     * @example
     * // Get one Send_Datas
     * const send_Datas = await prisma.send_Datas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Send_DatasFindUniqueOrThrowArgs>(args: SelectSubset<T, Send_DatasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Send_DatasClient<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Send_Datas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Send_DatasFindFirstArgs} args - Arguments to find a Send_Datas
     * @example
     * // Get one Send_Datas
     * const send_Datas = await prisma.send_Datas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Send_DatasFindFirstArgs>(args?: SelectSubset<T, Send_DatasFindFirstArgs<ExtArgs>>): Prisma__Send_DatasClient<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Send_Datas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Send_DatasFindFirstOrThrowArgs} args - Arguments to find a Send_Datas
     * @example
     * // Get one Send_Datas
     * const send_Datas = await prisma.send_Datas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Send_DatasFindFirstOrThrowArgs>(args?: SelectSubset<T, Send_DatasFindFirstOrThrowArgs<ExtArgs>>): Prisma__Send_DatasClient<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Send_Datas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Send_DatasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Send_Datas
     * const send_Datas = await prisma.send_Datas.findMany()
     * 
     * // Get first 10 Send_Datas
     * const send_Datas = await prisma.send_Datas.findMany({ take: 10 })
     * 
     * // Only select the `id_send_data`
     * const send_DatasWithId_send_dataOnly = await prisma.send_Datas.findMany({ select: { id_send_data: true } })
     * 
     */
    findMany<T extends Send_DatasFindManyArgs>(args?: SelectSubset<T, Send_DatasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Send_Datas.
     * @param {Send_DatasCreateArgs} args - Arguments to create a Send_Datas.
     * @example
     * // Create one Send_Datas
     * const Send_Datas = await prisma.send_Datas.create({
     *   data: {
     *     // ... data to create a Send_Datas
     *   }
     * })
     * 
     */
    create<T extends Send_DatasCreateArgs>(args: SelectSubset<T, Send_DatasCreateArgs<ExtArgs>>): Prisma__Send_DatasClient<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Send_Datas.
     * @param {Send_DatasCreateManyArgs} args - Arguments to create many Send_Datas.
     * @example
     * // Create many Send_Datas
     * const send_Datas = await prisma.send_Datas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Send_DatasCreateManyArgs>(args?: SelectSubset<T, Send_DatasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Send_Datas and returns the data saved in the database.
     * @param {Send_DatasCreateManyAndReturnArgs} args - Arguments to create many Send_Datas.
     * @example
     * // Create many Send_Datas
     * const send_Datas = await prisma.send_Datas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Send_Datas and only return the `id_send_data`
     * const send_DatasWithId_send_dataOnly = await prisma.send_Datas.createManyAndReturn({ 
     *   select: { id_send_data: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Send_DatasCreateManyAndReturnArgs>(args?: SelectSubset<T, Send_DatasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Send_Datas.
     * @param {Send_DatasDeleteArgs} args - Arguments to delete one Send_Datas.
     * @example
     * // Delete one Send_Datas
     * const Send_Datas = await prisma.send_Datas.delete({
     *   where: {
     *     // ... filter to delete one Send_Datas
     *   }
     * })
     * 
     */
    delete<T extends Send_DatasDeleteArgs>(args: SelectSubset<T, Send_DatasDeleteArgs<ExtArgs>>): Prisma__Send_DatasClient<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Send_Datas.
     * @param {Send_DatasUpdateArgs} args - Arguments to update one Send_Datas.
     * @example
     * // Update one Send_Datas
     * const send_Datas = await prisma.send_Datas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Send_DatasUpdateArgs>(args: SelectSubset<T, Send_DatasUpdateArgs<ExtArgs>>): Prisma__Send_DatasClient<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Send_Datas.
     * @param {Send_DatasDeleteManyArgs} args - Arguments to filter Send_Datas to delete.
     * @example
     * // Delete a few Send_Datas
     * const { count } = await prisma.send_Datas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Send_DatasDeleteManyArgs>(args?: SelectSubset<T, Send_DatasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Send_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Send_DatasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Send_Datas
     * const send_Datas = await prisma.send_Datas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Send_DatasUpdateManyArgs>(args: SelectSubset<T, Send_DatasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Send_Datas.
     * @param {Send_DatasUpsertArgs} args - Arguments to update or create a Send_Datas.
     * @example
     * // Update or create a Send_Datas
     * const send_Datas = await prisma.send_Datas.upsert({
     *   create: {
     *     // ... data to create a Send_Datas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Send_Datas we want to update
     *   }
     * })
     */
    upsert<T extends Send_DatasUpsertArgs>(args: SelectSubset<T, Send_DatasUpsertArgs<ExtArgs>>): Prisma__Send_DatasClient<$Result.GetResult<Prisma.$Send_DatasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Send_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Send_DatasCountArgs} args - Arguments to filter Send_Datas to count.
     * @example
     * // Count the number of Send_Datas
     * const count = await prisma.send_Datas.count({
     *   where: {
     *     // ... the filter for the Send_Datas we want to count
     *   }
     * })
    **/
    count<T extends Send_DatasCountArgs>(
      args?: Subset<T, Send_DatasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Send_DatasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Send_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Send_DatasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Send_DatasAggregateArgs>(args: Subset<T, Send_DatasAggregateArgs>): Prisma.PrismaPromise<GetSend_DatasAggregateType<T>>

    /**
     * Group by Send_Datas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Send_DatasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Send_DatasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Send_DatasGroupByArgs['orderBy'] }
        : { orderBy?: Send_DatasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Send_DatasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSend_DatasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Send_Datas model
   */
  readonly fields: Send_DatasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Send_Datas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Send_DatasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    History_Request_Datas<T extends Send_Datas$History_Request_DatasArgs<ExtArgs> = {}>(args?: Subset<T, Send_Datas$History_Request_DatasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Send_Datas model
   */ 
  interface Send_DatasFieldRefs {
    readonly id_send_data: FieldRef<"Send_Datas", 'Int'>
    readonly local_name: FieldRef<"Send_Datas", 'Int'>
    readonly latin_name: FieldRef<"Send_Datas", 'Int'>
    readonly habitat: FieldRef<"Send_Datas", 'Int'>
    readonly description: FieldRef<"Send_Datas", 'Int'>
    readonly city: FieldRef<"Send_Datas", 'Int'>
    readonly longitude: FieldRef<"Send_Datas", 'Int'>
    readonly latitude: FieldRef<"Send_Datas", 'Int'>
    readonly image: FieldRef<"Send_Datas", 'Int'>
    readonly amount: FieldRef<"Send_Datas", 'Int'>
    readonly date_start: FieldRef<"Send_Datas", 'DateTime'>
    readonly date_end: FieldRef<"Send_Datas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Send_Datas findUnique
   */
  export type Send_DatasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Send_DatasInclude<ExtArgs> | null
    /**
     * Filter, which Send_Datas to fetch.
     */
    where: Send_DatasWhereUniqueInput
  }

  /**
   * Send_Datas findUniqueOrThrow
   */
  export type Send_DatasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Send_DatasInclude<ExtArgs> | null
    /**
     * Filter, which Send_Datas to fetch.
     */
    where: Send_DatasWhereUniqueInput
  }

  /**
   * Send_Datas findFirst
   */
  export type Send_DatasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Send_DatasInclude<ExtArgs> | null
    /**
     * Filter, which Send_Datas to fetch.
     */
    where?: Send_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Send_Datas to fetch.
     */
    orderBy?: Send_DatasOrderByWithRelationInput | Send_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Send_Datas.
     */
    cursor?: Send_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Send_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Send_Datas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Send_Datas.
     */
    distinct?: Send_DatasScalarFieldEnum | Send_DatasScalarFieldEnum[]
  }

  /**
   * Send_Datas findFirstOrThrow
   */
  export type Send_DatasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Send_DatasInclude<ExtArgs> | null
    /**
     * Filter, which Send_Datas to fetch.
     */
    where?: Send_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Send_Datas to fetch.
     */
    orderBy?: Send_DatasOrderByWithRelationInput | Send_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Send_Datas.
     */
    cursor?: Send_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Send_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Send_Datas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Send_Datas.
     */
    distinct?: Send_DatasScalarFieldEnum | Send_DatasScalarFieldEnum[]
  }

  /**
   * Send_Datas findMany
   */
  export type Send_DatasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Send_DatasInclude<ExtArgs> | null
    /**
     * Filter, which Send_Datas to fetch.
     */
    where?: Send_DatasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Send_Datas to fetch.
     */
    orderBy?: Send_DatasOrderByWithRelationInput | Send_DatasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Send_Datas.
     */
    cursor?: Send_DatasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Send_Datas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Send_Datas.
     */
    skip?: number
    distinct?: Send_DatasScalarFieldEnum | Send_DatasScalarFieldEnum[]
  }

  /**
   * Send_Datas create
   */
  export type Send_DatasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Send_DatasInclude<ExtArgs> | null
    /**
     * The data needed to create a Send_Datas.
     */
    data: XOR<Send_DatasCreateInput, Send_DatasUncheckedCreateInput>
  }

  /**
   * Send_Datas createMany
   */
  export type Send_DatasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Send_Datas.
     */
    data: Send_DatasCreateManyInput | Send_DatasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Send_Datas createManyAndReturn
   */
  export type Send_DatasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Send_Datas.
     */
    data: Send_DatasCreateManyInput | Send_DatasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Send_Datas update
   */
  export type Send_DatasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Send_DatasInclude<ExtArgs> | null
    /**
     * The data needed to update a Send_Datas.
     */
    data: XOR<Send_DatasUpdateInput, Send_DatasUncheckedUpdateInput>
    /**
     * Choose, which Send_Datas to update.
     */
    where: Send_DatasWhereUniqueInput
  }

  /**
   * Send_Datas updateMany
   */
  export type Send_DatasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Send_Datas.
     */
    data: XOR<Send_DatasUpdateManyMutationInput, Send_DatasUncheckedUpdateManyInput>
    /**
     * Filter which Send_Datas to update
     */
    where?: Send_DatasWhereInput
  }

  /**
   * Send_Datas upsert
   */
  export type Send_DatasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Send_DatasInclude<ExtArgs> | null
    /**
     * The filter to search for the Send_Datas to update in case it exists.
     */
    where: Send_DatasWhereUniqueInput
    /**
     * In case the Send_Datas found by the `where` argument doesn't exist, create a new Send_Datas with this data.
     */
    create: XOR<Send_DatasCreateInput, Send_DatasUncheckedCreateInput>
    /**
     * In case the Send_Datas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Send_DatasUpdateInput, Send_DatasUncheckedUpdateInput>
  }

  /**
   * Send_Datas delete
   */
  export type Send_DatasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Send_DatasInclude<ExtArgs> | null
    /**
     * Filter which Send_Datas to delete.
     */
    where: Send_DatasWhereUniqueInput
  }

  /**
   * Send_Datas deleteMany
   */
  export type Send_DatasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Send_Datas to delete
     */
    where?: Send_DatasWhereInput
  }

  /**
   * Send_Datas.History_Request_Datas
   */
  export type Send_Datas$History_Request_DatasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    where?: History_Request_DatasWhereInput
    orderBy?: History_Request_DatasOrderByWithRelationInput | History_Request_DatasOrderByWithRelationInput[]
    cursor?: History_Request_DatasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: History_Request_DatasScalarFieldEnum | History_Request_DatasScalarFieldEnum[]
  }

  /**
   * Send_Datas without action
   */
  export type Send_DatasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Send_Datas
     */
    select?: Send_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Send_DatasInclude<ExtArgs> | null
  }


  /**
   * Model Users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id_user: number | null
    status: number | null
  }

  export type UsersSumAggregateOutputType = {
    id_user: number | null
    status: number | null
  }

  export type UsersMinAggregateOutputType = {
    id_user: number | null
    email: string | null
    name: string | null
    phone: string | null
    password: string | null
    picture: string | null
    refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    status: number | null
    ip_address: string | null
  }

  export type UsersMaxAggregateOutputType = {
    id_user: number | null
    email: string | null
    name: string | null
    phone: string | null
    password: string | null
    picture: string | null
    refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    status: number | null
    ip_address: string | null
  }

  export type UsersCountAggregateOutputType = {
    id_user: number
    email: number
    name: number
    phone: number
    password: number
    picture: number
    refresh_token: number
    created_at: number
    updated_at: number
    status: number
    ip_address: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id_user?: true
    status?: true
  }

  export type UsersSumAggregateInputType = {
    id_user?: true
    status?: true
  }

  export type UsersMinAggregateInputType = {
    id_user?: true
    email?: true
    name?: true
    phone?: true
    password?: true
    picture?: true
    refresh_token?: true
    created_at?: true
    updated_at?: true
    status?: true
    ip_address?: true
  }

  export type UsersMaxAggregateInputType = {
    id_user?: true
    email?: true
    name?: true
    phone?: true
    password?: true
    picture?: true
    refresh_token?: true
    created_at?: true
    updated_at?: true
    status?: true
    ip_address?: true
  }

  export type UsersCountAggregateInputType = {
    id_user?: true
    email?: true
    name?: true
    phone?: true
    password?: true
    picture?: true
    refresh_token?: true
    created_at?: true
    updated_at?: true
    status?: true
    ip_address?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to aggregate.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersWhereInput
    orderBy?: UsersOrderByWithAggregationInput | UsersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: UsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id_user: number
    email: string | null
    name: string | null
    phone: string | null
    password: string | null
    picture: string | null
    refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    status: number | null
    ip_address: string | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type UsersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_user?: boolean
    email?: boolean
    name?: boolean
    phone?: boolean
    password?: boolean
    picture?: boolean
    refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    status?: boolean
    ip_address?: boolean
    animals?: boolean | Users$animalsArgs<ExtArgs>
    request_datas?: boolean | Users$request_datasArgs<ExtArgs>
    history_request_datas?: boolean | Users$history_request_datasArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type UsersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_user?: boolean
    email?: boolean
    name?: boolean
    phone?: boolean
    password?: boolean
    picture?: boolean
    refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    status?: boolean
    ip_address?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectScalar = {
    id_user?: boolean
    email?: boolean
    name?: boolean
    phone?: boolean
    password?: boolean
    picture?: boolean
    refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    status?: boolean
    ip_address?: boolean
  }

  export type UsersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animals?: boolean | Users$animalsArgs<ExtArgs>
    request_datas?: boolean | Users$request_datasArgs<ExtArgs>
    history_request_datas?: boolean | Users$history_request_datasArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Users"
    objects: {
      animals: Prisma.$AnimalsPayload<ExtArgs>[]
      request_datas: Prisma.$Request_DatasPayload<ExtArgs>[]
      history_request_datas: Prisma.$History_Request_DatasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_user: number
      email: string | null
      name: string | null
      phone: string | null
      password: string | null
      picture: string | null
      refresh_token: string | null
      created_at: Date | null
      updated_at: Date | null
      status: number | null
      ip_address: string | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type UsersGetPayload<S extends boolean | null | undefined | UsersDefaultArgs> = $Result.GetResult<Prisma.$UsersPayload, S>

  type UsersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface UsersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Users'], meta: { name: 'Users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {UsersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsersFindUniqueArgs>(args: SelectSubset<T, UsersFindUniqueArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsersFindUniqueOrThrowArgs>(args: SelectSubset<T, UsersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsersFindFirstArgs>(args?: SelectSubset<T, UsersFindFirstArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsersFindFirstOrThrowArgs>(args?: SelectSubset<T, UsersFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id_user`
     * const usersWithId_userOnly = await prisma.users.findMany({ select: { id_user: true } })
     * 
     */
    findMany<T extends UsersFindManyArgs>(args?: SelectSubset<T, UsersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Users.
     * @param {UsersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends UsersCreateArgs>(args: SelectSubset<T, UsersCreateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UsersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsersCreateManyArgs>(args?: SelectSubset<T, UsersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UsersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id_user`
     * const usersWithId_userOnly = await prisma.users.createManyAndReturn({ 
     *   select: { id_user: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsersCreateManyAndReturnArgs>(args?: SelectSubset<T, UsersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Users.
     * @param {UsersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends UsersDeleteArgs>(args: SelectSubset<T, UsersDeleteArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Users.
     * @param {UsersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsersUpdateArgs>(args: SelectSubset<T, UsersUpdateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UsersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsersDeleteManyArgs>(args?: SelectSubset<T, UsersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsersUpdateManyArgs>(args: SelectSubset<T, UsersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {UsersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends UsersUpsertArgs>(args: SelectSubset<T, UsersUpsertArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UsersCountArgs>(
      args?: Subset<T, UsersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Users model
   */
  readonly fields: UsersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    animals<T extends Users$animalsArgs<ExtArgs> = {}>(args?: Subset<T, Users$animalsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnimalsPayload<ExtArgs>, T, "findMany"> | Null>
    request_datas<T extends Users$request_datasArgs<ExtArgs> = {}>(args?: Subset<T, Users$request_datasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Request_DatasPayload<ExtArgs>, T, "findMany"> | Null>
    history_request_datas<T extends Users$history_request_datasArgs<ExtArgs> = {}>(args?: Subset<T, Users$history_request_datasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$History_Request_DatasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Users model
   */ 
  interface UsersFieldRefs {
    readonly id_user: FieldRef<"Users", 'Int'>
    readonly email: FieldRef<"Users", 'String'>
    readonly name: FieldRef<"Users", 'String'>
    readonly phone: FieldRef<"Users", 'String'>
    readonly password: FieldRef<"Users", 'String'>
    readonly picture: FieldRef<"Users", 'String'>
    readonly refresh_token: FieldRef<"Users", 'String'>
    readonly created_at: FieldRef<"Users", 'DateTime'>
    readonly updated_at: FieldRef<"Users", 'DateTime'>
    readonly status: FieldRef<"Users", 'Int'>
    readonly ip_address: FieldRef<"Users", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Users findUnique
   */
  export type UsersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findUniqueOrThrow
   */
  export type UsersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findFirst
   */
  export type UsersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findFirstOrThrow
   */
  export type UsersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findMany
   */
  export type UsersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users create
   */
  export type UsersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to create a Users.
     */
    data?: XOR<UsersCreateInput, UsersUncheckedCreateInput>
  }

  /**
   * Users createMany
   */
  export type UsersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users createManyAndReturn
   */
  export type UsersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users update
   */
  export type UsersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to update a Users.
     */
    data: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
    /**
     * Choose, which Users to update.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users updateMany
   */
  export type UsersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
  }

  /**
   * Users upsert
   */
  export type UsersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The filter to search for the Users to update in case it exists.
     */
    where: UsersWhereUniqueInput
    /**
     * In case the Users found by the `where` argument doesn't exist, create a new Users with this data.
     */
    create: XOR<UsersCreateInput, UsersUncheckedCreateInput>
    /**
     * In case the Users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
  }

  /**
   * Users delete
   */
  export type UsersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter which Users to delete.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users deleteMany
   */
  export type UsersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UsersWhereInput
  }

  /**
   * Users.animals
   */
  export type Users$animalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animals
     */
    select?: AnimalsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalsInclude<ExtArgs> | null
    where?: AnimalsWhereInput
    orderBy?: AnimalsOrderByWithRelationInput | AnimalsOrderByWithRelationInput[]
    cursor?: AnimalsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnimalsScalarFieldEnum | AnimalsScalarFieldEnum[]
  }

  /**
   * Users.request_datas
   */
  export type Users$request_datasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Request_Datas
     */
    select?: Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Request_DatasInclude<ExtArgs> | null
    where?: Request_DatasWhereInput
    orderBy?: Request_DatasOrderByWithRelationInput | Request_DatasOrderByWithRelationInput[]
    cursor?: Request_DatasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Request_DatasScalarFieldEnum | Request_DatasScalarFieldEnum[]
  }

  /**
   * Users.history_request_datas
   */
  export type Users$history_request_datasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the History_Request_Datas
     */
    select?: History_Request_DatasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: History_Request_DatasInclude<ExtArgs> | null
    where?: History_Request_DatasWhereInput
    orderBy?: History_Request_DatasOrderByWithRelationInput | History_Request_DatasOrderByWithRelationInput[]
    cursor?: History_Request_DatasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: History_Request_DatasScalarFieldEnum | History_Request_DatasScalarFieldEnum[]
  }

  /**
   * Users without action
   */
  export type UsersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AdminsScalarFieldEnum: {
    id_admin: 'id_admin',
    email: 'email',
    password: 'password',
    refresh_token: 'refresh_token',
    ip_address: 'ip_address'
  };

  export type AdminsScalarFieldEnum = (typeof AdminsScalarFieldEnum)[keyof typeof AdminsScalarFieldEnum]


  export const AnimalsScalarFieldEnum: {
    id_animal: 'id_animal',
    local_name: 'local_name',
    latin_name: 'latin_name',
    habitat: 'habitat',
    description: 'description',
    city: 'city',
    longitude: 'longitude',
    latitude: 'latitude',
    image: 'image',
    amount: 'amount',
    id_user: 'id_user',
    date: 'date',
    updated_at: 'updated_at'
  };

  export type AnimalsScalarFieldEnum = (typeof AnimalsScalarFieldEnum)[keyof typeof AnimalsScalarFieldEnum]


  export const History_Request_DatasScalarFieldEnum: {
    id_history_request_data: 'id_history_request_data',
    email: 'email',
    name: 'name',
    profession: 'profession',
    instances: 'instances',
    subject: 'subject',
    body: 'body',
    id_send_data: 'id_send_data',
    id_user: 'id_user',
    date: 'date'
  };

  export type History_Request_DatasScalarFieldEnum = (typeof History_Request_DatasScalarFieldEnum)[keyof typeof History_Request_DatasScalarFieldEnum]


  export const OtpsScalarFieldEnum: {
    id_otp: 'id_otp',
    email: 'email',
    otp: 'otp',
    expired_at: 'expired_at',
    used: 'used'
  };

  export type OtpsScalarFieldEnum = (typeof OtpsScalarFieldEnum)[keyof typeof OtpsScalarFieldEnum]


  export const Request_AccountsScalarFieldEnum: {
    id_request_account: 'id_request_account',
    name: 'name',
    email: 'email',
    phone: 'phone',
    profession: 'profession',
    instances: 'instances',
    subject: 'subject',
    body: 'body',
    date: 'date',
    approve: 'approve'
  };

  export type Request_AccountsScalarFieldEnum = (typeof Request_AccountsScalarFieldEnum)[keyof typeof Request_AccountsScalarFieldEnum]


  export const Request_DatasScalarFieldEnum: {
    id_request_data: 'id_request_data',
    name: 'name',
    email: 'email',
    profession: 'profession',
    instances: 'instances',
    subject: 'subject',
    body: 'body',
    date: 'date',
    approve: 'approve',
    id_user: 'id_user',
    url: 'url'
  };

  export type Request_DatasScalarFieldEnum = (typeof Request_DatasScalarFieldEnum)[keyof typeof Request_DatasScalarFieldEnum]


  export const Send_DatasScalarFieldEnum: {
    id_send_data: 'id_send_data',
    local_name: 'local_name',
    latin_name: 'latin_name',
    habitat: 'habitat',
    description: 'description',
    city: 'city',
    longitude: 'longitude',
    latitude: 'latitude',
    image: 'image',
    amount: 'amount',
    date_start: 'date_start',
    date_end: 'date_end'
  };

  export type Send_DatasScalarFieldEnum = (typeof Send_DatasScalarFieldEnum)[keyof typeof Send_DatasScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id_user: 'id_user',
    email: 'email',
    name: 'name',
    phone: 'phone',
    password: 'password',
    picture: 'picture',
    refresh_token: 'refresh_token',
    created_at: 'created_at',
    updated_at: 'updated_at',
    status: 'status',
    ip_address: 'ip_address'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const AdminsOrderByRelevanceFieldEnum: {
    email: 'email',
    password: 'password',
    refresh_token: 'refresh_token',
    ip_address: 'ip_address'
  };

  export type AdminsOrderByRelevanceFieldEnum = (typeof AdminsOrderByRelevanceFieldEnum)[keyof typeof AdminsOrderByRelevanceFieldEnum]


  export const AnimalsOrderByRelevanceFieldEnum: {
    local_name: 'local_name',
    latin_name: 'latin_name',
    habitat: 'habitat',
    description: 'description',
    city: 'city',
    longitude: 'longitude',
    latitude: 'latitude',
    image: 'image'
  };

  export type AnimalsOrderByRelevanceFieldEnum = (typeof AnimalsOrderByRelevanceFieldEnum)[keyof typeof AnimalsOrderByRelevanceFieldEnum]


  export const History_Request_DatasOrderByRelevanceFieldEnum: {
    email: 'email',
    name: 'name',
    profession: 'profession',
    instances: 'instances',
    subject: 'subject',
    body: 'body'
  };

  export type History_Request_DatasOrderByRelevanceFieldEnum = (typeof History_Request_DatasOrderByRelevanceFieldEnum)[keyof typeof History_Request_DatasOrderByRelevanceFieldEnum]


  export const OtpsOrderByRelevanceFieldEnum: {
    email: 'email',
    otp: 'otp'
  };

  export type OtpsOrderByRelevanceFieldEnum = (typeof OtpsOrderByRelevanceFieldEnum)[keyof typeof OtpsOrderByRelevanceFieldEnum]


  export const Request_AccountsOrderByRelevanceFieldEnum: {
    name: 'name',
    email: 'email',
    phone: 'phone',
    profession: 'profession',
    instances: 'instances',
    subject: 'subject',
    body: 'body'
  };

  export type Request_AccountsOrderByRelevanceFieldEnum = (typeof Request_AccountsOrderByRelevanceFieldEnum)[keyof typeof Request_AccountsOrderByRelevanceFieldEnum]


  export const Request_DatasOrderByRelevanceFieldEnum: {
    name: 'name',
    email: 'email',
    profession: 'profession',
    instances: 'instances',
    subject: 'subject',
    body: 'body',
    url: 'url'
  };

  export type Request_DatasOrderByRelevanceFieldEnum = (typeof Request_DatasOrderByRelevanceFieldEnum)[keyof typeof Request_DatasOrderByRelevanceFieldEnum]


  export const UsersOrderByRelevanceFieldEnum: {
    email: 'email',
    name: 'name',
    phone: 'phone',
    password: 'password',
    picture: 'picture',
    refresh_token: 'refresh_token',
    ip_address: 'ip_address'
  };

  export type UsersOrderByRelevanceFieldEnum = (typeof UsersOrderByRelevanceFieldEnum)[keyof typeof UsersOrderByRelevanceFieldEnum]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type AdminsWhereInput = {
    AND?: AdminsWhereInput | AdminsWhereInput[]
    OR?: AdminsWhereInput[]
    NOT?: AdminsWhereInput | AdminsWhereInput[]
    id_admin?: IntFilter<"Admins"> | number
    email?: StringFilter<"Admins"> | string
    password?: StringFilter<"Admins"> | string
    refresh_token?: StringNullableFilter<"Admins"> | string | null
    ip_address?: StringNullableFilter<"Admins"> | string | null
  }

  export type AdminsOrderByWithRelationInput = {
    id_admin?: SortOrder
    email?: SortOrder
    password?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    _relevance?: AdminsOrderByRelevanceInput
  }

  export type AdminsWhereUniqueInput = Prisma.AtLeast<{
    id_admin?: number
    email?: string
    AND?: AdminsWhereInput | AdminsWhereInput[]
    OR?: AdminsWhereInput[]
    NOT?: AdminsWhereInput | AdminsWhereInput[]
    password?: StringFilter<"Admins"> | string
    refresh_token?: StringNullableFilter<"Admins"> | string | null
    ip_address?: StringNullableFilter<"Admins"> | string | null
  }, "id_admin" | "email">

  export type AdminsOrderByWithAggregationInput = {
    id_admin?: SortOrder
    email?: SortOrder
    password?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    _count?: AdminsCountOrderByAggregateInput
    _avg?: AdminsAvgOrderByAggregateInput
    _max?: AdminsMaxOrderByAggregateInput
    _min?: AdminsMinOrderByAggregateInput
    _sum?: AdminsSumOrderByAggregateInput
  }

  export type AdminsScalarWhereWithAggregatesInput = {
    AND?: AdminsScalarWhereWithAggregatesInput | AdminsScalarWhereWithAggregatesInput[]
    OR?: AdminsScalarWhereWithAggregatesInput[]
    NOT?: AdminsScalarWhereWithAggregatesInput | AdminsScalarWhereWithAggregatesInput[]
    id_admin?: IntWithAggregatesFilter<"Admins"> | number
    email?: StringWithAggregatesFilter<"Admins"> | string
    password?: StringWithAggregatesFilter<"Admins"> | string
    refresh_token?: StringNullableWithAggregatesFilter<"Admins"> | string | null
    ip_address?: StringNullableWithAggregatesFilter<"Admins"> | string | null
  }

  export type AnimalsWhereInput = {
    AND?: AnimalsWhereInput | AnimalsWhereInput[]
    OR?: AnimalsWhereInput[]
    NOT?: AnimalsWhereInput | AnimalsWhereInput[]
    id_animal?: IntFilter<"Animals"> | number
    local_name?: StringFilter<"Animals"> | string
    latin_name?: StringFilter<"Animals"> | string
    habitat?: StringFilter<"Animals"> | string
    description?: StringNullableFilter<"Animals"> | string | null
    city?: StringFilter<"Animals"> | string
    longitude?: StringFilter<"Animals"> | string
    latitude?: StringFilter<"Animals"> | string
    image?: StringFilter<"Animals"> | string
    amount?: IntFilter<"Animals"> | number
    id_user?: IntFilter<"Animals"> | number
    date?: DateTimeNullableFilter<"Animals"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"Animals"> | Date | string | null
    user?: XOR<UsersRelationFilter, UsersWhereInput>
  }

  export type AnimalsOrderByWithRelationInput = {
    id_animal?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrderInput | SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
    id_user?: SortOrder
    date?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    user?: UsersOrderByWithRelationInput
    _relevance?: AnimalsOrderByRelevanceInput
  }

  export type AnimalsWhereUniqueInput = Prisma.AtLeast<{
    id_animal?: number
    AND?: AnimalsWhereInput | AnimalsWhereInput[]
    OR?: AnimalsWhereInput[]
    NOT?: AnimalsWhereInput | AnimalsWhereInput[]
    local_name?: StringFilter<"Animals"> | string
    latin_name?: StringFilter<"Animals"> | string
    habitat?: StringFilter<"Animals"> | string
    description?: StringNullableFilter<"Animals"> | string | null
    city?: StringFilter<"Animals"> | string
    longitude?: StringFilter<"Animals"> | string
    latitude?: StringFilter<"Animals"> | string
    image?: StringFilter<"Animals"> | string
    amount?: IntFilter<"Animals"> | number
    id_user?: IntFilter<"Animals"> | number
    date?: DateTimeNullableFilter<"Animals"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"Animals"> | Date | string | null
    user?: XOR<UsersRelationFilter, UsersWhereInput>
  }, "id_animal">

  export type AnimalsOrderByWithAggregationInput = {
    id_animal?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrderInput | SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
    id_user?: SortOrder
    date?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: AnimalsCountOrderByAggregateInput
    _avg?: AnimalsAvgOrderByAggregateInput
    _max?: AnimalsMaxOrderByAggregateInput
    _min?: AnimalsMinOrderByAggregateInput
    _sum?: AnimalsSumOrderByAggregateInput
  }

  export type AnimalsScalarWhereWithAggregatesInput = {
    AND?: AnimalsScalarWhereWithAggregatesInput | AnimalsScalarWhereWithAggregatesInput[]
    OR?: AnimalsScalarWhereWithAggregatesInput[]
    NOT?: AnimalsScalarWhereWithAggregatesInput | AnimalsScalarWhereWithAggregatesInput[]
    id_animal?: IntWithAggregatesFilter<"Animals"> | number
    local_name?: StringWithAggregatesFilter<"Animals"> | string
    latin_name?: StringWithAggregatesFilter<"Animals"> | string
    habitat?: StringWithAggregatesFilter<"Animals"> | string
    description?: StringNullableWithAggregatesFilter<"Animals"> | string | null
    city?: StringWithAggregatesFilter<"Animals"> | string
    longitude?: StringWithAggregatesFilter<"Animals"> | string
    latitude?: StringWithAggregatesFilter<"Animals"> | string
    image?: StringWithAggregatesFilter<"Animals"> | string
    amount?: IntWithAggregatesFilter<"Animals"> | number
    id_user?: IntWithAggregatesFilter<"Animals"> | number
    date?: DateTimeNullableWithAggregatesFilter<"Animals"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"Animals"> | Date | string | null
  }

  export type History_Request_DatasWhereInput = {
    AND?: History_Request_DatasWhereInput | History_Request_DatasWhereInput[]
    OR?: History_Request_DatasWhereInput[]
    NOT?: History_Request_DatasWhereInput | History_Request_DatasWhereInput[]
    id_history_request_data?: IntFilter<"History_Request_Datas"> | number
    email?: StringFilter<"History_Request_Datas"> | string
    name?: StringFilter<"History_Request_Datas"> | string
    profession?: StringFilter<"History_Request_Datas"> | string
    instances?: StringFilter<"History_Request_Datas"> | string
    subject?: StringFilter<"History_Request_Datas"> | string
    body?: StringFilter<"History_Request_Datas"> | string
    id_send_data?: IntFilter<"History_Request_Datas"> | number
    id_user?: IntFilter<"History_Request_Datas"> | number
    date?: DateTimeNullableFilter<"History_Request_Datas"> | Date | string | null
    send_data?: XOR<Send_DatasRelationFilter, Send_DatasWhereInput>
    user?: XOR<UsersRelationFilter, UsersWhereInput>
  }

  export type History_Request_DatasOrderByWithRelationInput = {
    id_history_request_data?: SortOrder
    email?: SortOrder
    name?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    id_send_data?: SortOrder
    id_user?: SortOrder
    date?: SortOrderInput | SortOrder
    send_data?: Send_DatasOrderByWithRelationInput
    user?: UsersOrderByWithRelationInput
    _relevance?: History_Request_DatasOrderByRelevanceInput
  }

  export type History_Request_DatasWhereUniqueInput = Prisma.AtLeast<{
    id_history_request_data?: number
    AND?: History_Request_DatasWhereInput | History_Request_DatasWhereInput[]
    OR?: History_Request_DatasWhereInput[]
    NOT?: History_Request_DatasWhereInput | History_Request_DatasWhereInput[]
    email?: StringFilter<"History_Request_Datas"> | string
    name?: StringFilter<"History_Request_Datas"> | string
    profession?: StringFilter<"History_Request_Datas"> | string
    instances?: StringFilter<"History_Request_Datas"> | string
    subject?: StringFilter<"History_Request_Datas"> | string
    body?: StringFilter<"History_Request_Datas"> | string
    id_send_data?: IntFilter<"History_Request_Datas"> | number
    id_user?: IntFilter<"History_Request_Datas"> | number
    date?: DateTimeNullableFilter<"History_Request_Datas"> | Date | string | null
    send_data?: XOR<Send_DatasRelationFilter, Send_DatasWhereInput>
    user?: XOR<UsersRelationFilter, UsersWhereInput>
  }, "id_history_request_data">

  export type History_Request_DatasOrderByWithAggregationInput = {
    id_history_request_data?: SortOrder
    email?: SortOrder
    name?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    id_send_data?: SortOrder
    id_user?: SortOrder
    date?: SortOrderInput | SortOrder
    _count?: History_Request_DatasCountOrderByAggregateInput
    _avg?: History_Request_DatasAvgOrderByAggregateInput
    _max?: History_Request_DatasMaxOrderByAggregateInput
    _min?: History_Request_DatasMinOrderByAggregateInput
    _sum?: History_Request_DatasSumOrderByAggregateInput
  }

  export type History_Request_DatasScalarWhereWithAggregatesInput = {
    AND?: History_Request_DatasScalarWhereWithAggregatesInput | History_Request_DatasScalarWhereWithAggregatesInput[]
    OR?: History_Request_DatasScalarWhereWithAggregatesInput[]
    NOT?: History_Request_DatasScalarWhereWithAggregatesInput | History_Request_DatasScalarWhereWithAggregatesInput[]
    id_history_request_data?: IntWithAggregatesFilter<"History_Request_Datas"> | number
    email?: StringWithAggregatesFilter<"History_Request_Datas"> | string
    name?: StringWithAggregatesFilter<"History_Request_Datas"> | string
    profession?: StringWithAggregatesFilter<"History_Request_Datas"> | string
    instances?: StringWithAggregatesFilter<"History_Request_Datas"> | string
    subject?: StringWithAggregatesFilter<"History_Request_Datas"> | string
    body?: StringWithAggregatesFilter<"History_Request_Datas"> | string
    id_send_data?: IntWithAggregatesFilter<"History_Request_Datas"> | number
    id_user?: IntWithAggregatesFilter<"History_Request_Datas"> | number
    date?: DateTimeNullableWithAggregatesFilter<"History_Request_Datas"> | Date | string | null
  }

  export type OtpsWhereInput = {
    AND?: OtpsWhereInput | OtpsWhereInput[]
    OR?: OtpsWhereInput[]
    NOT?: OtpsWhereInput | OtpsWhereInput[]
    id_otp?: IntFilter<"Otps"> | number
    email?: StringNullableFilter<"Otps"> | string | null
    otp?: StringNullableFilter<"Otps"> | string | null
    expired_at?: DateTimeNullableFilter<"Otps"> | Date | string | null
    used?: IntFilter<"Otps"> | number
  }

  export type OtpsOrderByWithRelationInput = {
    id_otp?: SortOrder
    email?: SortOrderInput | SortOrder
    otp?: SortOrderInput | SortOrder
    expired_at?: SortOrderInput | SortOrder
    used?: SortOrder
    _relevance?: OtpsOrderByRelevanceInput
  }

  export type OtpsWhereUniqueInput = Prisma.AtLeast<{
    id_otp?: number
    AND?: OtpsWhereInput | OtpsWhereInput[]
    OR?: OtpsWhereInput[]
    NOT?: OtpsWhereInput | OtpsWhereInput[]
    email?: StringNullableFilter<"Otps"> | string | null
    otp?: StringNullableFilter<"Otps"> | string | null
    expired_at?: DateTimeNullableFilter<"Otps"> | Date | string | null
    used?: IntFilter<"Otps"> | number
  }, "id_otp">

  export type OtpsOrderByWithAggregationInput = {
    id_otp?: SortOrder
    email?: SortOrderInput | SortOrder
    otp?: SortOrderInput | SortOrder
    expired_at?: SortOrderInput | SortOrder
    used?: SortOrder
    _count?: OtpsCountOrderByAggregateInput
    _avg?: OtpsAvgOrderByAggregateInput
    _max?: OtpsMaxOrderByAggregateInput
    _min?: OtpsMinOrderByAggregateInput
    _sum?: OtpsSumOrderByAggregateInput
  }

  export type OtpsScalarWhereWithAggregatesInput = {
    AND?: OtpsScalarWhereWithAggregatesInput | OtpsScalarWhereWithAggregatesInput[]
    OR?: OtpsScalarWhereWithAggregatesInput[]
    NOT?: OtpsScalarWhereWithAggregatesInput | OtpsScalarWhereWithAggregatesInput[]
    id_otp?: IntWithAggregatesFilter<"Otps"> | number
    email?: StringNullableWithAggregatesFilter<"Otps"> | string | null
    otp?: StringNullableWithAggregatesFilter<"Otps"> | string | null
    expired_at?: DateTimeNullableWithAggregatesFilter<"Otps"> | Date | string | null
    used?: IntWithAggregatesFilter<"Otps"> | number
  }

  export type Request_AccountsWhereInput = {
    AND?: Request_AccountsWhereInput | Request_AccountsWhereInput[]
    OR?: Request_AccountsWhereInput[]
    NOT?: Request_AccountsWhereInput | Request_AccountsWhereInput[]
    id_request_account?: IntFilter<"Request_Accounts"> | number
    name?: StringFilter<"Request_Accounts"> | string
    email?: StringFilter<"Request_Accounts"> | string
    phone?: StringFilter<"Request_Accounts"> | string
    profession?: StringFilter<"Request_Accounts"> | string
    instances?: StringFilter<"Request_Accounts"> | string
    subject?: StringFilter<"Request_Accounts"> | string
    body?: StringFilter<"Request_Accounts"> | string
    date?: DateTimeFilter<"Request_Accounts"> | Date | string
    approve?: IntFilter<"Request_Accounts"> | number
  }

  export type Request_AccountsOrderByWithRelationInput = {
    id_request_account?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    date?: SortOrder
    approve?: SortOrder
    _relevance?: Request_AccountsOrderByRelevanceInput
  }

  export type Request_AccountsWhereUniqueInput = Prisma.AtLeast<{
    id_request_account?: number
    AND?: Request_AccountsWhereInput | Request_AccountsWhereInput[]
    OR?: Request_AccountsWhereInput[]
    NOT?: Request_AccountsWhereInput | Request_AccountsWhereInput[]
    name?: StringFilter<"Request_Accounts"> | string
    email?: StringFilter<"Request_Accounts"> | string
    phone?: StringFilter<"Request_Accounts"> | string
    profession?: StringFilter<"Request_Accounts"> | string
    instances?: StringFilter<"Request_Accounts"> | string
    subject?: StringFilter<"Request_Accounts"> | string
    body?: StringFilter<"Request_Accounts"> | string
    date?: DateTimeFilter<"Request_Accounts"> | Date | string
    approve?: IntFilter<"Request_Accounts"> | number
  }, "id_request_account">

  export type Request_AccountsOrderByWithAggregationInput = {
    id_request_account?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    date?: SortOrder
    approve?: SortOrder
    _count?: Request_AccountsCountOrderByAggregateInput
    _avg?: Request_AccountsAvgOrderByAggregateInput
    _max?: Request_AccountsMaxOrderByAggregateInput
    _min?: Request_AccountsMinOrderByAggregateInput
    _sum?: Request_AccountsSumOrderByAggregateInput
  }

  export type Request_AccountsScalarWhereWithAggregatesInput = {
    AND?: Request_AccountsScalarWhereWithAggregatesInput | Request_AccountsScalarWhereWithAggregatesInput[]
    OR?: Request_AccountsScalarWhereWithAggregatesInput[]
    NOT?: Request_AccountsScalarWhereWithAggregatesInput | Request_AccountsScalarWhereWithAggregatesInput[]
    id_request_account?: IntWithAggregatesFilter<"Request_Accounts"> | number
    name?: StringWithAggregatesFilter<"Request_Accounts"> | string
    email?: StringWithAggregatesFilter<"Request_Accounts"> | string
    phone?: StringWithAggregatesFilter<"Request_Accounts"> | string
    profession?: StringWithAggregatesFilter<"Request_Accounts"> | string
    instances?: StringWithAggregatesFilter<"Request_Accounts"> | string
    subject?: StringWithAggregatesFilter<"Request_Accounts"> | string
    body?: StringWithAggregatesFilter<"Request_Accounts"> | string
    date?: DateTimeWithAggregatesFilter<"Request_Accounts"> | Date | string
    approve?: IntWithAggregatesFilter<"Request_Accounts"> | number
  }

  export type Request_DatasWhereInput = {
    AND?: Request_DatasWhereInput | Request_DatasWhereInput[]
    OR?: Request_DatasWhereInput[]
    NOT?: Request_DatasWhereInput | Request_DatasWhereInput[]
    id_request_data?: IntFilter<"Request_Datas"> | number
    name?: StringFilter<"Request_Datas"> | string
    email?: StringFilter<"Request_Datas"> | string
    profession?: StringFilter<"Request_Datas"> | string
    instances?: StringFilter<"Request_Datas"> | string
    subject?: StringFilter<"Request_Datas"> | string
    body?: StringFilter<"Request_Datas"> | string
    date?: DateTimeFilter<"Request_Datas"> | Date | string
    approve?: IntFilter<"Request_Datas"> | number
    id_user?: IntFilter<"Request_Datas"> | number
    url?: StringFilter<"Request_Datas"> | string
    user?: XOR<UsersRelationFilter, UsersWhereInput>
  }

  export type Request_DatasOrderByWithRelationInput = {
    id_request_data?: SortOrder
    name?: SortOrder
    email?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    date?: SortOrder
    approve?: SortOrder
    id_user?: SortOrder
    url?: SortOrder
    user?: UsersOrderByWithRelationInput
    _relevance?: Request_DatasOrderByRelevanceInput
  }

  export type Request_DatasWhereUniqueInput = Prisma.AtLeast<{
    id_request_data?: number
    AND?: Request_DatasWhereInput | Request_DatasWhereInput[]
    OR?: Request_DatasWhereInput[]
    NOT?: Request_DatasWhereInput | Request_DatasWhereInput[]
    name?: StringFilter<"Request_Datas"> | string
    email?: StringFilter<"Request_Datas"> | string
    profession?: StringFilter<"Request_Datas"> | string
    instances?: StringFilter<"Request_Datas"> | string
    subject?: StringFilter<"Request_Datas"> | string
    body?: StringFilter<"Request_Datas"> | string
    date?: DateTimeFilter<"Request_Datas"> | Date | string
    approve?: IntFilter<"Request_Datas"> | number
    id_user?: IntFilter<"Request_Datas"> | number
    url?: StringFilter<"Request_Datas"> | string
    user?: XOR<UsersRelationFilter, UsersWhereInput>
  }, "id_request_data">

  export type Request_DatasOrderByWithAggregationInput = {
    id_request_data?: SortOrder
    name?: SortOrder
    email?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    date?: SortOrder
    approve?: SortOrder
    id_user?: SortOrder
    url?: SortOrder
    _count?: Request_DatasCountOrderByAggregateInput
    _avg?: Request_DatasAvgOrderByAggregateInput
    _max?: Request_DatasMaxOrderByAggregateInput
    _min?: Request_DatasMinOrderByAggregateInput
    _sum?: Request_DatasSumOrderByAggregateInput
  }

  export type Request_DatasScalarWhereWithAggregatesInput = {
    AND?: Request_DatasScalarWhereWithAggregatesInput | Request_DatasScalarWhereWithAggregatesInput[]
    OR?: Request_DatasScalarWhereWithAggregatesInput[]
    NOT?: Request_DatasScalarWhereWithAggregatesInput | Request_DatasScalarWhereWithAggregatesInput[]
    id_request_data?: IntWithAggregatesFilter<"Request_Datas"> | number
    name?: StringWithAggregatesFilter<"Request_Datas"> | string
    email?: StringWithAggregatesFilter<"Request_Datas"> | string
    profession?: StringWithAggregatesFilter<"Request_Datas"> | string
    instances?: StringWithAggregatesFilter<"Request_Datas"> | string
    subject?: StringWithAggregatesFilter<"Request_Datas"> | string
    body?: StringWithAggregatesFilter<"Request_Datas"> | string
    date?: DateTimeWithAggregatesFilter<"Request_Datas"> | Date | string
    approve?: IntWithAggregatesFilter<"Request_Datas"> | number
    id_user?: IntWithAggregatesFilter<"Request_Datas"> | number
    url?: StringWithAggregatesFilter<"Request_Datas"> | string
  }

  export type Send_DatasWhereInput = {
    AND?: Send_DatasWhereInput | Send_DatasWhereInput[]
    OR?: Send_DatasWhereInput[]
    NOT?: Send_DatasWhereInput | Send_DatasWhereInput[]
    id_send_data?: IntFilter<"Send_Datas"> | number
    local_name?: IntFilter<"Send_Datas"> | number
    latin_name?: IntFilter<"Send_Datas"> | number
    habitat?: IntFilter<"Send_Datas"> | number
    description?: IntFilter<"Send_Datas"> | number
    city?: IntFilter<"Send_Datas"> | number
    longitude?: IntFilter<"Send_Datas"> | number
    latitude?: IntFilter<"Send_Datas"> | number
    image?: IntFilter<"Send_Datas"> | number
    amount?: IntFilter<"Send_Datas"> | number
    date_start?: DateTimeFilter<"Send_Datas"> | Date | string
    date_end?: DateTimeFilter<"Send_Datas"> | Date | string
    History_Request_Datas?: History_Request_DatasListRelationFilter
  }

  export type Send_DatasOrderByWithRelationInput = {
    id_send_data?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
    date_start?: SortOrder
    date_end?: SortOrder
    History_Request_Datas?: History_Request_DatasOrderByRelationAggregateInput
  }

  export type Send_DatasWhereUniqueInput = Prisma.AtLeast<{
    id_send_data?: number
    AND?: Send_DatasWhereInput | Send_DatasWhereInput[]
    OR?: Send_DatasWhereInput[]
    NOT?: Send_DatasWhereInput | Send_DatasWhereInput[]
    local_name?: IntFilter<"Send_Datas"> | number
    latin_name?: IntFilter<"Send_Datas"> | number
    habitat?: IntFilter<"Send_Datas"> | number
    description?: IntFilter<"Send_Datas"> | number
    city?: IntFilter<"Send_Datas"> | number
    longitude?: IntFilter<"Send_Datas"> | number
    latitude?: IntFilter<"Send_Datas"> | number
    image?: IntFilter<"Send_Datas"> | number
    amount?: IntFilter<"Send_Datas"> | number
    date_start?: DateTimeFilter<"Send_Datas"> | Date | string
    date_end?: DateTimeFilter<"Send_Datas"> | Date | string
    History_Request_Datas?: History_Request_DatasListRelationFilter
  }, "id_send_data">

  export type Send_DatasOrderByWithAggregationInput = {
    id_send_data?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
    date_start?: SortOrder
    date_end?: SortOrder
    _count?: Send_DatasCountOrderByAggregateInput
    _avg?: Send_DatasAvgOrderByAggregateInput
    _max?: Send_DatasMaxOrderByAggregateInput
    _min?: Send_DatasMinOrderByAggregateInput
    _sum?: Send_DatasSumOrderByAggregateInput
  }

  export type Send_DatasScalarWhereWithAggregatesInput = {
    AND?: Send_DatasScalarWhereWithAggregatesInput | Send_DatasScalarWhereWithAggregatesInput[]
    OR?: Send_DatasScalarWhereWithAggregatesInput[]
    NOT?: Send_DatasScalarWhereWithAggregatesInput | Send_DatasScalarWhereWithAggregatesInput[]
    id_send_data?: IntWithAggregatesFilter<"Send_Datas"> | number
    local_name?: IntWithAggregatesFilter<"Send_Datas"> | number
    latin_name?: IntWithAggregatesFilter<"Send_Datas"> | number
    habitat?: IntWithAggregatesFilter<"Send_Datas"> | number
    description?: IntWithAggregatesFilter<"Send_Datas"> | number
    city?: IntWithAggregatesFilter<"Send_Datas"> | number
    longitude?: IntWithAggregatesFilter<"Send_Datas"> | number
    latitude?: IntWithAggregatesFilter<"Send_Datas"> | number
    image?: IntWithAggregatesFilter<"Send_Datas"> | number
    amount?: IntWithAggregatesFilter<"Send_Datas"> | number
    date_start?: DateTimeWithAggregatesFilter<"Send_Datas"> | Date | string
    date_end?: DateTimeWithAggregatesFilter<"Send_Datas"> | Date | string
  }

  export type UsersWhereInput = {
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    id_user?: IntFilter<"Users"> | number
    email?: StringNullableFilter<"Users"> | string | null
    name?: StringNullableFilter<"Users"> | string | null
    phone?: StringNullableFilter<"Users"> | string | null
    password?: StringNullableFilter<"Users"> | string | null
    picture?: StringNullableFilter<"Users"> | string | null
    refresh_token?: StringNullableFilter<"Users"> | string | null
    created_at?: DateTimeNullableFilter<"Users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"Users"> | Date | string | null
    status?: IntNullableFilter<"Users"> | number | null
    ip_address?: StringNullableFilter<"Users"> | string | null
    animals?: AnimalsListRelationFilter
    request_datas?: Request_DatasListRelationFilter
    history_request_datas?: History_Request_DatasListRelationFilter
  }

  export type UsersOrderByWithRelationInput = {
    id_user?: SortOrder
    email?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    picture?: SortOrderInput | SortOrder
    refresh_token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    animals?: AnimalsOrderByRelationAggregateInput
    request_datas?: Request_DatasOrderByRelationAggregateInput
    history_request_datas?: History_Request_DatasOrderByRelationAggregateInput
    _relevance?: UsersOrderByRelevanceInput
  }

  export type UsersWhereUniqueInput = Prisma.AtLeast<{
    id_user?: number
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    email?: StringNullableFilter<"Users"> | string | null
    name?: StringNullableFilter<"Users"> | string | null
    phone?: StringNullableFilter<"Users"> | string | null
    password?: StringNullableFilter<"Users"> | string | null
    picture?: StringNullableFilter<"Users"> | string | null
    refresh_token?: StringNullableFilter<"Users"> | string | null
    created_at?: DateTimeNullableFilter<"Users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"Users"> | Date | string | null
    status?: IntNullableFilter<"Users"> | number | null
    ip_address?: StringNullableFilter<"Users"> | string | null
    animals?: AnimalsListRelationFilter
    request_datas?: Request_DatasListRelationFilter
    history_request_datas?: History_Request_DatasListRelationFilter
  }, "id_user">

  export type UsersOrderByWithAggregationInput = {
    id_user?: SortOrder
    email?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    picture?: SortOrderInput | SortOrder
    refresh_token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    ip_address?: SortOrderInput | SortOrder
    _count?: UsersCountOrderByAggregateInput
    _avg?: UsersAvgOrderByAggregateInput
    _max?: UsersMaxOrderByAggregateInput
    _min?: UsersMinOrderByAggregateInput
    _sum?: UsersSumOrderByAggregateInput
  }

  export type UsersScalarWhereWithAggregatesInput = {
    AND?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    OR?: UsersScalarWhereWithAggregatesInput[]
    NOT?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    id_user?: IntWithAggregatesFilter<"Users"> | number
    email?: StringNullableWithAggregatesFilter<"Users"> | string | null
    name?: StringNullableWithAggregatesFilter<"Users"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Users"> | string | null
    password?: StringNullableWithAggregatesFilter<"Users"> | string | null
    picture?: StringNullableWithAggregatesFilter<"Users"> | string | null
    refresh_token?: StringNullableWithAggregatesFilter<"Users"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"Users"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"Users"> | Date | string | null
    status?: IntNullableWithAggregatesFilter<"Users"> | number | null
    ip_address?: StringNullableWithAggregatesFilter<"Users"> | string | null
  }

  export type AdminsCreateInput = {
    email: string
    password: string
    refresh_token?: string | null
    ip_address?: string | null
  }

  export type AdminsUncheckedCreateInput = {
    id_admin?: number
    email: string
    password: string
    refresh_token?: string | null
    ip_address?: string | null
  }

  export type AdminsUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminsUncheckedUpdateInput = {
    id_admin?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminsCreateManyInput = {
    id_admin?: number
    email: string
    password: string
    refresh_token?: string | null
    ip_address?: string | null
  }

  export type AdminsUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminsUncheckedUpdateManyInput = {
    id_admin?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AnimalsCreateInput = {
    local_name: string
    latin_name: string
    habitat: string
    description?: string | null
    city: string
    longitude: string
    latitude: string
    image: string
    amount: number
    date?: Date | string | null
    updated_at?: Date | string | null
    user: UsersCreateNestedOneWithoutAnimalsInput
  }

  export type AnimalsUncheckedCreateInput = {
    id_animal?: number
    local_name: string
    latin_name: string
    habitat: string
    description?: string | null
    city: string
    longitude: string
    latitude: string
    image: string
    amount: number
    id_user: number
    date?: Date | string | null
    updated_at?: Date | string | null
  }

  export type AnimalsUpdateInput = {
    local_name?: StringFieldUpdateOperationsInput | string
    latin_name?: StringFieldUpdateOperationsInput | string
    habitat?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    longitude?: StringFieldUpdateOperationsInput | string
    latitude?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UsersUpdateOneRequiredWithoutAnimalsNestedInput
  }

  export type AnimalsUncheckedUpdateInput = {
    id_animal?: IntFieldUpdateOperationsInput | number
    local_name?: StringFieldUpdateOperationsInput | string
    latin_name?: StringFieldUpdateOperationsInput | string
    habitat?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    longitude?: StringFieldUpdateOperationsInput | string
    latitude?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AnimalsCreateManyInput = {
    id_animal?: number
    local_name: string
    latin_name: string
    habitat: string
    description?: string | null
    city: string
    longitude: string
    latitude: string
    image: string
    amount: number
    id_user: number
    date?: Date | string | null
    updated_at?: Date | string | null
  }

  export type AnimalsUpdateManyMutationInput = {
    local_name?: StringFieldUpdateOperationsInput | string
    latin_name?: StringFieldUpdateOperationsInput | string
    habitat?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    longitude?: StringFieldUpdateOperationsInput | string
    latitude?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AnimalsUncheckedUpdateManyInput = {
    id_animal?: IntFieldUpdateOperationsInput | number
    local_name?: StringFieldUpdateOperationsInput | string
    latin_name?: StringFieldUpdateOperationsInput | string
    habitat?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    longitude?: StringFieldUpdateOperationsInput | string
    latitude?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type History_Request_DatasCreateInput = {
    email: string
    name: string
    profession: string
    instances: string
    subject: string
    body: string
    date?: Date | string | null
    send_data: Send_DatasCreateNestedOneWithoutHistory_Request_DatasInput
    user: UsersCreateNestedOneWithoutHistory_request_datasInput
  }

  export type History_Request_DatasUncheckedCreateInput = {
    id_history_request_data?: number
    email: string
    name: string
    profession: string
    instances: string
    subject: string
    body: string
    id_send_data: number
    id_user: number
    date?: Date | string | null
  }

  export type History_Request_DatasUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    send_data?: Send_DatasUpdateOneRequiredWithoutHistory_Request_DatasNestedInput
    user?: UsersUpdateOneRequiredWithoutHistory_request_datasNestedInput
  }

  export type History_Request_DatasUncheckedUpdateInput = {
    id_history_request_data?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    id_send_data?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type History_Request_DatasCreateManyInput = {
    id_history_request_data?: number
    email: string
    name: string
    profession: string
    instances: string
    subject: string
    body: string
    id_send_data: number
    id_user: number
    date?: Date | string | null
  }

  export type History_Request_DatasUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type History_Request_DatasUncheckedUpdateManyInput = {
    id_history_request_data?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    id_send_data?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OtpsCreateInput = {
    email?: string | null
    otp?: string | null
    expired_at?: Date | string | null
    used: number
  }

  export type OtpsUncheckedCreateInput = {
    id_otp?: number
    email?: string | null
    otp?: string | null
    expired_at?: Date | string | null
    used: number
  }

  export type OtpsUpdateInput = {
    email?: NullableStringFieldUpdateOperationsInput | string | null
    otp?: NullableStringFieldUpdateOperationsInput | string | null
    expired_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: IntFieldUpdateOperationsInput | number
  }

  export type OtpsUncheckedUpdateInput = {
    id_otp?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    otp?: NullableStringFieldUpdateOperationsInput | string | null
    expired_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: IntFieldUpdateOperationsInput | number
  }

  export type OtpsCreateManyInput = {
    id_otp?: number
    email?: string | null
    otp?: string | null
    expired_at?: Date | string | null
    used: number
  }

  export type OtpsUpdateManyMutationInput = {
    email?: NullableStringFieldUpdateOperationsInput | string | null
    otp?: NullableStringFieldUpdateOperationsInput | string | null
    expired_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: IntFieldUpdateOperationsInput | number
  }

  export type OtpsUncheckedUpdateManyInput = {
    id_otp?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    otp?: NullableStringFieldUpdateOperationsInput | string | null
    expired_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    used?: IntFieldUpdateOperationsInput | number
  }

  export type Request_AccountsCreateInput = {
    name: string
    email: string
    phone: string
    profession: string
    instances: string
    subject: string
    body: string
    date: Date | string
    approve: number
  }

  export type Request_AccountsUncheckedCreateInput = {
    id_request_account?: number
    name: string
    email: string
    phone: string
    profession: string
    instances: string
    subject: string
    body: string
    date: Date | string
    approve: number
  }

  export type Request_AccountsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
  }

  export type Request_AccountsUncheckedUpdateInput = {
    id_request_account?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
  }

  export type Request_AccountsCreateManyInput = {
    id_request_account?: number
    name: string
    email: string
    phone: string
    profession: string
    instances: string
    subject: string
    body: string
    date: Date | string
    approve: number
  }

  export type Request_AccountsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
  }

  export type Request_AccountsUncheckedUpdateManyInput = {
    id_request_account?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
  }

  export type Request_DatasCreateInput = {
    name: string
    email: string
    profession: string
    instances: string
    subject: string
    body: string
    date?: Date | string
    approve: number
    url: string
    user: UsersCreateNestedOneWithoutRequest_datasInput
  }

  export type Request_DatasUncheckedCreateInput = {
    id_request_data?: number
    name: string
    email: string
    profession: string
    instances: string
    subject: string
    body: string
    date?: Date | string
    approve: number
    id_user: number
    url: string
  }

  export type Request_DatasUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    user?: UsersUpdateOneRequiredWithoutRequest_datasNestedInput
  }

  export type Request_DatasUncheckedUpdateInput = {
    id_request_data?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
  }

  export type Request_DatasCreateManyInput = {
    id_request_data?: number
    name: string
    email: string
    profession: string
    instances: string
    subject: string
    body: string
    date?: Date | string
    approve: number
    id_user: number
    url: string
  }

  export type Request_DatasUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
  }

  export type Request_DatasUncheckedUpdateManyInput = {
    id_request_data?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
  }

  export type Send_DatasCreateInput = {
    local_name: number
    latin_name: number
    habitat: number
    description: number
    city: number
    longitude: number
    latitude: number
    image: number
    amount: number
    date_start: Date | string
    date_end: Date | string
    History_Request_Datas?: History_Request_DatasCreateNestedManyWithoutSend_dataInput
  }

  export type Send_DatasUncheckedCreateInput = {
    id_send_data?: number
    local_name: number
    latin_name: number
    habitat: number
    description: number
    city: number
    longitude: number
    latitude: number
    image: number
    amount: number
    date_start: Date | string
    date_end: Date | string
    History_Request_Datas?: History_Request_DatasUncheckedCreateNestedManyWithoutSend_dataInput
  }

  export type Send_DatasUpdateInput = {
    local_name?: IntFieldUpdateOperationsInput | number
    latin_name?: IntFieldUpdateOperationsInput | number
    habitat?: IntFieldUpdateOperationsInput | number
    description?: IntFieldUpdateOperationsInput | number
    city?: IntFieldUpdateOperationsInput | number
    longitude?: IntFieldUpdateOperationsInput | number
    latitude?: IntFieldUpdateOperationsInput | number
    image?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    date_start?: DateTimeFieldUpdateOperationsInput | Date | string
    date_end?: DateTimeFieldUpdateOperationsInput | Date | string
    History_Request_Datas?: History_Request_DatasUpdateManyWithoutSend_dataNestedInput
  }

  export type Send_DatasUncheckedUpdateInput = {
    id_send_data?: IntFieldUpdateOperationsInput | number
    local_name?: IntFieldUpdateOperationsInput | number
    latin_name?: IntFieldUpdateOperationsInput | number
    habitat?: IntFieldUpdateOperationsInput | number
    description?: IntFieldUpdateOperationsInput | number
    city?: IntFieldUpdateOperationsInput | number
    longitude?: IntFieldUpdateOperationsInput | number
    latitude?: IntFieldUpdateOperationsInput | number
    image?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    date_start?: DateTimeFieldUpdateOperationsInput | Date | string
    date_end?: DateTimeFieldUpdateOperationsInput | Date | string
    History_Request_Datas?: History_Request_DatasUncheckedUpdateManyWithoutSend_dataNestedInput
  }

  export type Send_DatasCreateManyInput = {
    id_send_data?: number
    local_name: number
    latin_name: number
    habitat: number
    description: number
    city: number
    longitude: number
    latitude: number
    image: number
    amount: number
    date_start: Date | string
    date_end: Date | string
  }

  export type Send_DatasUpdateManyMutationInput = {
    local_name?: IntFieldUpdateOperationsInput | number
    latin_name?: IntFieldUpdateOperationsInput | number
    habitat?: IntFieldUpdateOperationsInput | number
    description?: IntFieldUpdateOperationsInput | number
    city?: IntFieldUpdateOperationsInput | number
    longitude?: IntFieldUpdateOperationsInput | number
    latitude?: IntFieldUpdateOperationsInput | number
    image?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    date_start?: DateTimeFieldUpdateOperationsInput | Date | string
    date_end?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Send_DatasUncheckedUpdateManyInput = {
    id_send_data?: IntFieldUpdateOperationsInput | number
    local_name?: IntFieldUpdateOperationsInput | number
    latin_name?: IntFieldUpdateOperationsInput | number
    habitat?: IntFieldUpdateOperationsInput | number
    description?: IntFieldUpdateOperationsInput | number
    city?: IntFieldUpdateOperationsInput | number
    longitude?: IntFieldUpdateOperationsInput | number
    latitude?: IntFieldUpdateOperationsInput | number
    image?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    date_start?: DateTimeFieldUpdateOperationsInput | Date | string
    date_end?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersCreateInput = {
    email?: string | null
    name?: string | null
    phone?: string | null
    password?: string | null
    picture?: string | null
    refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    status?: number | null
    ip_address?: string | null
    animals?: AnimalsCreateNestedManyWithoutUserInput
    request_datas?: Request_DatasCreateNestedManyWithoutUserInput
    history_request_datas?: History_Request_DatasCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateInput = {
    id_user?: number
    email?: string | null
    name?: string | null
    phone?: string | null
    password?: string | null
    picture?: string | null
    refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    status?: number | null
    ip_address?: string | null
    animals?: AnimalsUncheckedCreateNestedManyWithoutUserInput
    request_datas?: Request_DatasUncheckedCreateNestedManyWithoutUserInput
    history_request_datas?: History_Request_DatasUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersUpdateInput = {
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableIntFieldUpdateOperationsInput | number | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    animals?: AnimalsUpdateManyWithoutUserNestedInput
    request_datas?: Request_DatasUpdateManyWithoutUserNestedInput
    history_request_datas?: History_Request_DatasUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableIntFieldUpdateOperationsInput | number | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    animals?: AnimalsUncheckedUpdateManyWithoutUserNestedInput
    request_datas?: Request_DatasUncheckedUpdateManyWithoutUserNestedInput
    history_request_datas?: History_Request_DatasUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UsersCreateManyInput = {
    id_user?: number
    email?: string | null
    name?: string | null
    phone?: string | null
    password?: string | null
    picture?: string | null
    refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    status?: number | null
    ip_address?: string | null
  }

  export type UsersUpdateManyMutationInput = {
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableIntFieldUpdateOperationsInput | number | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsersUncheckedUpdateManyInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableIntFieldUpdateOperationsInput | number | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AdminsOrderByRelevanceInput = {
    fields: AdminsOrderByRelevanceFieldEnum | AdminsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AdminsCountOrderByAggregateInput = {
    id_admin?: SortOrder
    email?: SortOrder
    password?: SortOrder
    refresh_token?: SortOrder
    ip_address?: SortOrder
  }

  export type AdminsAvgOrderByAggregateInput = {
    id_admin?: SortOrder
  }

  export type AdminsMaxOrderByAggregateInput = {
    id_admin?: SortOrder
    email?: SortOrder
    password?: SortOrder
    refresh_token?: SortOrder
    ip_address?: SortOrder
  }

  export type AdminsMinOrderByAggregateInput = {
    id_admin?: SortOrder
    email?: SortOrder
    password?: SortOrder
    refresh_token?: SortOrder
    ip_address?: SortOrder
  }

  export type AdminsSumOrderByAggregateInput = {
    id_admin?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UsersRelationFilter = {
    is?: UsersWhereInput
    isNot?: UsersWhereInput
  }

  export type AnimalsOrderByRelevanceInput = {
    fields: AnimalsOrderByRelevanceFieldEnum | AnimalsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AnimalsCountOrderByAggregateInput = {
    id_animal?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
    id_user?: SortOrder
    date?: SortOrder
    updated_at?: SortOrder
  }

  export type AnimalsAvgOrderByAggregateInput = {
    id_animal?: SortOrder
    amount?: SortOrder
    id_user?: SortOrder
  }

  export type AnimalsMaxOrderByAggregateInput = {
    id_animal?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
    id_user?: SortOrder
    date?: SortOrder
    updated_at?: SortOrder
  }

  export type AnimalsMinOrderByAggregateInput = {
    id_animal?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
    id_user?: SortOrder
    date?: SortOrder
    updated_at?: SortOrder
  }

  export type AnimalsSumOrderByAggregateInput = {
    id_animal?: SortOrder
    amount?: SortOrder
    id_user?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type Send_DatasRelationFilter = {
    is?: Send_DatasWhereInput
    isNot?: Send_DatasWhereInput
  }

  export type History_Request_DatasOrderByRelevanceInput = {
    fields: History_Request_DatasOrderByRelevanceFieldEnum | History_Request_DatasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type History_Request_DatasCountOrderByAggregateInput = {
    id_history_request_data?: SortOrder
    email?: SortOrder
    name?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    id_send_data?: SortOrder
    id_user?: SortOrder
    date?: SortOrder
  }

  export type History_Request_DatasAvgOrderByAggregateInput = {
    id_history_request_data?: SortOrder
    id_send_data?: SortOrder
    id_user?: SortOrder
  }

  export type History_Request_DatasMaxOrderByAggregateInput = {
    id_history_request_data?: SortOrder
    email?: SortOrder
    name?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    id_send_data?: SortOrder
    id_user?: SortOrder
    date?: SortOrder
  }

  export type History_Request_DatasMinOrderByAggregateInput = {
    id_history_request_data?: SortOrder
    email?: SortOrder
    name?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    id_send_data?: SortOrder
    id_user?: SortOrder
    date?: SortOrder
  }

  export type History_Request_DatasSumOrderByAggregateInput = {
    id_history_request_data?: SortOrder
    id_send_data?: SortOrder
    id_user?: SortOrder
  }

  export type OtpsOrderByRelevanceInput = {
    fields: OtpsOrderByRelevanceFieldEnum | OtpsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type OtpsCountOrderByAggregateInput = {
    id_otp?: SortOrder
    email?: SortOrder
    otp?: SortOrder
    expired_at?: SortOrder
    used?: SortOrder
  }

  export type OtpsAvgOrderByAggregateInput = {
    id_otp?: SortOrder
    used?: SortOrder
  }

  export type OtpsMaxOrderByAggregateInput = {
    id_otp?: SortOrder
    email?: SortOrder
    otp?: SortOrder
    expired_at?: SortOrder
    used?: SortOrder
  }

  export type OtpsMinOrderByAggregateInput = {
    id_otp?: SortOrder
    email?: SortOrder
    otp?: SortOrder
    expired_at?: SortOrder
    used?: SortOrder
  }

  export type OtpsSumOrderByAggregateInput = {
    id_otp?: SortOrder
    used?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Request_AccountsOrderByRelevanceInput = {
    fields: Request_AccountsOrderByRelevanceFieldEnum | Request_AccountsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Request_AccountsCountOrderByAggregateInput = {
    id_request_account?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    date?: SortOrder
    approve?: SortOrder
  }

  export type Request_AccountsAvgOrderByAggregateInput = {
    id_request_account?: SortOrder
    approve?: SortOrder
  }

  export type Request_AccountsMaxOrderByAggregateInput = {
    id_request_account?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    date?: SortOrder
    approve?: SortOrder
  }

  export type Request_AccountsMinOrderByAggregateInput = {
    id_request_account?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    date?: SortOrder
    approve?: SortOrder
  }

  export type Request_AccountsSumOrderByAggregateInput = {
    id_request_account?: SortOrder
    approve?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Request_DatasOrderByRelevanceInput = {
    fields: Request_DatasOrderByRelevanceFieldEnum | Request_DatasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Request_DatasCountOrderByAggregateInput = {
    id_request_data?: SortOrder
    name?: SortOrder
    email?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    date?: SortOrder
    approve?: SortOrder
    id_user?: SortOrder
    url?: SortOrder
  }

  export type Request_DatasAvgOrderByAggregateInput = {
    id_request_data?: SortOrder
    approve?: SortOrder
    id_user?: SortOrder
  }

  export type Request_DatasMaxOrderByAggregateInput = {
    id_request_data?: SortOrder
    name?: SortOrder
    email?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    date?: SortOrder
    approve?: SortOrder
    id_user?: SortOrder
    url?: SortOrder
  }

  export type Request_DatasMinOrderByAggregateInput = {
    id_request_data?: SortOrder
    name?: SortOrder
    email?: SortOrder
    profession?: SortOrder
    instances?: SortOrder
    subject?: SortOrder
    body?: SortOrder
    date?: SortOrder
    approve?: SortOrder
    id_user?: SortOrder
    url?: SortOrder
  }

  export type Request_DatasSumOrderByAggregateInput = {
    id_request_data?: SortOrder
    approve?: SortOrder
    id_user?: SortOrder
  }

  export type History_Request_DatasListRelationFilter = {
    every?: History_Request_DatasWhereInput
    some?: History_Request_DatasWhereInput
    none?: History_Request_DatasWhereInput
  }

  export type History_Request_DatasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Send_DatasCountOrderByAggregateInput = {
    id_send_data?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
    date_start?: SortOrder
    date_end?: SortOrder
  }

  export type Send_DatasAvgOrderByAggregateInput = {
    id_send_data?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
  }

  export type Send_DatasMaxOrderByAggregateInput = {
    id_send_data?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
    date_start?: SortOrder
    date_end?: SortOrder
  }

  export type Send_DatasMinOrderByAggregateInput = {
    id_send_data?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
    date_start?: SortOrder
    date_end?: SortOrder
  }

  export type Send_DatasSumOrderByAggregateInput = {
    id_send_data?: SortOrder
    local_name?: SortOrder
    latin_name?: SortOrder
    habitat?: SortOrder
    description?: SortOrder
    city?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    image?: SortOrder
    amount?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type AnimalsListRelationFilter = {
    every?: AnimalsWhereInput
    some?: AnimalsWhereInput
    none?: AnimalsWhereInput
  }

  export type Request_DatasListRelationFilter = {
    every?: Request_DatasWhereInput
    some?: Request_DatasWhereInput
    none?: Request_DatasWhereInput
  }

  export type AnimalsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Request_DatasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsersOrderByRelevanceInput = {
    fields: UsersOrderByRelevanceFieldEnum | UsersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UsersCountOrderByAggregateInput = {
    id_user?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    picture?: SortOrder
    refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    status?: SortOrder
    ip_address?: SortOrder
  }

  export type UsersAvgOrderByAggregateInput = {
    id_user?: SortOrder
    status?: SortOrder
  }

  export type UsersMaxOrderByAggregateInput = {
    id_user?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    picture?: SortOrder
    refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    status?: SortOrder
    ip_address?: SortOrder
  }

  export type UsersMinOrderByAggregateInput = {
    id_user?: SortOrder
    email?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    picture?: SortOrder
    refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    status?: SortOrder
    ip_address?: SortOrder
  }

  export type UsersSumOrderByAggregateInput = {
    id_user?: SortOrder
    status?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UsersCreateNestedOneWithoutAnimalsInput = {
    create?: XOR<UsersCreateWithoutAnimalsInput, UsersUncheckedCreateWithoutAnimalsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutAnimalsInput
    connect?: UsersWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UsersUpdateOneRequiredWithoutAnimalsNestedInput = {
    create?: XOR<UsersCreateWithoutAnimalsInput, UsersUncheckedCreateWithoutAnimalsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutAnimalsInput
    upsert?: UsersUpsertWithoutAnimalsInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutAnimalsInput, UsersUpdateWithoutAnimalsInput>, UsersUncheckedUpdateWithoutAnimalsInput>
  }

  export type Send_DatasCreateNestedOneWithoutHistory_Request_DatasInput = {
    create?: XOR<Send_DatasCreateWithoutHistory_Request_DatasInput, Send_DatasUncheckedCreateWithoutHistory_Request_DatasInput>
    connectOrCreate?: Send_DatasCreateOrConnectWithoutHistory_Request_DatasInput
    connect?: Send_DatasWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutHistory_request_datasInput = {
    create?: XOR<UsersCreateWithoutHistory_request_datasInput, UsersUncheckedCreateWithoutHistory_request_datasInput>
    connectOrCreate?: UsersCreateOrConnectWithoutHistory_request_datasInput
    connect?: UsersWhereUniqueInput
  }

  export type Send_DatasUpdateOneRequiredWithoutHistory_Request_DatasNestedInput = {
    create?: XOR<Send_DatasCreateWithoutHistory_Request_DatasInput, Send_DatasUncheckedCreateWithoutHistory_Request_DatasInput>
    connectOrCreate?: Send_DatasCreateOrConnectWithoutHistory_Request_DatasInput
    upsert?: Send_DatasUpsertWithoutHistory_Request_DatasInput
    connect?: Send_DatasWhereUniqueInput
    update?: XOR<XOR<Send_DatasUpdateToOneWithWhereWithoutHistory_Request_DatasInput, Send_DatasUpdateWithoutHistory_Request_DatasInput>, Send_DatasUncheckedUpdateWithoutHistory_Request_DatasInput>
  }

  export type UsersUpdateOneRequiredWithoutHistory_request_datasNestedInput = {
    create?: XOR<UsersCreateWithoutHistory_request_datasInput, UsersUncheckedCreateWithoutHistory_request_datasInput>
    connectOrCreate?: UsersCreateOrConnectWithoutHistory_request_datasInput
    upsert?: UsersUpsertWithoutHistory_request_datasInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutHistory_request_datasInput, UsersUpdateWithoutHistory_request_datasInput>, UsersUncheckedUpdateWithoutHistory_request_datasInput>
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UsersCreateNestedOneWithoutRequest_datasInput = {
    create?: XOR<UsersCreateWithoutRequest_datasInput, UsersUncheckedCreateWithoutRequest_datasInput>
    connectOrCreate?: UsersCreateOrConnectWithoutRequest_datasInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersUpdateOneRequiredWithoutRequest_datasNestedInput = {
    create?: XOR<UsersCreateWithoutRequest_datasInput, UsersUncheckedCreateWithoutRequest_datasInput>
    connectOrCreate?: UsersCreateOrConnectWithoutRequest_datasInput
    upsert?: UsersUpsertWithoutRequest_datasInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutRequest_datasInput, UsersUpdateWithoutRequest_datasInput>, UsersUncheckedUpdateWithoutRequest_datasInput>
  }

  export type History_Request_DatasCreateNestedManyWithoutSend_dataInput = {
    create?: XOR<History_Request_DatasCreateWithoutSend_dataInput, History_Request_DatasUncheckedCreateWithoutSend_dataInput> | History_Request_DatasCreateWithoutSend_dataInput[] | History_Request_DatasUncheckedCreateWithoutSend_dataInput[]
    connectOrCreate?: History_Request_DatasCreateOrConnectWithoutSend_dataInput | History_Request_DatasCreateOrConnectWithoutSend_dataInput[]
    createMany?: History_Request_DatasCreateManySend_dataInputEnvelope
    connect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
  }

  export type History_Request_DatasUncheckedCreateNestedManyWithoutSend_dataInput = {
    create?: XOR<History_Request_DatasCreateWithoutSend_dataInput, History_Request_DatasUncheckedCreateWithoutSend_dataInput> | History_Request_DatasCreateWithoutSend_dataInput[] | History_Request_DatasUncheckedCreateWithoutSend_dataInput[]
    connectOrCreate?: History_Request_DatasCreateOrConnectWithoutSend_dataInput | History_Request_DatasCreateOrConnectWithoutSend_dataInput[]
    createMany?: History_Request_DatasCreateManySend_dataInputEnvelope
    connect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
  }

  export type History_Request_DatasUpdateManyWithoutSend_dataNestedInput = {
    create?: XOR<History_Request_DatasCreateWithoutSend_dataInput, History_Request_DatasUncheckedCreateWithoutSend_dataInput> | History_Request_DatasCreateWithoutSend_dataInput[] | History_Request_DatasUncheckedCreateWithoutSend_dataInput[]
    connectOrCreate?: History_Request_DatasCreateOrConnectWithoutSend_dataInput | History_Request_DatasCreateOrConnectWithoutSend_dataInput[]
    upsert?: History_Request_DatasUpsertWithWhereUniqueWithoutSend_dataInput | History_Request_DatasUpsertWithWhereUniqueWithoutSend_dataInput[]
    createMany?: History_Request_DatasCreateManySend_dataInputEnvelope
    set?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    disconnect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    delete?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    connect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    update?: History_Request_DatasUpdateWithWhereUniqueWithoutSend_dataInput | History_Request_DatasUpdateWithWhereUniqueWithoutSend_dataInput[]
    updateMany?: History_Request_DatasUpdateManyWithWhereWithoutSend_dataInput | History_Request_DatasUpdateManyWithWhereWithoutSend_dataInput[]
    deleteMany?: History_Request_DatasScalarWhereInput | History_Request_DatasScalarWhereInput[]
  }

  export type History_Request_DatasUncheckedUpdateManyWithoutSend_dataNestedInput = {
    create?: XOR<History_Request_DatasCreateWithoutSend_dataInput, History_Request_DatasUncheckedCreateWithoutSend_dataInput> | History_Request_DatasCreateWithoutSend_dataInput[] | History_Request_DatasUncheckedCreateWithoutSend_dataInput[]
    connectOrCreate?: History_Request_DatasCreateOrConnectWithoutSend_dataInput | History_Request_DatasCreateOrConnectWithoutSend_dataInput[]
    upsert?: History_Request_DatasUpsertWithWhereUniqueWithoutSend_dataInput | History_Request_DatasUpsertWithWhereUniqueWithoutSend_dataInput[]
    createMany?: History_Request_DatasCreateManySend_dataInputEnvelope
    set?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    disconnect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    delete?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    connect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    update?: History_Request_DatasUpdateWithWhereUniqueWithoutSend_dataInput | History_Request_DatasUpdateWithWhereUniqueWithoutSend_dataInput[]
    updateMany?: History_Request_DatasUpdateManyWithWhereWithoutSend_dataInput | History_Request_DatasUpdateManyWithWhereWithoutSend_dataInput[]
    deleteMany?: History_Request_DatasScalarWhereInput | History_Request_DatasScalarWhereInput[]
  }

  export type AnimalsCreateNestedManyWithoutUserInput = {
    create?: XOR<AnimalsCreateWithoutUserInput, AnimalsUncheckedCreateWithoutUserInput> | AnimalsCreateWithoutUserInput[] | AnimalsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AnimalsCreateOrConnectWithoutUserInput | AnimalsCreateOrConnectWithoutUserInput[]
    createMany?: AnimalsCreateManyUserInputEnvelope
    connect?: AnimalsWhereUniqueInput | AnimalsWhereUniqueInput[]
  }

  export type Request_DatasCreateNestedManyWithoutUserInput = {
    create?: XOR<Request_DatasCreateWithoutUserInput, Request_DatasUncheckedCreateWithoutUserInput> | Request_DatasCreateWithoutUserInput[] | Request_DatasUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Request_DatasCreateOrConnectWithoutUserInput | Request_DatasCreateOrConnectWithoutUserInput[]
    createMany?: Request_DatasCreateManyUserInputEnvelope
    connect?: Request_DatasWhereUniqueInput | Request_DatasWhereUniqueInput[]
  }

  export type History_Request_DatasCreateNestedManyWithoutUserInput = {
    create?: XOR<History_Request_DatasCreateWithoutUserInput, History_Request_DatasUncheckedCreateWithoutUserInput> | History_Request_DatasCreateWithoutUserInput[] | History_Request_DatasUncheckedCreateWithoutUserInput[]
    connectOrCreate?: History_Request_DatasCreateOrConnectWithoutUserInput | History_Request_DatasCreateOrConnectWithoutUserInput[]
    createMany?: History_Request_DatasCreateManyUserInputEnvelope
    connect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
  }

  export type AnimalsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AnimalsCreateWithoutUserInput, AnimalsUncheckedCreateWithoutUserInput> | AnimalsCreateWithoutUserInput[] | AnimalsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AnimalsCreateOrConnectWithoutUserInput | AnimalsCreateOrConnectWithoutUserInput[]
    createMany?: AnimalsCreateManyUserInputEnvelope
    connect?: AnimalsWhereUniqueInput | AnimalsWhereUniqueInput[]
  }

  export type Request_DatasUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Request_DatasCreateWithoutUserInput, Request_DatasUncheckedCreateWithoutUserInput> | Request_DatasCreateWithoutUserInput[] | Request_DatasUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Request_DatasCreateOrConnectWithoutUserInput | Request_DatasCreateOrConnectWithoutUserInput[]
    createMany?: Request_DatasCreateManyUserInputEnvelope
    connect?: Request_DatasWhereUniqueInput | Request_DatasWhereUniqueInput[]
  }

  export type History_Request_DatasUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<History_Request_DatasCreateWithoutUserInput, History_Request_DatasUncheckedCreateWithoutUserInput> | History_Request_DatasCreateWithoutUserInput[] | History_Request_DatasUncheckedCreateWithoutUserInput[]
    connectOrCreate?: History_Request_DatasCreateOrConnectWithoutUserInput | History_Request_DatasCreateOrConnectWithoutUserInput[]
    createMany?: History_Request_DatasCreateManyUserInputEnvelope
    connect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AnimalsUpdateManyWithoutUserNestedInput = {
    create?: XOR<AnimalsCreateWithoutUserInput, AnimalsUncheckedCreateWithoutUserInput> | AnimalsCreateWithoutUserInput[] | AnimalsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AnimalsCreateOrConnectWithoutUserInput | AnimalsCreateOrConnectWithoutUserInput[]
    upsert?: AnimalsUpsertWithWhereUniqueWithoutUserInput | AnimalsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AnimalsCreateManyUserInputEnvelope
    set?: AnimalsWhereUniqueInput | AnimalsWhereUniqueInput[]
    disconnect?: AnimalsWhereUniqueInput | AnimalsWhereUniqueInput[]
    delete?: AnimalsWhereUniqueInput | AnimalsWhereUniqueInput[]
    connect?: AnimalsWhereUniqueInput | AnimalsWhereUniqueInput[]
    update?: AnimalsUpdateWithWhereUniqueWithoutUserInput | AnimalsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AnimalsUpdateManyWithWhereWithoutUserInput | AnimalsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AnimalsScalarWhereInput | AnimalsScalarWhereInput[]
  }

  export type Request_DatasUpdateManyWithoutUserNestedInput = {
    create?: XOR<Request_DatasCreateWithoutUserInput, Request_DatasUncheckedCreateWithoutUserInput> | Request_DatasCreateWithoutUserInput[] | Request_DatasUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Request_DatasCreateOrConnectWithoutUserInput | Request_DatasCreateOrConnectWithoutUserInput[]
    upsert?: Request_DatasUpsertWithWhereUniqueWithoutUserInput | Request_DatasUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: Request_DatasCreateManyUserInputEnvelope
    set?: Request_DatasWhereUniqueInput | Request_DatasWhereUniqueInput[]
    disconnect?: Request_DatasWhereUniqueInput | Request_DatasWhereUniqueInput[]
    delete?: Request_DatasWhereUniqueInput | Request_DatasWhereUniqueInput[]
    connect?: Request_DatasWhereUniqueInput | Request_DatasWhereUniqueInput[]
    update?: Request_DatasUpdateWithWhereUniqueWithoutUserInput | Request_DatasUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: Request_DatasUpdateManyWithWhereWithoutUserInput | Request_DatasUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: Request_DatasScalarWhereInput | Request_DatasScalarWhereInput[]
  }

  export type History_Request_DatasUpdateManyWithoutUserNestedInput = {
    create?: XOR<History_Request_DatasCreateWithoutUserInput, History_Request_DatasUncheckedCreateWithoutUserInput> | History_Request_DatasCreateWithoutUserInput[] | History_Request_DatasUncheckedCreateWithoutUserInput[]
    connectOrCreate?: History_Request_DatasCreateOrConnectWithoutUserInput | History_Request_DatasCreateOrConnectWithoutUserInput[]
    upsert?: History_Request_DatasUpsertWithWhereUniqueWithoutUserInput | History_Request_DatasUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: History_Request_DatasCreateManyUserInputEnvelope
    set?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    disconnect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    delete?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    connect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    update?: History_Request_DatasUpdateWithWhereUniqueWithoutUserInput | History_Request_DatasUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: History_Request_DatasUpdateManyWithWhereWithoutUserInput | History_Request_DatasUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: History_Request_DatasScalarWhereInput | History_Request_DatasScalarWhereInput[]
  }

  export type AnimalsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AnimalsCreateWithoutUserInput, AnimalsUncheckedCreateWithoutUserInput> | AnimalsCreateWithoutUserInput[] | AnimalsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AnimalsCreateOrConnectWithoutUserInput | AnimalsCreateOrConnectWithoutUserInput[]
    upsert?: AnimalsUpsertWithWhereUniqueWithoutUserInput | AnimalsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AnimalsCreateManyUserInputEnvelope
    set?: AnimalsWhereUniqueInput | AnimalsWhereUniqueInput[]
    disconnect?: AnimalsWhereUniqueInput | AnimalsWhereUniqueInput[]
    delete?: AnimalsWhereUniqueInput | AnimalsWhereUniqueInput[]
    connect?: AnimalsWhereUniqueInput | AnimalsWhereUniqueInput[]
    update?: AnimalsUpdateWithWhereUniqueWithoutUserInput | AnimalsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AnimalsUpdateManyWithWhereWithoutUserInput | AnimalsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AnimalsScalarWhereInput | AnimalsScalarWhereInput[]
  }

  export type Request_DatasUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Request_DatasCreateWithoutUserInput, Request_DatasUncheckedCreateWithoutUserInput> | Request_DatasCreateWithoutUserInput[] | Request_DatasUncheckedCreateWithoutUserInput[]
    connectOrCreate?: Request_DatasCreateOrConnectWithoutUserInput | Request_DatasCreateOrConnectWithoutUserInput[]
    upsert?: Request_DatasUpsertWithWhereUniqueWithoutUserInput | Request_DatasUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: Request_DatasCreateManyUserInputEnvelope
    set?: Request_DatasWhereUniqueInput | Request_DatasWhereUniqueInput[]
    disconnect?: Request_DatasWhereUniqueInput | Request_DatasWhereUniqueInput[]
    delete?: Request_DatasWhereUniqueInput | Request_DatasWhereUniqueInput[]
    connect?: Request_DatasWhereUniqueInput | Request_DatasWhereUniqueInput[]
    update?: Request_DatasUpdateWithWhereUniqueWithoutUserInput | Request_DatasUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: Request_DatasUpdateManyWithWhereWithoutUserInput | Request_DatasUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: Request_DatasScalarWhereInput | Request_DatasScalarWhereInput[]
  }

  export type History_Request_DatasUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<History_Request_DatasCreateWithoutUserInput, History_Request_DatasUncheckedCreateWithoutUserInput> | History_Request_DatasCreateWithoutUserInput[] | History_Request_DatasUncheckedCreateWithoutUserInput[]
    connectOrCreate?: History_Request_DatasCreateOrConnectWithoutUserInput | History_Request_DatasCreateOrConnectWithoutUserInput[]
    upsert?: History_Request_DatasUpsertWithWhereUniqueWithoutUserInput | History_Request_DatasUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: History_Request_DatasCreateManyUserInputEnvelope
    set?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    disconnect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    delete?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    connect?: History_Request_DatasWhereUniqueInput | History_Request_DatasWhereUniqueInput[]
    update?: History_Request_DatasUpdateWithWhereUniqueWithoutUserInput | History_Request_DatasUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: History_Request_DatasUpdateManyWithWhereWithoutUserInput | History_Request_DatasUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: History_Request_DatasScalarWhereInput | History_Request_DatasScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type UsersCreateWithoutAnimalsInput = {
    email?: string | null
    name?: string | null
    phone?: string | null
    password?: string | null
    picture?: string | null
    refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    status?: number | null
    ip_address?: string | null
    request_datas?: Request_DatasCreateNestedManyWithoutUserInput
    history_request_datas?: History_Request_DatasCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutAnimalsInput = {
    id_user?: number
    email?: string | null
    name?: string | null
    phone?: string | null
    password?: string | null
    picture?: string | null
    refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    status?: number | null
    ip_address?: string | null
    request_datas?: Request_DatasUncheckedCreateNestedManyWithoutUserInput
    history_request_datas?: History_Request_DatasUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutAnimalsInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutAnimalsInput, UsersUncheckedCreateWithoutAnimalsInput>
  }

  export type UsersUpsertWithoutAnimalsInput = {
    update: XOR<UsersUpdateWithoutAnimalsInput, UsersUncheckedUpdateWithoutAnimalsInput>
    create: XOR<UsersCreateWithoutAnimalsInput, UsersUncheckedCreateWithoutAnimalsInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutAnimalsInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutAnimalsInput, UsersUncheckedUpdateWithoutAnimalsInput>
  }

  export type UsersUpdateWithoutAnimalsInput = {
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableIntFieldUpdateOperationsInput | number | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    request_datas?: Request_DatasUpdateManyWithoutUserNestedInput
    history_request_datas?: History_Request_DatasUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutAnimalsInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableIntFieldUpdateOperationsInput | number | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    request_datas?: Request_DatasUncheckedUpdateManyWithoutUserNestedInput
    history_request_datas?: History_Request_DatasUncheckedUpdateManyWithoutUserNestedInput
  }

  export type Send_DatasCreateWithoutHistory_Request_DatasInput = {
    local_name: number
    latin_name: number
    habitat: number
    description: number
    city: number
    longitude: number
    latitude: number
    image: number
    amount: number
    date_start: Date | string
    date_end: Date | string
  }

  export type Send_DatasUncheckedCreateWithoutHistory_Request_DatasInput = {
    id_send_data?: number
    local_name: number
    latin_name: number
    habitat: number
    description: number
    city: number
    longitude: number
    latitude: number
    image: number
    amount: number
    date_start: Date | string
    date_end: Date | string
  }

  export type Send_DatasCreateOrConnectWithoutHistory_Request_DatasInput = {
    where: Send_DatasWhereUniqueInput
    create: XOR<Send_DatasCreateWithoutHistory_Request_DatasInput, Send_DatasUncheckedCreateWithoutHistory_Request_DatasInput>
  }

  export type UsersCreateWithoutHistory_request_datasInput = {
    email?: string | null
    name?: string | null
    phone?: string | null
    password?: string | null
    picture?: string | null
    refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    status?: number | null
    ip_address?: string | null
    animals?: AnimalsCreateNestedManyWithoutUserInput
    request_datas?: Request_DatasCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutHistory_request_datasInput = {
    id_user?: number
    email?: string | null
    name?: string | null
    phone?: string | null
    password?: string | null
    picture?: string | null
    refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    status?: number | null
    ip_address?: string | null
    animals?: AnimalsUncheckedCreateNestedManyWithoutUserInput
    request_datas?: Request_DatasUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutHistory_request_datasInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutHistory_request_datasInput, UsersUncheckedCreateWithoutHistory_request_datasInput>
  }

  export type Send_DatasUpsertWithoutHistory_Request_DatasInput = {
    update: XOR<Send_DatasUpdateWithoutHistory_Request_DatasInput, Send_DatasUncheckedUpdateWithoutHistory_Request_DatasInput>
    create: XOR<Send_DatasCreateWithoutHistory_Request_DatasInput, Send_DatasUncheckedCreateWithoutHistory_Request_DatasInput>
    where?: Send_DatasWhereInput
  }

  export type Send_DatasUpdateToOneWithWhereWithoutHistory_Request_DatasInput = {
    where?: Send_DatasWhereInput
    data: XOR<Send_DatasUpdateWithoutHistory_Request_DatasInput, Send_DatasUncheckedUpdateWithoutHistory_Request_DatasInput>
  }

  export type Send_DatasUpdateWithoutHistory_Request_DatasInput = {
    local_name?: IntFieldUpdateOperationsInput | number
    latin_name?: IntFieldUpdateOperationsInput | number
    habitat?: IntFieldUpdateOperationsInput | number
    description?: IntFieldUpdateOperationsInput | number
    city?: IntFieldUpdateOperationsInput | number
    longitude?: IntFieldUpdateOperationsInput | number
    latitude?: IntFieldUpdateOperationsInput | number
    image?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    date_start?: DateTimeFieldUpdateOperationsInput | Date | string
    date_end?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Send_DatasUncheckedUpdateWithoutHistory_Request_DatasInput = {
    id_send_data?: IntFieldUpdateOperationsInput | number
    local_name?: IntFieldUpdateOperationsInput | number
    latin_name?: IntFieldUpdateOperationsInput | number
    habitat?: IntFieldUpdateOperationsInput | number
    description?: IntFieldUpdateOperationsInput | number
    city?: IntFieldUpdateOperationsInput | number
    longitude?: IntFieldUpdateOperationsInput | number
    latitude?: IntFieldUpdateOperationsInput | number
    image?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    date_start?: DateTimeFieldUpdateOperationsInput | Date | string
    date_end?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersUpsertWithoutHistory_request_datasInput = {
    update: XOR<UsersUpdateWithoutHistory_request_datasInput, UsersUncheckedUpdateWithoutHistory_request_datasInput>
    create: XOR<UsersCreateWithoutHistory_request_datasInput, UsersUncheckedCreateWithoutHistory_request_datasInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutHistory_request_datasInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutHistory_request_datasInput, UsersUncheckedUpdateWithoutHistory_request_datasInput>
  }

  export type UsersUpdateWithoutHistory_request_datasInput = {
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableIntFieldUpdateOperationsInput | number | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    animals?: AnimalsUpdateManyWithoutUserNestedInput
    request_datas?: Request_DatasUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutHistory_request_datasInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableIntFieldUpdateOperationsInput | number | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    animals?: AnimalsUncheckedUpdateManyWithoutUserNestedInput
    request_datas?: Request_DatasUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UsersCreateWithoutRequest_datasInput = {
    email?: string | null
    name?: string | null
    phone?: string | null
    password?: string | null
    picture?: string | null
    refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    status?: number | null
    ip_address?: string | null
    animals?: AnimalsCreateNestedManyWithoutUserInput
    history_request_datas?: History_Request_DatasCreateNestedManyWithoutUserInput
  }

  export type UsersUncheckedCreateWithoutRequest_datasInput = {
    id_user?: number
    email?: string | null
    name?: string | null
    phone?: string | null
    password?: string | null
    picture?: string | null
    refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    status?: number | null
    ip_address?: string | null
    animals?: AnimalsUncheckedCreateNestedManyWithoutUserInput
    history_request_datas?: History_Request_DatasUncheckedCreateNestedManyWithoutUserInput
  }

  export type UsersCreateOrConnectWithoutRequest_datasInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutRequest_datasInput, UsersUncheckedCreateWithoutRequest_datasInput>
  }

  export type UsersUpsertWithoutRequest_datasInput = {
    update: XOR<UsersUpdateWithoutRequest_datasInput, UsersUncheckedUpdateWithoutRequest_datasInput>
    create: XOR<UsersCreateWithoutRequest_datasInput, UsersUncheckedCreateWithoutRequest_datasInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutRequest_datasInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutRequest_datasInput, UsersUncheckedUpdateWithoutRequest_datasInput>
  }

  export type UsersUpdateWithoutRequest_datasInput = {
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableIntFieldUpdateOperationsInput | number | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    animals?: AnimalsUpdateManyWithoutUserNestedInput
    history_request_datas?: History_Request_DatasUpdateManyWithoutUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutRequest_datasInput = {
    id_user?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    picture?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableIntFieldUpdateOperationsInput | number | null
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    animals?: AnimalsUncheckedUpdateManyWithoutUserNestedInput
    history_request_datas?: History_Request_DatasUncheckedUpdateManyWithoutUserNestedInput
  }

  export type History_Request_DatasCreateWithoutSend_dataInput = {
    email: string
    name: string
    profession: string
    instances: string
    subject: string
    body: string
    date?: Date | string | null
    user: UsersCreateNestedOneWithoutHistory_request_datasInput
  }

  export type History_Request_DatasUncheckedCreateWithoutSend_dataInput = {
    id_history_request_data?: number
    email: string
    name: string
    profession: string
    instances: string
    subject: string
    body: string
    id_user: number
    date?: Date | string | null
  }

  export type History_Request_DatasCreateOrConnectWithoutSend_dataInput = {
    where: History_Request_DatasWhereUniqueInput
    create: XOR<History_Request_DatasCreateWithoutSend_dataInput, History_Request_DatasUncheckedCreateWithoutSend_dataInput>
  }

  export type History_Request_DatasCreateManySend_dataInputEnvelope = {
    data: History_Request_DatasCreateManySend_dataInput | History_Request_DatasCreateManySend_dataInput[]
    skipDuplicates?: boolean
  }

  export type History_Request_DatasUpsertWithWhereUniqueWithoutSend_dataInput = {
    where: History_Request_DatasWhereUniqueInput
    update: XOR<History_Request_DatasUpdateWithoutSend_dataInput, History_Request_DatasUncheckedUpdateWithoutSend_dataInput>
    create: XOR<History_Request_DatasCreateWithoutSend_dataInput, History_Request_DatasUncheckedCreateWithoutSend_dataInput>
  }

  export type History_Request_DatasUpdateWithWhereUniqueWithoutSend_dataInput = {
    where: History_Request_DatasWhereUniqueInput
    data: XOR<History_Request_DatasUpdateWithoutSend_dataInput, History_Request_DatasUncheckedUpdateWithoutSend_dataInput>
  }

  export type History_Request_DatasUpdateManyWithWhereWithoutSend_dataInput = {
    where: History_Request_DatasScalarWhereInput
    data: XOR<History_Request_DatasUpdateManyMutationInput, History_Request_DatasUncheckedUpdateManyWithoutSend_dataInput>
  }

  export type History_Request_DatasScalarWhereInput = {
    AND?: History_Request_DatasScalarWhereInput | History_Request_DatasScalarWhereInput[]
    OR?: History_Request_DatasScalarWhereInput[]
    NOT?: History_Request_DatasScalarWhereInput | History_Request_DatasScalarWhereInput[]
    id_history_request_data?: IntFilter<"History_Request_Datas"> | number
    email?: StringFilter<"History_Request_Datas"> | string
    name?: StringFilter<"History_Request_Datas"> | string
    profession?: StringFilter<"History_Request_Datas"> | string
    instances?: StringFilter<"History_Request_Datas"> | string
    subject?: StringFilter<"History_Request_Datas"> | string
    body?: StringFilter<"History_Request_Datas"> | string
    id_send_data?: IntFilter<"History_Request_Datas"> | number
    id_user?: IntFilter<"History_Request_Datas"> | number
    date?: DateTimeNullableFilter<"History_Request_Datas"> | Date | string | null
  }

  export type AnimalsCreateWithoutUserInput = {
    local_name: string
    latin_name: string
    habitat: string
    description?: string | null
    city: string
    longitude: string
    latitude: string
    image: string
    amount: number
    date?: Date | string | null
    updated_at?: Date | string | null
  }

  export type AnimalsUncheckedCreateWithoutUserInput = {
    id_animal?: number
    local_name: string
    latin_name: string
    habitat: string
    description?: string | null
    city: string
    longitude: string
    latitude: string
    image: string
    amount: number
    date?: Date | string | null
    updated_at?: Date | string | null
  }

  export type AnimalsCreateOrConnectWithoutUserInput = {
    where: AnimalsWhereUniqueInput
    create: XOR<AnimalsCreateWithoutUserInput, AnimalsUncheckedCreateWithoutUserInput>
  }

  export type AnimalsCreateManyUserInputEnvelope = {
    data: AnimalsCreateManyUserInput | AnimalsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type Request_DatasCreateWithoutUserInput = {
    name: string
    email: string
    profession: string
    instances: string
    subject: string
    body: string
    date?: Date | string
    approve: number
    url: string
  }

  export type Request_DatasUncheckedCreateWithoutUserInput = {
    id_request_data?: number
    name: string
    email: string
    profession: string
    instances: string
    subject: string
    body: string
    date?: Date | string
    approve: number
    url: string
  }

  export type Request_DatasCreateOrConnectWithoutUserInput = {
    where: Request_DatasWhereUniqueInput
    create: XOR<Request_DatasCreateWithoutUserInput, Request_DatasUncheckedCreateWithoutUserInput>
  }

  export type Request_DatasCreateManyUserInputEnvelope = {
    data: Request_DatasCreateManyUserInput | Request_DatasCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type History_Request_DatasCreateWithoutUserInput = {
    email: string
    name: string
    profession: string
    instances: string
    subject: string
    body: string
    date?: Date | string | null
    send_data: Send_DatasCreateNestedOneWithoutHistory_Request_DatasInput
  }

  export type History_Request_DatasUncheckedCreateWithoutUserInput = {
    id_history_request_data?: number
    email: string
    name: string
    profession: string
    instances: string
    subject: string
    body: string
    id_send_data: number
    date?: Date | string | null
  }

  export type History_Request_DatasCreateOrConnectWithoutUserInput = {
    where: History_Request_DatasWhereUniqueInput
    create: XOR<History_Request_DatasCreateWithoutUserInput, History_Request_DatasUncheckedCreateWithoutUserInput>
  }

  export type History_Request_DatasCreateManyUserInputEnvelope = {
    data: History_Request_DatasCreateManyUserInput | History_Request_DatasCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AnimalsUpsertWithWhereUniqueWithoutUserInput = {
    where: AnimalsWhereUniqueInput
    update: XOR<AnimalsUpdateWithoutUserInput, AnimalsUncheckedUpdateWithoutUserInput>
    create: XOR<AnimalsCreateWithoutUserInput, AnimalsUncheckedCreateWithoutUserInput>
  }

  export type AnimalsUpdateWithWhereUniqueWithoutUserInput = {
    where: AnimalsWhereUniqueInput
    data: XOR<AnimalsUpdateWithoutUserInput, AnimalsUncheckedUpdateWithoutUserInput>
  }

  export type AnimalsUpdateManyWithWhereWithoutUserInput = {
    where: AnimalsScalarWhereInput
    data: XOR<AnimalsUpdateManyMutationInput, AnimalsUncheckedUpdateManyWithoutUserInput>
  }

  export type AnimalsScalarWhereInput = {
    AND?: AnimalsScalarWhereInput | AnimalsScalarWhereInput[]
    OR?: AnimalsScalarWhereInput[]
    NOT?: AnimalsScalarWhereInput | AnimalsScalarWhereInput[]
    id_animal?: IntFilter<"Animals"> | number
    local_name?: StringFilter<"Animals"> | string
    latin_name?: StringFilter<"Animals"> | string
    habitat?: StringFilter<"Animals"> | string
    description?: StringNullableFilter<"Animals"> | string | null
    city?: StringFilter<"Animals"> | string
    longitude?: StringFilter<"Animals"> | string
    latitude?: StringFilter<"Animals"> | string
    image?: StringFilter<"Animals"> | string
    amount?: IntFilter<"Animals"> | number
    id_user?: IntFilter<"Animals"> | number
    date?: DateTimeNullableFilter<"Animals"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"Animals"> | Date | string | null
  }

  export type Request_DatasUpsertWithWhereUniqueWithoutUserInput = {
    where: Request_DatasWhereUniqueInput
    update: XOR<Request_DatasUpdateWithoutUserInput, Request_DatasUncheckedUpdateWithoutUserInput>
    create: XOR<Request_DatasCreateWithoutUserInput, Request_DatasUncheckedCreateWithoutUserInput>
  }

  export type Request_DatasUpdateWithWhereUniqueWithoutUserInput = {
    where: Request_DatasWhereUniqueInput
    data: XOR<Request_DatasUpdateWithoutUserInput, Request_DatasUncheckedUpdateWithoutUserInput>
  }

  export type Request_DatasUpdateManyWithWhereWithoutUserInput = {
    where: Request_DatasScalarWhereInput
    data: XOR<Request_DatasUpdateManyMutationInput, Request_DatasUncheckedUpdateManyWithoutUserInput>
  }

  export type Request_DatasScalarWhereInput = {
    AND?: Request_DatasScalarWhereInput | Request_DatasScalarWhereInput[]
    OR?: Request_DatasScalarWhereInput[]
    NOT?: Request_DatasScalarWhereInput | Request_DatasScalarWhereInput[]
    id_request_data?: IntFilter<"Request_Datas"> | number
    name?: StringFilter<"Request_Datas"> | string
    email?: StringFilter<"Request_Datas"> | string
    profession?: StringFilter<"Request_Datas"> | string
    instances?: StringFilter<"Request_Datas"> | string
    subject?: StringFilter<"Request_Datas"> | string
    body?: StringFilter<"Request_Datas"> | string
    date?: DateTimeFilter<"Request_Datas"> | Date | string
    approve?: IntFilter<"Request_Datas"> | number
    id_user?: IntFilter<"Request_Datas"> | number
    url?: StringFilter<"Request_Datas"> | string
  }

  export type History_Request_DatasUpsertWithWhereUniqueWithoutUserInput = {
    where: History_Request_DatasWhereUniqueInput
    update: XOR<History_Request_DatasUpdateWithoutUserInput, History_Request_DatasUncheckedUpdateWithoutUserInput>
    create: XOR<History_Request_DatasCreateWithoutUserInput, History_Request_DatasUncheckedCreateWithoutUserInput>
  }

  export type History_Request_DatasUpdateWithWhereUniqueWithoutUserInput = {
    where: History_Request_DatasWhereUniqueInput
    data: XOR<History_Request_DatasUpdateWithoutUserInput, History_Request_DatasUncheckedUpdateWithoutUserInput>
  }

  export type History_Request_DatasUpdateManyWithWhereWithoutUserInput = {
    where: History_Request_DatasScalarWhereInput
    data: XOR<History_Request_DatasUpdateManyMutationInput, History_Request_DatasUncheckedUpdateManyWithoutUserInput>
  }

  export type History_Request_DatasCreateManySend_dataInput = {
    id_history_request_data?: number
    email: string
    name: string
    profession: string
    instances: string
    subject: string
    body: string
    id_user: number
    date?: Date | string | null
  }

  export type History_Request_DatasUpdateWithoutSend_dataInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UsersUpdateOneRequiredWithoutHistory_request_datasNestedInput
  }

  export type History_Request_DatasUncheckedUpdateWithoutSend_dataInput = {
    id_history_request_data?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    id_user?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type History_Request_DatasUncheckedUpdateManyWithoutSend_dataInput = {
    id_history_request_data?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    id_user?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AnimalsCreateManyUserInput = {
    id_animal?: number
    local_name: string
    latin_name: string
    habitat: string
    description?: string | null
    city: string
    longitude: string
    latitude: string
    image: string
    amount: number
    date?: Date | string | null
    updated_at?: Date | string | null
  }

  export type Request_DatasCreateManyUserInput = {
    id_request_data?: number
    name: string
    email: string
    profession: string
    instances: string
    subject: string
    body: string
    date?: Date | string
    approve: number
    url: string
  }

  export type History_Request_DatasCreateManyUserInput = {
    id_history_request_data?: number
    email: string
    name: string
    profession: string
    instances: string
    subject: string
    body: string
    id_send_data: number
    date?: Date | string | null
  }

  export type AnimalsUpdateWithoutUserInput = {
    local_name?: StringFieldUpdateOperationsInput | string
    latin_name?: StringFieldUpdateOperationsInput | string
    habitat?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    longitude?: StringFieldUpdateOperationsInput | string
    latitude?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AnimalsUncheckedUpdateWithoutUserInput = {
    id_animal?: IntFieldUpdateOperationsInput | number
    local_name?: StringFieldUpdateOperationsInput | string
    latin_name?: StringFieldUpdateOperationsInput | string
    habitat?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    longitude?: StringFieldUpdateOperationsInput | string
    latitude?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AnimalsUncheckedUpdateManyWithoutUserInput = {
    id_animal?: IntFieldUpdateOperationsInput | number
    local_name?: StringFieldUpdateOperationsInput | string
    latin_name?: StringFieldUpdateOperationsInput | string
    habitat?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    longitude?: StringFieldUpdateOperationsInput | string
    latitude?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type Request_DatasUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
  }

  export type Request_DatasUncheckedUpdateWithoutUserInput = {
    id_request_data?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
  }

  export type Request_DatasUncheckedUpdateManyWithoutUserInput = {
    id_request_data?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    approve?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
  }

  export type History_Request_DatasUpdateWithoutUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    send_data?: Send_DatasUpdateOneRequiredWithoutHistory_Request_DatasNestedInput
  }

  export type History_Request_DatasUncheckedUpdateWithoutUserInput = {
    id_history_request_data?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    id_send_data?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type History_Request_DatasUncheckedUpdateManyWithoutUserInput = {
    id_history_request_data?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    profession?: StringFieldUpdateOperationsInput | string
    instances?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    body?: StringFieldUpdateOperationsInput | string
    id_send_data?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use Send_DatasCountOutputTypeDefaultArgs instead
     */
    export type Send_DatasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Send_DatasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsersCountOutputTypeDefaultArgs instead
     */
    export type UsersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AdminsDefaultArgs instead
     */
    export type AdminsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AdminsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AnimalsDefaultArgs instead
     */
    export type AnimalsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AnimalsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use History_Request_DatasDefaultArgs instead
     */
    export type History_Request_DatasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = History_Request_DatasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OtpsDefaultArgs instead
     */
    export type OtpsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OtpsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Request_AccountsDefaultArgs instead
     */
    export type Request_AccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Request_AccountsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Request_DatasDefaultArgs instead
     */
    export type Request_DatasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Request_DatasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Send_DatasDefaultArgs instead
     */
    export type Send_DatasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Send_DatasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsersDefaultArgs instead
     */
    export type UsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}